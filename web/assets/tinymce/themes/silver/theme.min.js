!function(){"use strict";const getPrototypeOf$2=Object.getPrototypeOf,hasProto=(v,constructor,predicate)=>{var _a;return!!predicate(v,constructor.prototype)||(null===(_a=v.constructor)||void 0===_a?void 0:_a.name)===constructor.name},isType$1=type=>value=>(x=>{const t=typeof x;return null===x?"null":"object"===t&&Array.isArray(x)?"array":"object"===t&&hasProto(x,String,((o,proto)=>proto.isPrototypeOf(o)))?"string":t})(value)===type,isSimpleType=type=>value=>typeof value===type,eq$1=t=>a=>t===a,isString=isType$1("string"),isObject=isType$1("object"),isPlainObject=value=>((value,constructor)=>isObject(value)&&hasProto(value,constructor,((o,proto)=>getPrototypeOf$2(o)===proto)))(value,Object),isArray=isType$1("array"),isNull=eq$1(null),isBoolean=isSimpleType("boolean"),isUndefined=eq$1(void 0),isNullable=a=>null==a,isNonNullable=a=>!isNullable(a),isFunction=isSimpleType("function"),isNumber=isSimpleType("number"),isArrayOf=(value,pred)=>{if(isArray(value)){for(let i=0,len=value.length;i<len;++i)if(!pred(value[i]))return!1;return!0}return!1},noop=()=>{},noarg=f=>()=>f(),compose=(fa,fb)=>(...args)=>fa(fb.apply(null,args)),constant$1=value=>()=>value,identity=x=>x,tripleEquals=(a,b)=>a===b;function curry(fn,...initialArgs){return(...restArgs)=>{const all=initialArgs.concat(restArgs);return fn.apply(null,all)}}const not=f=>t=>!f(t),die=msg=>()=>{throw new Error(msg)},apply$1=f=>f(),never=constant$1(!1),always=constant$1(!0);class Optional{constructor(tag,value){this.tag=tag,this.value=value}static some(value){return new Optional(!0,value)}static none(){return Optional.singletonNone}fold(onNone,onSome){return this.tag?onSome(this.value):onNone()}isSome(){return this.tag}isNone(){return!this.tag}map(mapper){return this.tag?Optional.some(mapper(this.value)):Optional.none()}bind(binder){return this.tag?binder(this.value):Optional.none()}exists(predicate){return this.tag&&predicate(this.value)}forall(predicate){return!this.tag||predicate(this.value)}filter(predicate){return!this.tag||predicate(this.value)?this:Optional.none()}getOr(replacement){return this.tag?this.value:replacement}or(replacement){return this.tag?this:replacement}getOrThunk(thunk){return this.tag?this.value:thunk()}orThunk(thunk){return this.tag?this:thunk()}getOrDie(message){if(this.tag)return this.value;throw new Error(null!=message?message:"Called getOrDie on None")}static from(value){return isNonNullable(value)?Optional.some(value):Optional.none()}getOrNull(){return this.tag?this.value:null}getOrUndefined(){return this.value}each(worker){this.tag&&worker(this.value)}toArray(){return this.tag?[this.value]:[]}toString(){return this.tag?`some(${this.value})`:"none()"}}Optional.singletonNone=new Optional(!1);const nativeSlice=Array.prototype.slice,nativeIndexOf=Array.prototype.indexOf,nativePush=Array.prototype.push,rawIndexOf=(ts,t)=>nativeIndexOf.call(ts,t),indexOf=(xs,x)=>{const r=rawIndexOf(xs,x);return-1===r?Optional.none():Optional.some(r)},contains$2=(xs,x)=>rawIndexOf(xs,x)>-1,exists=(xs,pred)=>{for(let i=0,len=xs.length;i<len;i++){if(pred(xs[i],i))return!0}return!1},range$2=(num,f)=>{const r=[];for(let i=0;i<num;i++)r.push(f(i));return r},chunk$1=(array,size)=>{const r=[];for(let i=0;i<array.length;i+=size){const s=nativeSlice.call(array,i,i+size);r.push(s)}return r},map$2=(xs,f)=>{const len=xs.length,r=new Array(len);for(let i=0;i<len;i++){const x=xs[i];r[i]=f(x,i)}return r},each$1=(xs,f)=>{for(let i=0,len=xs.length;i<len;i++){f(xs[i],i)}},partition$3=(xs,pred)=>{const pass=[],fail=[];for(let i=0,len=xs.length;i<len;i++){const x=xs[i];(pred(x,i)?pass:fail).push(x)}return{pass:pass,fail:fail}},filter$2=(xs,pred)=>{const r=[];for(let i=0,len=xs.length;i<len;i++){const x=xs[i];pred(x,i)&&r.push(x)}return r},foldr=(xs,f,acc)=>(((xs,f)=>{for(let i=xs.length-1;i>=0;i--)f(xs[i],i)})(xs,((x,i)=>{acc=f(acc,x,i)})),acc),foldl=(xs,f,acc)=>(each$1(xs,((x,i)=>{acc=f(acc,x,i)})),acc),find$5=(xs,pred)=>((xs,pred,until)=>{for(let i=0,len=xs.length;i<len;i++){const x=xs[i];if(pred(x,i))return Optional.some(x);if(until(x,i))break}return Optional.none()})(xs,pred,never),findIndex$1=(xs,pred)=>{for(let i=0,len=xs.length;i<len;i++){if(pred(xs[i],i))return Optional.some(i)}return Optional.none()},flatten=xs=>{const r=[];for(let i=0,len=xs.length;i<len;++i){if(!isArray(xs[i]))throw new Error("Arr.flatten item "+i+" was not an array, input: "+xs);nativePush.apply(r,xs[i])}return r},bind$3=(xs,f)=>flatten(map$2(xs,f)),forall=(xs,pred)=>{for(let i=0,len=xs.length;i<len;++i){if(!0!==pred(xs[i],i))return!1}return!0},reverse=xs=>{const r=nativeSlice.call(xs,0);return r.reverse(),r},difference=(a1,a2)=>filter$2(a1,(x=>!contains$2(a2,x))),mapToObject=(xs,f)=>{const r={};for(let i=0,len=xs.length;i<len;i++){const x=xs[i];r[String(x)]=f(x,i)}return r},pure$2=x=>[x],sort=(xs,comparator)=>{const copy=nativeSlice.call(xs,0);return copy.sort(comparator),copy},get$h=(xs,i)=>i>=0&&i<xs.length?Optional.some(xs[i]):Optional.none(),head=xs=>get$h(xs,0),last$1=xs=>get$h(xs,xs.length-1),from=isFunction(Array.from)?Array.from:x=>nativeSlice.call(x),findMap=(arr,f)=>{for(let i=0;i<arr.length;i++){const r=f(arr[i],i);if(r.isSome())return r}return Optional.none()},keys=Object.keys,hasOwnProperty=Object.hasOwnProperty,each=(obj,f)=>{const props=keys(obj);for(let k=0,len=props.length;k<len;k++){const i=props[k];f(obj[i],i)}},map$1=(obj,f)=>tupleMap(obj,((x,i)=>({k:i,v:f(x,i)}))),tupleMap=(obj,f)=>{const r={};return each(obj,((x,i)=>{const tuple=f(x,i);r[tuple.k]=tuple.v})),r},objAcc=r=>(x,i)=>{r[i]=x},internalFilter=(obj,pred,onTrue,onFalse)=>{each(obj,((x,i)=>{(pred(x,i)?onTrue:onFalse)(x,i)}))},filter$1=(obj,pred)=>{const t={};return internalFilter(obj,pred,objAcc(t),noop),t},mapToArray=(obj,f)=>{const r=[];return each(obj,((value,name)=>{r.push(f(value,name))})),r},find$4=(obj,pred)=>{const props=keys(obj);for(let k=0,len=props.length;k<len;k++){const i=props[k],x=obj[i];if(pred(x,i,obj))return Optional.some(x)}return Optional.none()},values=obj=>mapToArray(obj,identity),get$g=(obj,key)=>has$2(obj,key)?Optional.from(obj[key]):Optional.none(),has$2=(obj,key)=>hasOwnProperty.call(obj,key),hasNonNullableKey=(obj,key)=>has$2(obj,key)&&void 0!==obj[key]&&null!==obj[key],is$1=(lhs,rhs,comparator=tripleEquals)=>lhs.exists((left=>comparator(left,rhs))),cat=arr=>{const r=[],push=x=>{r.push(x)};for(let i=0;i<arr.length;i++)arr[i].each(push);return r},lift2=(oa,ob,f)=>oa.isSome()&&ob.isSome()?Optional.some(f(oa.getOrDie(),ob.getOrDie())):Optional.none(),mapFrom=(a,f)=>null!=a?Optional.some(f(a)):Optional.none(),someIf=(b,a)=>b?Optional.some(a):Optional.none(),checkRange=(str,substr,start)=>""===substr||str.length>=substr.length&&str.substr(start,start+substr.length)===substr,removeLeading=(str,prefix)=>startsWith(str,prefix)?((str,numChars)=>str.substring(numChars))(str,prefix.length):str,contains$1=(str,substr,start=0,end)=>{const idx=str.indexOf(substr,start);return-1!==idx&&(!!isUndefined(end)||idx+substr.length<=end)},startsWith=(str,prefix)=>checkRange(str,prefix,0),endsWith=(str,suffix)=>checkRange(str,suffix,str.length-suffix.length),trim$1=(r=>s=>s.replace(r,""))(/^\s+|\s+$/g),isNotEmpty=s=>s.length>0,isEmpty=s=>!isNotEmpty(s),isSupported$1=dom=>void 0!==dom.style&&isFunction(dom.style.getPropertyValue),fromDom=node=>{if(null==node)throw new Error("Node cannot be null or undefined");return{dom:node}},SugarElement={fromHtml:(html,scope)=>{const div=(scope||document).createElement("div");if(div.innerHTML=html,!div.hasChildNodes()||div.childNodes.length>1){const message="HTML does not have a single root node";throw console.error(message,html),new Error(message)}return fromDom(div.childNodes[0])},fromTag:(tag,scope)=>{const node=(scope||document).createElement(tag);return fromDom(node)},fromText:(text,scope)=>{const node=(scope||document).createTextNode(text);return fromDom(node)},fromDom:fromDom,fromPoint:(docElm,x,y)=>Optional.from(docElm.dom.elementFromPoint(x,y)).map(fromDom)},Global="undefined"!=typeof window?window:Function("return this;")(),resolve=(p,scope)=>((parts,scope)=>{let o=null!=scope?scope:Global;for(let i=0;i<parts.length&&null!=o;++i)o=o[parts[i]];return o})(p.split("."),scope),getOrDie$1=(name,scope)=>{const actual=((name,scope)=>resolve(name,scope))(name,scope);if(null==actual)throw new Error(name+" not available on this browser");return actual},getPrototypeOf$1=Object.getPrototypeOf,isPrototypeOf=x=>{const scope=resolve("ownerDocument.defaultView",x);return isObject(x)&&((scope=>getOrDie$1("HTMLElement",scope))(scope).prototype.isPrototypeOf(x)||/^HTML\w*Element$/.test(getPrototypeOf$1(x).constructor.name))},name$3=element=>element.dom.nodeName.toLowerCase(),isType=t=>element=>(element=>element.dom.nodeType)(element)===t,isHTMLElement=element=>isElement$1(element)&&isPrototypeOf(element.dom),isElement$1=isType(1),isText=isType(3),isDocument=isType(9),isDocumentFragment=isType(11),isTag=tag=>e=>isElement$1(e)&&name$3(e)===tag,is=(element,selector)=>{const dom=element.dom;if(1!==dom.nodeType)return!1;{const elem=dom;if(void 0!==elem.matches)return elem.matches(selector);if(void 0!==elem.msMatchesSelector)return elem.msMatchesSelector(selector);if(void 0!==elem.webkitMatchesSelector)return elem.webkitMatchesSelector(selector);if(void 0!==elem.mozMatchesSelector)return elem.mozMatchesSelector(selector);throw new Error("Browser lacks native selectors")}},bypassSelector=dom=>1!==dom.nodeType&&9!==dom.nodeType&&11!==dom.nodeType||0===dom.childElementCount,eq=(e1,e2)=>e1.dom===e2.dom,contains=(e1,e2)=>{const d1=e1.dom,d2=e2.dom;return d1!==d2&&d1.contains(d2)},owner$4=element=>SugarElement.fromDom(element.dom.ownerDocument),documentOrOwner=dos=>isDocument(dos)?dos:owner$4(dos),documentElement=element=>SugarElement.fromDom(documentOrOwner(element).dom.documentElement),defaultView=element=>SugarElement.fromDom(documentOrOwner(element).dom.defaultView),parent=element=>Optional.from(element.dom.parentNode).map(SugarElement.fromDom),parentElement=element=>Optional.from(element.dom.parentElement).map(SugarElement.fromDom),offsetParent=element=>Optional.from(element.dom.offsetParent).map(SugarElement.fromDom),children=element=>map$2(element.dom.childNodes,SugarElement.fromDom),child$2=(element,index)=>{const cs=element.dom.childNodes;return Optional.from(cs[index]).map(SugarElement.fromDom)},firstChild=element=>child$2(element,0),spot=(element,offset)=>({element:element,offset:offset}),leaf=(element,offset)=>{const cs=children(element);return cs.length>0&&offset<cs.length?spot(cs[offset],0):spot(element,offset)},isShadowRoot=dos=>isDocumentFragment(dos)&&isNonNullable(dos.dom.host),supported=isFunction(Element.prototype.attachShadow)&&isFunction(Node.prototype.getRootNode),isSupported=constant$1(supported),getRootNode=supported?e=>SugarElement.fromDom(e.dom.getRootNode()):documentOrOwner,getContentContainer=dos=>isShadowRoot(dos)?dos:SugarElement.fromDom(documentOrOwner(dos).dom.body),getShadowRoot=e=>{const r=getRootNode(e);return isShadowRoot(r)?Optional.some(r):Optional.none()},getShadowHost=e=>SugarElement.fromDom(e.dom.host),isOpenShadowHost=element=>isNonNullable(element.dom.shadowRoot),inBody=element=>{const dom=isText(element)?element.dom.parentNode:element.dom;if(null==dom||null===dom.ownerDocument)return!1;const doc=dom.ownerDocument;return getShadowRoot(SugarElement.fromDom(dom)).fold((()=>doc.body.contains(dom)),(fbc=inBody,fab=getShadowHost,a=>fbc(fab(a))));var fbc,fab},body=()=>getBody(SugarElement.fromDom(document)),getBody=doc=>{const b=doc.dom.body;if(null==b)throw new Error("Body is not available yet");return SugarElement.fromDom(b)},rawSet=(dom,key,value)=>{if(!(isString(value)||isBoolean(value)||isNumber(value)))throw console.error("Invalid call to Attribute.set. Key ",key,":: Value ",value,":: Element ",dom),new Error("Attribute value was not simple");dom.setAttribute(key,value+"")},set$9=(element,key,value)=>{rawSet(element.dom,key,value)},setAll$1=(element,attrs)=>{const dom=element.dom;each(attrs,((v,k)=>{rawSet(dom,k,v)}))},get$f=(element,key)=>{const v=element.dom.getAttribute(key);return null===v?void 0:v},getOpt=(element,key)=>Optional.from(get$f(element,key)),has$1=(element,key)=>{const dom=element.dom;return!(!dom||!dom.hasAttribute)&&dom.hasAttribute(key)},remove$7=(element,key)=>{element.dom.removeAttribute(key)},internalSet=(dom,property,value)=>{if(!isString(value))throw console.error("Invalid call to CSS.set. Property ",property,":: Value ",value,":: Element ",dom),new Error("CSS value must be a string: "+value);isSupported$1(dom)&&dom.style.setProperty(property,value)},internalRemove=(dom,property)=>{isSupported$1(dom)&&dom.style.removeProperty(property)},set$8=(element,property,value)=>{const dom=element.dom;internalSet(dom,property,value)},setAll=(element,css)=>{const dom=element.dom;each(css,((v,k)=>{internalSet(dom,k,v)}))},setOptions=(element,css)=>{const dom=element.dom;each(css,((v,k)=>{v.fold((()=>{internalRemove(dom,k)}),(value=>{internalSet(dom,k,value)}))}))},get$e=(element,property)=>{const dom=element.dom,r=window.getComputedStyle(dom).getPropertyValue(property);return""!==r||inBody(element)?r:getUnsafeProperty(dom,property)},getUnsafeProperty=(dom,property)=>isSupported$1(dom)?dom.style.getPropertyValue(property):"",getRaw=(element,property)=>{const dom=element.dom,raw=getUnsafeProperty(dom,property);return Optional.from(raw).filter((r=>r.length>0))},getAllRaw=element=>{const css={},dom=element.dom;if(isSupported$1(dom))for(let i=0;i<dom.style.length;i++){const ruleName=dom.style.item(i);css[ruleName]=dom.style[ruleName]}return css},isValidValue$1=(tag,property,value)=>{const element=SugarElement.fromTag(tag);set$8(element,property,value);return getRaw(element,property).isSome()},remove$6=(element,property)=>{const dom=element.dom;internalRemove(dom,property),is$1(getOpt(element,"style").map(trim$1),"")&&remove$7(element,"style")},reflow=e=>e.dom.offsetWidth,Dimension=(name,getOffset)=>{const get=element=>{const r=getOffset(element);if(r<=0||null===r){const css=get$e(element,name);return parseFloat(css)||0}return r},aggregate=(element,properties)=>foldl(properties,((acc,property)=>{const val=get$e(element,property),value=void 0===val?0:parseInt(val,10);return isNaN(value)?acc:acc+value}),0);return{set:(element,h)=>{if(!isNumber(h)&&!h.match(/^[0-9]+$/))throw new Error(name+".set accepts only positive integer values. Value was "+h);const dom=element.dom;isSupported$1(dom)&&(dom.style[name]=h+"px")},get:get,getOuter:get,aggregate:aggregate,max:(element,value,properties)=>{const cumulativeInclusions=aggregate(element,properties);return value>cumulativeInclusions?value-cumulativeInclusions:0}}},api$2=Dimension("height",(element=>{const dom=element.dom;return inBody(element)?dom.getBoundingClientRect().height:dom.offsetHeight})),get$d=element=>api$2.get(element),getOuter$2=element=>api$2.getOuter(element),r$1=(left,top)=>({left:left,top:top,translate:(x,y)=>r$1(left+x,top+y)}),SugarPosition=r$1,firstDefinedOrZero=(a,b)=>void 0!==a?a:void 0!==b?b:0,absolute$3=element=>{const doc=element.dom.ownerDocument,body=doc.body,win=doc.defaultView,html=doc.documentElement;if(body===element.dom)return SugarPosition(body.offsetLeft,body.offsetTop);const scrollTop=firstDefinedOrZero(null==win?void 0:win.pageYOffset,html.scrollTop),scrollLeft=firstDefinedOrZero(null==win?void 0:win.pageXOffset,html.scrollLeft),clientTop=firstDefinedOrZero(html.clientTop,body.clientTop),clientLeft=firstDefinedOrZero(html.clientLeft,body.clientLeft);return viewport$1(element).translate(scrollLeft-clientLeft,scrollTop-clientTop)},viewport$1=element=>{const dom=element.dom,body=dom.ownerDocument.body;return body===dom?SugarPosition(body.offsetLeft,body.offsetTop):inBody(element)?(dom=>{const box=dom.getBoundingClientRect();return SugarPosition(box.left,box.top)})(dom):SugarPosition(0,0)},api$1=Dimension("width",(element=>element.dom.offsetWidth)),get$c=element=>api$1.get(element),getOuter$1=element=>api$1.getOuter(element),cached=f=>{let r,called=!1;return(...args)=>(called||(called=!0,r=f.apply(null,args)),r)},unknown$3=()=>nu$d(0,0),nu$d=(major,minor)=>({major:major,minor:minor}),Version={nu:nu$d,detect:(versionRegexes,agent)=>{const cleanedAgent=String(agent).toLowerCase();return 0===versionRegexes.length?unknown$3():((regexes,agent)=>{const r=((regexes,s)=>{for(let i=0;i<regexes.length;i++){const x=regexes[i];if(x.test(s))return x}})(regexes,agent);if(!r)return{major:0,minor:0};const group=i=>Number(agent.replace(r,"$"+i));return nu$d(group(1),group(2))})(versionRegexes,cleanedAgent)},unknown:unknown$3},detect$4=(candidates,userAgent)=>{const agent=String(userAgent).toLowerCase();return find$5(candidates,(candidate=>candidate.search(agent)))},normalVersionRegex=/.*?version\/\ ?([0-9]+)\.([0-9]+).*/,checkContains=target=>uastring=>contains$1(uastring,target),browsers=[{name:"Edge",versionRegexes:[/.*?edge\/ ?([0-9]+)\.([0-9]+)$/],search:uastring=>contains$1(uastring,"edge/")&&contains$1(uastring,"chrome")&&contains$1(uastring,"safari")&&contains$1(uastring,"applewebkit")},{name:"Chromium",brand:"Chromium",versionRegexes:[/.*?chrome\/([0-9]+)\.([0-9]+).*/,normalVersionRegex],search:uastring=>contains$1(uastring,"chrome")&&!contains$1(uastring,"chromeframe")},{name:"IE",versionRegexes:[/.*?msie\ ?([0-9]+)\.([0-9]+).*/,/.*?rv:([0-9]+)\.([0-9]+).*/],search:uastring=>contains$1(uastring,"msie")||contains$1(uastring,"trident")},{name:"Opera",versionRegexes:[normalVersionRegex,/.*?opera\/([0-9]+)\.([0-9]+).*/],search:checkContains("opera")},{name:"Firefox",versionRegexes:[/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/],search:checkContains("firefox")},{name:"Safari",versionRegexes:[normalVersionRegex,/.*?cpu os ([0-9]+)_([0-9]+).*/],search:uastring=>(contains$1(uastring,"safari")||contains$1(uastring,"mobile/"))&&contains$1(uastring,"applewebkit")}],oses=[{name:"Windows",search:checkContains("win"),versionRegexes:[/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/]},{name:"iOS",search:uastring=>contains$1(uastring,"iphone")||contains$1(uastring,"ipad"),versionRegexes:[/.*?version\/\ ?([0-9]+)\.([0-9]+).*/,/.*cpu os ([0-9]+)_([0-9]+).*/,/.*cpu iphone os ([0-9]+)_([0-9]+).*/]},{name:"Android",search:checkContains("android"),versionRegexes:[/.*?android\ ?([0-9]+)\.([0-9]+).*/]},{name:"macOS",search:checkContains("mac os x"),versionRegexes:[/.*?mac\ os\ x\ ?([0-9]+)_([0-9]+).*/]},{name:"Linux",search:checkContains("linux"),versionRegexes:[]},{name:"Solaris",search:checkContains("sunos"),versionRegexes:[]},{name:"FreeBSD",search:checkContains("freebsd"),versionRegexes:[]},{name:"ChromeOS",search:checkContains("cros"),versionRegexes:[/.*?chrome\/([0-9]+)\.([0-9]+).*/]}],PlatformInfo={browsers:constant$1(browsers),oses:constant$1(oses)},nu$c=info=>{const current=info.current,version=info.version,isBrowser=name=>()=>current===name;return{current:current,version:version,isEdge:isBrowser("Edge"),isChromium:isBrowser("Chromium"),isIE:isBrowser("IE"),isOpera:isBrowser("Opera"),isFirefox:isBrowser("Firefox"),isSafari:isBrowser("Safari")}},Browser={unknown:()=>nu$c({current:void 0,version:Version.unknown()}),nu:nu$c,edge:constant$1("Edge"),chromium:constant$1("Chromium"),ie:constant$1("IE"),opera:constant$1("Opera"),firefox:constant$1("Firefox"),safari:constant$1("Safari")},nu$b=info=>{const current=info.current,version=info.version,isOS=name=>()=>current===name;return{current:current,version:version,isWindows:isOS("Windows"),isiOS:isOS("iOS"),isAndroid:isOS("Android"),isMacOS:isOS("macOS"),isLinux:isOS("Linux"),isSolaris:isOS("Solaris"),isFreeBSD:isOS("FreeBSD"),isChromeOS:isOS("ChromeOS")}},OperatingSystem={unknown:()=>nu$b({current:void 0,version:Version.unknown()}),nu:nu$b,windows:constant$1("Windows"),ios:constant$1("iOS"),android:constant$1("Android"),linux:constant$1("Linux"),macos:constant$1("macOS"),solaris:constant$1("Solaris"),freebsd:constant$1("FreeBSD"),chromeos:constant$1("ChromeOS")},PlatformDetection_detect=(userAgent,userAgentDataOpt,mediaMatch)=>{const browsers=PlatformInfo.browsers(),oses=PlatformInfo.oses(),browser=userAgentDataOpt.bind((userAgentData=>((browsers,userAgentData)=>findMap(userAgentData.brands,(uaBrand=>{const lcBrand=uaBrand.brand.toLowerCase();return find$5(browsers,(browser=>{var _a;return lcBrand===(null===(_a=browser.brand)||void 0===_a?void 0:_a.toLowerCase())})).map((info=>({current:info.name,version:Version.nu(parseInt(uaBrand.version,10),0)})))})))(browsers,userAgentData))).orThunk((()=>((browsers,userAgent)=>detect$4(browsers,userAgent).map((browser=>{const version=Version.detect(browser.versionRegexes,userAgent);return{current:browser.name,version:version}})))(browsers,userAgent))).fold(Browser.unknown,Browser.nu),os=((oses,userAgent)=>detect$4(oses,userAgent).map((os=>{const version=Version.detect(os.versionRegexes,userAgent);return{current:os.name,version:version}})))(oses,userAgent).fold(OperatingSystem.unknown,OperatingSystem.nu),deviceType=((os,browser,userAgent,mediaMatch)=>{const isiPad=os.isiOS()&&!0===/ipad/i.test(userAgent),isiPhone=os.isiOS()&&!isiPad,isMobile=os.isiOS()||os.isAndroid(),isTouch=isMobile||mediaMatch("(pointer:coarse)"),isTablet=isiPad||!isiPhone&&isMobile&&mediaMatch("(min-device-width:768px)"),isPhone=isiPhone||isMobile&&!isTablet,iOSwebview=browser.isSafari()&&os.isiOS()&&!1===/safari/i.test(userAgent),isDesktop=!isPhone&&!isTablet&&!iOSwebview;return{isiPad:constant$1(isiPad),isiPhone:constant$1(isiPhone),isTablet:constant$1(isTablet),isPhone:constant$1(isPhone),isTouch:constant$1(isTouch),isAndroid:os.isAndroid,isiOS:os.isiOS,isWebView:constant$1(iOSwebview),isDesktop:constant$1(isDesktop)}})(os,browser,userAgent,mediaMatch);return{browser:browser,os:os,deviceType:deviceType}},mediaMatch=query=>window.matchMedia(query).matches;let platform=cached((()=>PlatformDetection_detect(navigator.userAgent,Optional.from(navigator.userAgentData),mediaMatch)));const detect$2=()=>platform(),fromRawEvent$1=rawEvent=>{const target=SugarElement.fromDom((event=>{if(isSupported()&&isNonNullable(event.target)){const el=SugarElement.fromDom(event.target);if(isElement$1(el)&&isOpenShadowHost(el)&&event.composed&&event.composedPath){const composedPath=event.composedPath();if(composedPath)return head(composedPath)}}return Optional.from(event.target)})(rawEvent).getOr(rawEvent.target)),stop=()=>rawEvent.stopPropagation(),prevent=()=>rawEvent.preventDefault(),kill=compose(prevent,stop);return((target,x,y,stop,prevent,kill,raw)=>({target:target,x:x,y:y,stop:stop,prevent:prevent,kill:kill,raw:raw}))(target,rawEvent.clientX,rawEvent.clientY,stop,prevent,kill,rawEvent)},binder=(element,event,filter,handler,useCapture)=>{const wrapped=((filter,handler)=>rawEvent=>{filter(rawEvent)&&handler(fromRawEvent$1(rawEvent))})(filter,handler);return element.dom.addEventListener(event,wrapped,useCapture),{unbind:curry(unbind,element,event,wrapped,useCapture)}},unbind=(element,event,handler,useCapture)=>{element.dom.removeEventListener(event,handler,useCapture)},before$1=(marker,element)=>{parent(marker).each((v=>{v.dom.insertBefore(element.dom,marker.dom)}))},after$2=(marker,element)=>{const sibling=(element=>Optional.from(element.dom.nextSibling).map(SugarElement.fromDom))(marker);sibling.fold((()=>{parent(marker).each((v=>{append$2(v,element)}))}),(v=>{before$1(v,element)}))},prepend$1=(parent,element)=>{firstChild(parent).fold((()=>{append$2(parent,element)}),(v=>{parent.dom.insertBefore(element.dom,v.dom)}))},append$2=(parent,element)=>{parent.dom.appendChild(element.dom)},append$1=(parent,elements)=>{each$1(elements,(x=>{append$2(parent,x)}))},empty=element=>{element.dom.textContent="",each$1(children(element),(rogue=>{remove$5(rogue)}))},remove$5=element=>{const dom=element.dom;null!==dom.parentNode&&dom.parentNode.removeChild(dom)},get$b=_DOC=>{const doc=void 0!==_DOC?_DOC.dom:document,x=doc.body.scrollLeft||doc.documentElement.scrollLeft,y=doc.body.scrollTop||doc.documentElement.scrollTop;return SugarPosition(x,y)},to=(x,y,_DOC)=>{const win=(void 0!==_DOC?_DOC.dom:document).defaultView;win&&win.scrollTo(x,y)},bounds$1=(x,y,width,height)=>({x:x,y:y,width:width,height:height,right:x+width,bottom:y+height}),getBounds$3=_win=>{const win=void 0===_win?window:_win,doc=win.document,scroll=get$b(SugarElement.fromDom(doc));return(_win=>{const win=void 0===_win?window:_win;return detect$2().browser.isFirefox()?Optional.none():Optional.from(win.visualViewport)})(win).fold((()=>{const html=win.document.documentElement,width=html.clientWidth,height=html.clientHeight;return bounds$1(scroll.left,scroll.top,width,height)}),(visualViewport=>bounds$1(Math.max(visualViewport.pageLeft,scroll.left),Math.max(visualViewport.pageTop,scroll.top),visualViewport.width,visualViewport.height)))},getDocument=()=>SugarElement.fromDom(document),walkUp=(navigation,doc)=>navigation.view(doc).fold(constant$1([]),(f=>{const parent=navigation.owner(f),rest=walkUp(navigation,parent);return[f].concat(rest)}));var Navigation=Object.freeze({__proto__:null,view:doc=>{var _a;return(doc.dom===document?Optional.none():Optional.from(null===(_a=doc.dom.defaultView)||void 0===_a?void 0:_a.frameElement)).map(SugarElement.fromDom)},owner:element=>owner$4(element)});const find$2=element=>{const doc=getDocument(),scroll=get$b(doc),path=((element,navigation)=>{const d=navigation.owner(element),paths=walkUp(navigation,d);return Optional.some(paths)})(element,Navigation);return path.fold(curry(absolute$3,element),(frames=>{const offset=viewport$1(element),r=foldr(frames,((b,a)=>{const loc=viewport$1(a);return{left:b.left+loc.left,top:b.top+loc.top}}),{left:0,top:0});return SugarPosition(r.left+offset.left+scroll.left,r.top+offset.top+scroll.top)}))},bounds=(x,y,width,height)=>({x:x,y:y,width:width,height:height,right:x+width,bottom:y+height}),box$1=element=>{const xy=absolute$3(element),w=getOuter$1(element),h=getOuter$2(element);return bounds(xy.left,xy.top,w,h)},absolute$2=element=>{const position=find$2(element),width=getOuter$1(element),height=getOuter$2(element);return bounds(position.left,position.top,width,height)},constrain=(original,constraint)=>{const left=Math.max(original.x,constraint.x),top=Math.max(original.y,constraint.y),right=Math.min(original.right,constraint.right),bottom=Math.min(original.bottom,constraint.bottom);return bounds(left,top,right-left,bottom-top)},win=()=>getBounds$3(window);var global$a=tinymce.util.Tools.resolve("tinymce.ThemeManager");const value$4=value=>{const applyHelper=fn=>fn(value),constHelper=constant$1(value),outputHelper=()=>output,output={tag:!0,inner:value,fold:(_onError,onValue)=>onValue(value),isValue:always,isError:never,map:mapper=>Result.value(mapper(value)),mapError:outputHelper,bind:applyHelper,exists:applyHelper,forall:applyHelper,getOr:constHelper,or:outputHelper,getOrThunk:constHelper,orThunk:outputHelper,getOrDie:constHelper,each:fn=>{fn(value)},toOptional:()=>Optional.some(value)};return output},error$1=error=>{const outputHelper=()=>output,output={tag:!1,inner:error,fold:(onError,_onValue)=>onError(error),isValue:never,isError:always,map:outputHelper,mapError:mapper=>Result.error(mapper(error)),bind:outputHelper,exists:never,forall:always,getOr:identity,or:identity,getOrThunk:apply$1,orThunk:apply$1,getOrDie:die(String(error)),each:noop,toOptional:Optional.none};return output},Result={value:value$4,error:error$1,fromOption:(optional,err)=>optional.fold((()=>error$1(err)),value$4)};var SimpleResultType;!function(SimpleResultType){SimpleResultType[SimpleResultType.Error=0]="Error",SimpleResultType[SimpleResultType.Value=1]="Value"}(SimpleResultType||(SimpleResultType={}));const fold$1=(res,onError,onValue)=>res.stype===SimpleResultType.Error?onError(res.serror):onValue(res.svalue),svalue=v=>({stype:SimpleResultType.Value,svalue:v}),serror=e=>({stype:SimpleResultType.Error,serror:e}),SimpleResult_fromResult=res=>res.fold(serror,svalue),SimpleResult_toResult=res=>fold$1(res,Result.error,Result.value),SimpleResult_svalue=svalue,SimpleResult_partition=results=>{const values=[],errors=[];return each$1(results,(obj=>{fold$1(obj,(err=>errors.push(err)),(val=>values.push(val)))})),{values:values,errors:errors}},SimpleResult_serror=serror,SimpleResult_bind=(res,f)=>res.stype===SimpleResultType.Value?f(res.svalue):res,SimpleResult_bindError=(res,f)=>res.stype===SimpleResultType.Error?f(res.serror):res,SimpleResult_map=(res,f)=>res.stype===SimpleResultType.Value?{stype:SimpleResultType.Value,svalue:f(res.svalue)}:res,SimpleResult_mapError=(res,f)=>res.stype===SimpleResultType.Error?{stype:SimpleResultType.Error,serror:f(res.serror)}:res,SimpleResult_fold=fold$1,field$2=(key,newKey,presence,prop)=>({tag:"field",key:key,newKey:newKey,presence:presence,prop:prop}),fold=(value,ifField,ifCustom)=>{switch(value.tag){case"field":return ifField(value.key,value.newKey,value.presence,value.prop);case"custom":return ifCustom(value.newKey,value.instantiator)}},baseMerge=merger=>(...objects)=>{if(0===objects.length)throw new Error("Can't merge zero objects");const ret={};for(let j=0;j<objects.length;j++){const curObject=objects[j];for(const key in curObject)has$2(curObject,key)&&(ret[key]=merger(ret[key],curObject[key]))}return ret},deepMerge=baseMerge(((old,nu)=>isPlainObject(old)&&isPlainObject(nu)?deepMerge(old,nu):nu)),merge$1=baseMerge(((old,nu)=>nu)),defaultedThunk=fallbackThunk=>({tag:"defaultedThunk",process:fallbackThunk}),defaulted$1=fallback=>defaultedThunk(constant$1(fallback)),mergeWithThunk=baseThunk=>({tag:"mergeWithThunk",process:baseThunk}),mergeErrors$1=errors=>compose(SimpleResult_serror,flatten)(errors),ResultCombine_consolidateArr=objects=>{const partitions=SimpleResult_partition(objects);return partitions.errors.length>0?mergeErrors$1(partitions.errors):SimpleResult_svalue(partitions.values)},formatObj=input=>isObject(input)&&keys(input).length>100?" removed due to size":JSON.stringify(input,null,2),nu$a=(path,getErrorInfo)=>SimpleResult_serror([{path:path,getErrorInfo:getErrorInfo}]),value$3=validator=>({extract:(path,val)=>SimpleResult_bindError(validator(val),(err=>((path,err)=>nu$a(path,constant$1(err)))(path,err))),toString:constant$1("val")}),anyValue$1=value$3(SimpleResult_svalue),requiredAccess=(path,obj,key,bundle)=>get$g(obj,key).fold((()=>((path,key,obj)=>nu$a(path,(()=>'Could not find valid *required* value for "'+key+'" in '+formatObj(obj))))(path,key,obj)),bundle),fallbackAccess=(obj,key,fallback,bundle)=>bundle(get$g(obj,key).getOrThunk((()=>fallback(obj)))),extractField=(field,path,obj,key,prop)=>{const bundle=av=>prop.extract(path.concat([key]),av),bundleAsOption=optValue=>optValue.fold((()=>SimpleResult_svalue(Optional.none())),(ov=>{const result=prop.extract(path.concat([key]),ov);return SimpleResult_map(result,Optional.some)}));switch(field.tag){case"required":return requiredAccess(path,obj,key,bundle);case"defaultedThunk":return fallbackAccess(obj,key,field.process,bundle);case"option":return((obj,key,bundle)=>bundle(get$g(obj,key)))(obj,key,bundleAsOption);case"defaultedOptionThunk":return((obj,key,fallback,bundle)=>bundle(get$g(obj,key).map((val=>!0===val?fallback(obj):val))))(obj,key,field.process,bundleAsOption);case"mergeWithThunk":return fallbackAccess(obj,key,constant$1({}),(v=>{const result=deepMerge(field.process(obj),v);return bundle(result)}))}},valueThunk=getDelegate=>({extract:(path,val)=>getDelegate().extract(path,val),toString:()=>getDelegate().toString()}),getSetKeys=obj=>keys(filter$1(obj,isNonNullable)),objOfOnly=fields=>{const delegate=objOf(fields),fieldNames=foldr(fields,((acc,value)=>fold(value,(key=>deepMerge(acc,{[key]:!0})),constant$1(acc))),{});return{extract:(path,o)=>{const keys=isBoolean(o)?[]:getSetKeys(o),extra=filter$2(keys,(k=>!hasNonNullableKey(fieldNames,k)));return 0===extra.length?delegate.extract(path,o):((path,unsupported)=>nu$a(path,(()=>"There are unsupported fields: ["+unsupported.join(", ")+"] specified")))(path,extra)},toString:delegate.toString}},objOf=values=>({extract:(path,o)=>((path,obj,fields)=>{const success={},errors=[];for(const field of fields)fold(field,((key,newKey,presence,prop)=>{const result=extractField(presence,path,obj,key,prop);SimpleResult_fold(result,(err=>{errors.push(...err)}),(res=>{success[newKey]=res}))}),((newKey,instantiator)=>{success[newKey]=instantiator(obj)}));return errors.length>0?SimpleResult_serror(errors):SimpleResult_svalue(success)})(path,o,values),toString:()=>{const fieldStrings=map$2(values,(value=>fold(value,((key,_okey,_presence,prop)=>key+" -> "+prop.toString()),((newKey,_instantiator)=>"state("+newKey+")"))));return"obj{\n"+fieldStrings.join("\n")+"}"}}),arrOf=prop=>({extract:(path,array)=>{const results=map$2(array,((a,i)=>prop.extract(path.concat(["["+i+"]"]),a)));return ResultCombine_consolidateArr(results)},toString:()=>"array("+prop.toString()+")"}),oneOf=(props,rawF)=>{const f=void 0!==rawF?rawF:identity;return{extract:(path,val)=>{const errors=[];for(const prop of props){const res=prop.extract(path,val);if(res.stype===SimpleResultType.Value)return{stype:SimpleResultType.Value,svalue:f(res.svalue)};errors.push(res)}return ResultCombine_consolidateArr(errors)},toString:()=>"oneOf("+map$2(props,(prop=>prop.toString())).join(", ")+")"}},setOf$1=(validator,prop)=>({extract:(path,o)=>{const keys$1=keys(o),validatedKeys=((path,keys)=>arrOf(value$3(validator)).extract(path,keys))(path,keys$1);return SimpleResult_bind(validatedKeys,(validKeys=>{const schema=map$2(validKeys,(vk=>field$2(vk,vk,{tag:"required",process:{}},prop)));return objOf(schema).extract(path,o)}))},toString:()=>"setOf("+prop.toString()+")"}),arrOfObj=compose(arrOf,objOf),anyValue=constant$1(anyValue$1),typedValue=(validator,expectedType)=>value$3((a=>{const actualType=typeof a;return validator(a)?SimpleResult_svalue(a):SimpleResult_serror(`Expected type: ${expectedType} but got: ${actualType}`)})),number=typedValue(isNumber,"number"),string=typedValue(isString,"string"),boolean=typedValue(isBoolean,"boolean"),functionProcessor=typedValue(isFunction,"function"),isPostMessageable=val=>{if(Object(val)!==val)return!0;switch({}.toString.call(val).slice(8,-1)){case"Boolean":case"Number":case"String":case"Date":case"RegExp":case"Blob":case"FileList":case"ImageData":case"ImageBitmap":case"ArrayBuffer":return!0;case"Array":case"Object":return Object.keys(val).every((prop=>isPostMessageable(val[prop])));default:return!1}},postMessageable=value$3((a=>isPostMessageable(a)?SimpleResult_svalue(a):SimpleResult_serror("Expected value to be acceptable for sending via postMessage"))),chooseFrom=(path,input,branches,ch)=>get$g(branches,ch).fold((()=>((path,branches,branch)=>nu$a(path,(()=>'The chosen schema: "'+branch+'" did not exist in branches: '+formatObj(branches))))(path,branches,ch)),(vp=>vp.extract(path.concat(["branch: "+ch]),input))),choose$2=(key,branches)=>({extract:(path,input)=>get$g(input,key).fold((()=>((path,key)=>nu$a(path,(()=>'Choice schema did not contain choice key: "'+key+'"')))(path,key)),(chosen=>chooseFrom(path,input,branches,chosen))),toString:()=>"chooseOn("+key+"). Possible values: "+keys(branches)}),valueOf=validator=>value$3((v=>validator(v).fold(SimpleResult_serror,SimpleResult_svalue))),setOf=(validator,prop)=>setOf$1((v=>SimpleResult_fromResult(validator(v))),prop),asRaw=(label,prop,obj)=>SimpleResult_toResult(((label,prop,obj)=>{const res=prop.extract([label],obj);return SimpleResult_mapError(res,(errs=>({input:obj,errors:errs})))})(label,prop,obj)),getOrDie=extraction=>extraction.fold((errInfo=>{throw new Error(formatError(errInfo))}),identity),asRawOrDie$1=(label,prop,obj)=>getOrDie(asRaw(label,prop,obj)),formatError=errInfo=>"Errors: \n"+(errors=>{const es=errors.length>10?errors.slice(0,10).concat([{path:[],getErrorInfo:constant$1("... (only showing first ten failures)")}]):errors;return map$2(es,(e=>"Failed path: ("+e.path.join(" > ")+")\n"+e.getErrorInfo()))})(errInfo.errors).join("\n")+"\n\nInput object: "+formatObj(errInfo.input),choose$1=(key,branches)=>choose$2(key,map$1(branches,objOf)),thunkOf=(desc,schema)=>((_desc,processor)=>{const getP=cached(processor);return{extract:(path,val)=>getP().extract(path,val),toString:()=>getP().toString()}})(0,schema),field$1=field$2,customField=(newKey,instantiator)=>({tag:"custom",newKey:newKey,instantiator:instantiator}),validateEnum=values=>valueOf((value=>contains$2(values,value)?Result.value(value):Result.error(`Unsupported value: "${value}", choose one of "${values.join(", ")}".`))),required$1=key=>field$1(key,key,{tag:"required",process:{}},anyValue()),requiredOf=(key,schema)=>field$1(key,key,{tag:"required",process:{}},schema),requiredNumber=key=>requiredOf(key,number),requiredString=key=>requiredOf(key,string),requiredStringEnum=(key,values)=>field$1(key,key,{tag:"required",process:{}},validateEnum(values)),requiredFunction=key=>requiredOf(key,functionProcessor),requiredObjOf=(key,objSchema)=>field$1(key,key,{tag:"required",process:{}},objOf(objSchema)),requiredArrayOfObj=(key,objFields)=>field$1(key,key,{tag:"required",process:{}},arrOfObj(objFields)),requiredArrayOf=(key,schema)=>field$1(key,key,{tag:"required",process:{}},arrOf(schema)),option$3=key=>field$1(key,key,{tag:"option",process:{}},anyValue()),optionOf=(key,schema)=>field$1(key,key,{tag:"option",process:{}},schema),optionNumber=key=>optionOf(key,number),optionString=key=>optionOf(key,string),optionStringEnum=(key,values)=>optionOf(key,validateEnum(values)),optionFunction=key=>optionOf(key,functionProcessor),optionArrayOf=(key,schema)=>optionOf(key,arrOf(schema)),optionObjOf=(key,objSchema)=>optionOf(key,objOf(objSchema)),defaulted=(key,fallback)=>field$1(key,key,defaulted$1(fallback),anyValue()),defaultedOf=(key,fallback,schema)=>field$1(key,key,defaulted$1(fallback),schema),defaultedNumber=(key,fallback)=>defaultedOf(key,fallback,number),defaultedString=(key,fallback)=>defaultedOf(key,fallback,string),defaultedStringEnum=(key,fallback,values)=>defaultedOf(key,fallback,validateEnum(values)),defaultedBoolean=(key,fallback)=>defaultedOf(key,fallback,boolean),defaultedFunction=(key,fallback)=>defaultedOf(key,fallback,functionProcessor),defaultedArrayOf=(key,fallback,schema)=>defaultedOf(key,fallback,arrOf(schema)),defaultedObjOf=(key,fallback,objSchema)=>defaultedOf(key,fallback,objOf(objSchema)),Cell=initial=>{let value=initial;return{get:()=>value,set:v=>{value=v}}},Adt_generate=cases=>{if(!isArray(cases))throw new Error("cases must be an array");if(0===cases.length)throw new Error("there must be at least one case");const constructors=[],adt={};return each$1(cases,((acase,count)=>{const keys$1=keys(acase);if(1!==keys$1.length)throw new Error("one and only one name per case");const key=keys$1[0],value=acase[key];if(void 0!==adt[key])throw new Error("duplicate key detected:"+key);if("cata"===key)throw new Error("cannot have a case named cata (sorry)");if(!isArray(value))throw new Error("case arguments must be an array");constructors.push(key),adt[key]=(...args)=>{const argLength=args.length;if(argLength!==value.length)throw new Error("Wrong number of arguments to case "+key+". Expected "+value.length+" ("+value+"), got "+argLength);return{fold:(...foldArgs)=>{if(foldArgs.length!==cases.length)throw new Error("Wrong number of arguments to fold. Expected "+cases.length+", got "+foldArgs.length);return foldArgs[count].apply(null,args)},match:branches=>{const branchKeys=keys(branches);if(constructors.length!==branchKeys.length)throw new Error("Wrong number of arguments to match. Expected: "+constructors.join(",")+"\nActual: "+branchKeys.join(","));if(!forall(constructors,(reqKey=>contains$2(branchKeys,reqKey))))throw new Error("Not all branches were specified when using match. Specified: "+branchKeys.join(", ")+"\nRequired: "+constructors.join(", "));return branches[key].apply(null,args)},log:label=>{console.log(label,{constructors:constructors,constructor:key,params:args})}}}})),adt};Adt_generate([{bothErrors:["error1","error2"]},{firstError:["error1","value2"]},{secondError:["value1","error2"]},{bothValues:["value1","value2"]}]);const exclude=(obj,fields)=>((obj,fields)=>{const r={};return each(obj,((v,k)=>{contains$2(fields,k)||(r[k]=v)})),r})(obj,fields),wrap$1=(key,value)=>((key,value)=>({[key]:value}))(key,value),wrapAll=keyvalues=>(keyvalues=>{const r={};return each$1(keyvalues,(kv=>{r[kv.key]=kv.value})),r})(keyvalues),consolidate=(objs,base)=>{const partitions=(results=>{const errors=[],values=[];return each$1(results,(result=>{result.fold((err=>{errors.push(err)}),(value=>{values.push(value)}))})),{errors:errors,values:values}})(objs);return partitions.errors.length>0?(errors=partitions.errors,Result.error(flatten(errors))):((values,base)=>0===values.length?Result.value(base):Result.value(deepMerge(base,merge$1.apply(void 0,values))))(partitions.values,base);var errors},ensureIsRoot=isRoot=>isFunction(isRoot)?isRoot:never,ancestor$2=(scope,transform,isRoot)=>{let element=scope.dom;const stop=ensureIsRoot(isRoot);for(;element.parentNode;){element=element.parentNode;const el=SugarElement.fromDom(element),transformed=transform(el);if(transformed.isSome())return transformed;if(stop(el))break}return Optional.none()},closest$4=(scope,transform,isRoot)=>{const current=transform(scope),stop=ensureIsRoot(isRoot);return current.orThunk((()=>stop(scope)?Optional.none():ancestor$2(scope,transform,stop)))},isSource=(component,simulatedEvent)=>eq(component.element,simulatedEvent.event.target),defaultEventHandler={can:always,abort:never,run:noop},nu$9=parts=>{if(!hasNonNullableKey(parts,"can")&&!hasNonNullableKey(parts,"abort")&&!hasNonNullableKey(parts,"run"))throw new Error("EventHandler defined by: "+JSON.stringify(parts,null,2)+" does not have can, abort, or run!");return{...defaultEventHandler,...parts}},fuse$1=handlers=>{const can=((handlers,f)=>(...args)=>foldl(handlers,((acc,handler)=>acc&&f(handler).apply(void 0,args)),!0))(handlers,(handler=>handler.can)),abort=((handlers,f)=>(...args)=>foldl(handlers,((acc,handler)=>acc||f(handler).apply(void 0,args)),!1))(handlers,(handler=>handler.abort));return{can:can,abort:abort,run:(...args)=>{each$1(handlers,(handler=>{handler.run.apply(void 0,args)}))}}},constant=constant$1,touchstart=constant("touchstart"),touchmove=constant("touchmove"),touchend=constant("touchend"),touchcancel=constant("touchcancel"),mousedown=constant("mousedown"),mousemove=constant("mousemove"),mouseout=constant("mouseout"),mouseup=constant("mouseup"),mouseover=constant("mouseover"),focusin=constant("focusin"),focusout=constant("focusout"),keydown=constant("keydown"),keyup=constant("keyup"),input=constant("input"),change=constant("change"),click=constant("click"),transitioncancel=constant("transitioncancel"),transitionend=constant("transitionend"),transitionstart=constant("transitionstart"),selectstart=constant("selectstart"),prefixName=name=>constant$1("alloy."+name),alloy={tap:prefixName("tap")},focus$4=prefixName("focus"),postBlur=prefixName("blur.post"),postPaste=prefixName("paste.post"),receive=prefixName("receive"),execute$5=prefixName("execute"),focusItem=prefixName("focus.item"),tap=alloy.tap,longpress=prefixName("longpress"),sandboxClose=prefixName("sandbox.close"),typeaheadCancel=prefixName("typeahead.cancel"),systemInit=prefixName("system.init"),documentTouchmove=prefixName("system.touchmove"),documentTouchend=prefixName("system.touchend"),windowScroll=prefixName("system.scroll"),windowResize=prefixName("system.resize"),attachedToDom=prefixName("system.attached"),detachedFromDom=prefixName("system.detached"),dismissRequested=prefixName("system.dismissRequested"),repositionRequested=prefixName("system.repositionRequested"),focusShifted=prefixName("focusmanager.shifted"),slotVisibility=prefixName("slotcontainer.visibility"),externalElementScroll=prefixName("system.external.element.scroll"),changeTab=prefixName("change.tab"),dismissTab=prefixName("dismiss.tab"),highlight$1=prefixName("highlight"),dehighlight$1=prefixName("dehighlight"),emit=(component,event)=>{dispatchWith(component,component.element,event,{})},emitWith=(component,event,properties)=>{dispatchWith(component,component.element,event,properties)},emitExecute=component=>{emit(component,execute$5())},dispatch=(component,target,event)=>{dispatchWith(component,target,event,{})},dispatchWith=(component,target,event,properties)=>{const data={target:target,...properties};component.getSystem().triggerEvent(event,target,data)},dispatchEvent=(component,target,event,simulatedEvent)=>{component.getSystem().triggerEvent(event,target,simulatedEvent.event)},derive$2=configs=>wrapAll(configs),abort=(name,predicate)=>({key:name,value:nu$9({abort:predicate})}),preventDefault=name=>({key:name,value:nu$9({run:(component,simulatedEvent)=>{simulatedEvent.event.prevent()}})}),run$1=(name,handler)=>({key:name,value:nu$9({run:handler})}),runActionExtra=(name,action,extra)=>({key:name,value:nu$9({run:(component,simulatedEvent)=>{action.apply(void 0,[component,simulatedEvent].concat(extra))}})}),runOnSourceName=name=>handler=>({key:name,value:nu$9({run:(component,simulatedEvent)=>{isSource(component,simulatedEvent)&&handler(component,simulatedEvent)}})}),redirectToPart=(name,detail,partName)=>((name,uid)=>run$1(name,((component,simulatedEvent)=>{component.getSystem().getByUid(uid).each((redirectee=>{dispatchEvent(redirectee,redirectee.element,name,simulatedEvent)}))})))(name,detail.partUids[partName]),runWithTarget=(name,f)=>run$1(name,((component,simulatedEvent)=>{const ev=simulatedEvent.event,target=component.getSystem().getByDom(ev.target).getOrThunk((()=>closest$4(ev.target,(el=>component.getSystem().getByDom(el).toOptional()),never).getOr(component)));f(component,target,simulatedEvent)})),cutter=name=>run$1(name,((component,simulatedEvent)=>{simulatedEvent.cut()})),stopper=name=>run$1(name,((component,simulatedEvent)=>{simulatedEvent.stop()})),runOnSource=(name,f)=>runOnSourceName(name)(f),runOnAttached=runOnSourceName(attachedToDom()),runOnDetached=runOnSourceName(detachedFromDom()),runOnInit=runOnSourceName(systemInit()),runOnExecute$1=(name=>handler=>run$1(name,handler))(execute$5()),get$9=element=>element.dom.innerHTML,set$6=(element,content)=>{const docDom=owner$4(element).dom,fragment=SugarElement.fromDom(docDom.createDocumentFragment()),contentElements=((html,scope)=>{const div=(scope||document).createElement("div");return div.innerHTML=html,children(SugarElement.fromDom(div))})(content,docDom);append$1(fragment,contentElements),empty(element),append$2(element,fragment)},clone$1=(original,isDeep)=>SugarElement.fromDom(original.dom.cloneNode(isDeep)),getHtml=element=>{if(isShadowRoot(element))return"#shadow-root";{const clone=(original=>clone$1(original,!1))(element);return(element=>{const container=SugarElement.fromTag("div"),clone=SugarElement.fromDom(element.dom.cloneNode(!0));return append$2(container,clone),get$9(container)})(clone)}},element=elem=>getHtml(elem),events$i=derive$2([((name,predicate)=>({key:name,value:nu$9({can:predicate})}))(focus$4(),((component,simulatedEvent)=>{const event=simulatedEvent.event,originator=event.originator,target=event.target;return!((component,originator,target)=>eq(originator,component.element)&&!eq(originator,target))(component,originator,target)||(console.warn(focus$4()+" did not get interpreted by the desired target. \nOriginator: "+element(originator)+"\nTarget: "+element(target)+"\nCheck the "+focus$4()+" event handlers"),!1)}))]);var DefaultEvents=Object.freeze({__proto__:null,events:events$i});let unique=0;const generate$6=prefix=>{const time=(new Date).getTime(),random=Math.floor(1e9*Math.random());return unique++,prefix+"_"+random+unique+String(time)},prefix$1=constant$1("alloy-id-"),idAttr$1=constant$1("data-alloy-id"),prefix=prefix$1(),idAttr=idAttr$1(),writeOnly=(elem,uid)=>{Object.defineProperty(elem.dom,idAttr,{value:uid,writable:!0})},read$1=elem=>{const id=isElement$1(elem)?elem.dom[idAttr]:null;return Optional.from(id)},generate$5=prefix=>generate$6(prefix),make$8=identity,NoContextApi=getComp=>{const getMessage=event=>`The component must be in a context to execute: ${event}`+(getComp?"\n"+element(getComp().element)+" is not in context.":""),fail=event=>()=>{throw new Error(getMessage(event))},warn=event=>()=>{console.warn(getMessage(event))};return{debugInfo:constant$1("fake"),triggerEvent:warn("triggerEvent"),triggerFocus:warn("triggerFocus"),triggerEscape:warn("triggerEscape"),broadcast:warn("broadcast"),broadcastOn:warn("broadcastOn"),broadcastEvent:warn("broadcastEvent"),build:fail("build"),buildOrPatch:fail("buildOrPatch"),addToWorld:fail("addToWorld"),removeFromWorld:fail("removeFromWorld"),addToGui:fail("addToGui"),removeFromGui:fail("removeFromGui"),getByUid:fail("getByUid"),getByDom:fail("getByDom"),isConnected:never}},singleton$1=NoContextApi(),cleanParameters=parameters=>map$2(parameters,(p=>endsWith(p,"/*")?p.substring(0,p.length-2):p)),markAsExtraApi=(f,extraName)=>{const delegate=f.toString(),endIndex=delegate.indexOf(")")+1,openBracketIndex=delegate.indexOf("("),parameters=delegate.substring(openBracketIndex+1,endIndex-1).split(/,\s*/);return f.toFunctionAnnotation=()=>({name:extraName,parameters:cleanParameters(parameters)}),f},premadeTag=generate$6("alloy-premade"),premade$1=comp=>(Object.defineProperty(comp.element.dom,premadeTag,{value:comp.uid,writable:!0}),wrap$1(premadeTag,comp)),getPremade=spec=>get$g(spec,premadeTag),makeApi=f=>((f,apiFunction)=>{const delegate=apiFunction.toString(),endIndex=delegate.indexOf(")")+1,openBracketIndex=delegate.indexOf("("),parameters=delegate.substring(openBracketIndex+1,endIndex-1).split(/,\s*/);return f.toFunctionAnnotation=()=>({name:"OVERRIDE",parameters:cleanParameters(parameters.slice(1))}),f})(((component,...rest)=>f(component.getApis(),component,...rest)),f),NoState={init:()=>nu$8({readState:constant$1("No State required")})},nu$8=spec=>spec,byInnerKey=(data,tuple)=>{const r={};return each(data,((detail,key)=>{each(detail,((value,indexKey)=>{const chain=get$g(r,indexKey).getOr([]);r[indexKey]=chain.concat([tuple(key,value)])}))})),r},nu$7=s=>({classes:isUndefined(s.classes)?[]:s.classes,attributes:isUndefined(s.attributes)?{}:s.attributes,styles:isUndefined(s.styles)?{}:s.styles}),getCurried=descHandler=>descHandler.cHandler,behaviourTuple=(name,handler)=>({name:name,handler:handler}),nameToHandlers=(behaviours,info)=>{const r={};return each$1(behaviours,(behaviour=>{r[behaviour.name()]=behaviour.handlers(info)})),r},combine$1=(info,eventOrder,behaviours,base)=>{const byEventName=((info,behaviours,base)=>{const behaviourEvents={...base,...nameToHandlers(behaviours,info)};return byInnerKey(behaviourEvents,behaviourTuple)})(info,behaviours,base);return combineGroups(byEventName,eventOrder)},assemble=rawHandler=>{const handler=(handler=>isFunction(handler)?{can:always,abort:never,run:handler}:handler)(rawHandler);return(component,simulatedEvent,...rest)=>{const args=[component,simulatedEvent].concat(rest);handler.abort.apply(void 0,args)?simulatedEvent.stop():handler.can.apply(void 0,args)&&handler.run.apply(void 0,args)}},fuse=(tuples,eventOrder,eventName)=>{const order=eventOrder[eventName];return order?((label,keyName,array,order)=>{try{const sorted=sort(array,((a,b)=>{const aKey=a[keyName],bKey=b[keyName],aIndex=order.indexOf(aKey),bIndex=order.indexOf(bKey);if(-1===aIndex)throw new Error("The ordering for "+label+" does not have an entry for "+aKey+".\nOrder specified: "+JSON.stringify(order,null,2));if(-1===bIndex)throw new Error("The ordering for "+label+" does not have an entry for "+bKey+".\nOrder specified: "+JSON.stringify(order,null,2));return aIndex<bIndex?-1:bIndex<aIndex?1:0}));return Result.value(sorted)}catch(err){return Result.error([err])}})("Event: "+eventName,"name",tuples,order).map((sortedTuples=>{const handlers=map$2(sortedTuples,(tuple=>tuple.handler));return fuse$1(handlers)})):((eventName,tuples)=>Result.error(["The event ("+eventName+') has more than one behaviour that listens to it.\nWhen this occurs, you must specify an event ordering for the behaviours in your spec (e.g. [ "listing", "toggling" ]).\nThe behaviours that can trigger it are: '+JSON.stringify(map$2(tuples,(c=>c.name)),null,2)]))(eventName,tuples)},combineGroups=(byEventName,eventOrder)=>{const r=mapToArray(byEventName,((tuples,eventName)=>(1===tuples.length?Result.value(tuples[0].handler):fuse(tuples,eventOrder,eventName)).map((handler=>{const assembled=assemble(handler),purpose=tuples.length>1?filter$2(eventOrder[eventName],(o=>exists(tuples,(t=>t.name===o)))).join(" > "):tuples[0].name;return wrap$1(eventName,((handler,purpose)=>({handler:handler,purpose:purpose}))(assembled,purpose))}))));return consolidate(r,{})},baseBehaviour="alloy.base.behaviour",schema$z=objOf([field$1("dom","dom",{tag:"required",process:{}},objOf([required$1("tag"),defaulted("styles",{}),defaulted("classes",[]),defaulted("attributes",{}),option$3("value"),option$3("innerHtml")])),required$1("components"),required$1("uid"),defaulted("events",{}),defaulted("apis",{}),field$1("eventOrder","eventOrder",(base=>mergeWithThunk(constant$1(base)))({[execute$5()]:["disabling",baseBehaviour,"toggling","typeaheadevents"],[focus$4()]:[baseBehaviour,"focusing","keying"],[systemInit()]:[baseBehaviour,"disabling","toggling","representing"],[input()]:[baseBehaviour,"representing","streaming","invalidating"],[detachedFromDom()]:[baseBehaviour,"representing","item-events","tooltipping"],[mousedown()]:["focusing",baseBehaviour,"item-type-events"],[touchstart()]:["focusing",baseBehaviour,"item-type-events"],[mouseover()]:["item-type-events","tooltipping"],[receive()]:["receiving","reflecting","tooltipping"]}),anyValue()),option$3("domModification")]),toEvents=info=>info.events,read=(element,attr)=>{const value=get$f(element,attr);return void 0===value||""===value?[]:value.split(" ")},supports=element=>void 0!==element.dom.classList,get$8=element=>read(element,"class"),add$3=(element,clazz)=>((element,attr,id)=>{const nu=read(element,attr).concat([id]);return set$9(element,attr,nu.join(" ")),!0})(element,"class",clazz),remove$3=(element,clazz)=>((element,attr,id)=>{const nu=filter$2(read(element,attr),(v=>v!==id));return nu.length>0?set$9(element,attr,nu.join(" ")):remove$7(element,attr),!1})(element,"class",clazz),add$2=(element,clazz)=>{supports(element)?element.dom.classList.add(clazz):add$3(element,clazz)},cleanClass=element=>{0===(supports(element)?element.dom.classList:get$8(element)).length&&remove$7(element,"class")},remove$2=(element,clazz)=>{if(supports(element)){element.dom.classList.remove(clazz)}else remove$3(element,clazz);cleanClass(element)},toggle$4=(element,clazz)=>{const result=supports(element)?element.dom.classList.toggle(clazz):((element,clazz)=>contains$2(get$8(element),clazz)?remove$3(element,clazz):add$3(element,clazz))(element,clazz);return cleanClass(element),result},has=(element,clazz)=>supports(element)&&element.dom.classList.contains(clazz),add$1=(element,classes)=>{each$1(classes,(x=>{add$2(element,x)}))},remove$1=(element,classes)=>{each$1(classes,(x=>{remove$2(element,x)}))},get$7=element=>supports(element)?(element=>{const classList=element.dom.classList,r=new Array(classList.length);for(let i=0;i<classList.length;i++){const item=classList.item(i);null!==item&&(r[i]=item)}return r})(element):get$8(element),get$6=element=>element.dom.value,set$5=(element,value)=>{if(void 0===value)throw new Error("Value.set was undefined");element.dom.value=value},ensureInDom=(parent,child,obsoleted)=>{obsoleted.fold((()=>append$2(parent,child)),(obs=>{eq(obs,child)||(before$1(obs,child),remove$5(obs))}))},patchChildrenWith=(parent,nu,f)=>{const builtChildren=map$2(nu,f),currentChildren=children(parent);return each$1(currentChildren.slice(builtChildren.length),remove$5),builtChildren},patchSpecChild=(parent,index,spec,build)=>{const oldObsoleted=child$2(parent,index),childComp=build(spec,oldObsoleted),obsoleted=((parent,index,oldObsoleted)=>child$2(parent,index).map((newObs=>{if(oldObsoleted.exists((o=>!eq(o,newObs)))){const oldTag=oldObsoleted.map(name$3).getOr("span"),marker=SugarElement.fromTag(oldTag);return before$1(newObs,marker),marker}return newObs})))(parent,index,oldObsoleted);return ensureInDom(parent,childComp.element,obsoleted),childComp},diffKeyValueSet=(newObj,oldObj)=>{const newKeys=keys(newObj),oldKeys=keys(oldObj),toRemove=difference(oldKeys,newKeys),toSet=((obj,pred)=>{const t={},f={};return internalFilter(obj,pred,objAcc(t),objAcc(f)),{t:t,f:f}})(newObj,((v,k)=>!has$2(oldObj,k)||v!==oldObj[k])).t;return{toRemove:toRemove,toSet:toSet}},reconcileToDom=(definition,obsoleted)=>{const{class:clazz,style:style,...existingAttributes}=(element=>foldl(element.dom.attributes,((acc,attr)=>(acc[attr.name]=attr.value,acc)),{}))(obsoleted),{toSet:attrsToSet,toRemove:attrsToRemove}=diffKeyValueSet(definition.attributes,existingAttributes),existingStyles=getAllRaw(obsoleted),{toSet:stylesToSet,toRemove:stylesToRemove}=diffKeyValueSet(definition.styles,existingStyles),existingClasses=get$7(obsoleted),classesToRemove=difference(existingClasses,definition.classes),classesToAdd=difference(definition.classes,existingClasses);return each$1(attrsToRemove,(a=>remove$7(obsoleted,a))),setAll$1(obsoleted,attrsToSet),add$1(obsoleted,classesToAdd),remove$1(obsoleted,classesToRemove),each$1(stylesToRemove,(s=>remove$6(obsoleted,s))),setAll(obsoleted,stylesToSet),definition.innerHtml.fold((()=>{const children=definition.domChildren;((parent,nodes)=>{patchChildrenWith(parent,nodes,((node,index)=>{const optObsoleted=child$2(parent,index);return ensureInDom(parent,node,optObsoleted),node}))})(obsoleted,children)}),(html=>{set$6(obsoleted,html)})),(()=>{const valueElement=obsoleted,value=definition.value.getOrUndefined();value!==get$6(valueElement)&&set$5(valueElement,null!=value?value:"")})(),obsoleted},renderToDom=(definition,optObsoleted)=>{const elem=optObsoleted.filter((candidate=>name$3(candidate)===definition.tag&&!(definition=>definition.innerHtml.isSome()&&definition.domChildren.length>0)(definition)&&!(element=>has$2(element.dom,premadeTag))(candidate))).bind((obsoleted=>((definition,obsoleted)=>{try{const e=reconcileToDom(definition,obsoleted);return Optional.some(e)}catch(err){return Optional.none()}})(definition,obsoleted))).getOrThunk((()=>(definition=>{const subject=SugarElement.fromTag(definition.tag);setAll$1(subject,definition.attributes),add$1(subject,definition.classes),setAll(subject,definition.styles),definition.innerHtml.each((html=>set$6(subject,html)));const children=definition.domChildren;return append$1(subject,children),definition.value.each((value=>{set$5(subject,value)})),subject})(definition)));return writeOnly(elem,definition.uid),elem},generateFrom=(spec,all)=>((spec,all)=>{const schema=map$2(all,(a=>optionObjOf(a.name(),[required$1("config"),defaulted("state",NoState)]))),validated=asRaw("component.behaviours",objOf(schema),spec.behaviours).fold((errInfo=>{throw new Error(formatError(errInfo)+"\nComplete spec:\n"+JSON.stringify(spec,null,2))}),identity);return{list:all,data:map$1(validated,(optBlobThunk=>{const output=optBlobThunk.map((blob=>({config:blob.config,state:blob.state.init(blob.config)})));return constant$1(output)}))}})(spec,all),generate$4=spec=>{const all=(spec=>{const behaviours=get$g(spec,"behaviours").getOr({});return bind$3(keys(behaviours),(name=>{const behaviour=behaviours[name];return isNonNullable(behaviour)?[behaviour.me]:[]}))})(spec);return generateFrom(spec,all)},getDomDefinition=(info,bList,bData)=>{const definition={...(detail=info).dom,uid:detail.uid,domChildren:map$2(detail.components,(comp=>comp.element))};var detail;const infoModification=(detail=>detail.domModification.fold((()=>nu$7({})),nu$7))(info),baseModification={"alloy.base.modification":infoModification},modification=bList.length>0?((info,baseMod,behaviours,base)=>{const modsByBehaviour={...baseMod};each$1(behaviours,(behaviour=>{modsByBehaviour[behaviour.name()]=behaviour.exhibit(info,base)}));const byAspect=byInnerKey(modsByBehaviour,((name,modification)=>({name:name,modification:modification}))),combineObjects=objects=>foldr(objects,((b,a)=>({...a.modification,...b})),{}),combinedClasses=foldr(byAspect.classes,((b,a)=>a.modification.concat(b)),[]),combinedAttributes=combineObjects(byAspect.attributes),combinedStyles=combineObjects(byAspect.styles);return nu$7({classes:combinedClasses,attributes:combinedAttributes,styles:combinedStyles})})(bData,baseModification,bList,definition):infoModification;return defnA=definition,mod=modification,{...defnA,attributes:{...defnA.attributes,...mod.attributes},styles:{...defnA.styles,...mod.styles},classes:defnA.classes.concat(mod.classes)};var defnA,mod},build$2=(spec,obsoleted)=>{const getMe=()=>me,systemApi=Cell(singleton$1),info=getOrDie((spec=>asRaw("custom.definition",schema$z,spec))(spec)),bBlob=generate$4(spec),bList=(bData=>bData.list)(bBlob),bData=(bData=>bData.data)(bBlob),modDefinition=getDomDefinition(info,bList,bData),item=renderToDom(modDefinition,obsoleted),events=((info,bList,bData)=>{const baseEvents={"alloy.base.behaviour":toEvents(info)};return combine$1(bData,info.eventOrder,bList,baseEvents).getOrDie()})(info,bList,bData),subcomponents=Cell(info.components),me={uid:spec.uid,getSystem:systemApi.get,config:behaviour=>{const b=bData;return(isFunction(b[behaviour.name()])?b[behaviour.name()]:()=>{throw new Error("Could not find "+behaviour.name()+" in "+JSON.stringify(spec,null,2))})()},hasConfigured:behaviour=>isFunction(bData[behaviour.name()]),spec:spec,readState:behaviourName=>bData[behaviourName]().map((b=>b.state.readState())).getOr("not enabled"),getApis:()=>info.apis,connect:newApi=>{systemApi.set(newApi)},disconnect:()=>{systemApi.set(NoContextApi(getMe))},element:item,syncComponents:()=>{const children$1=children(item),subs=bind$3(children$1,(child=>systemApi.get().getByDom(child).fold((()=>[]),pure$2)));subcomponents.set(subs)},components:subcomponents.get,events:events};return me},buildFromSpec=(userSpec,obsoleted)=>{const{events:specEvents,...spec}=make$8(userSpec),components=((spec,obsoleted)=>{const components=get$g(spec,"components").getOr([]);return obsoleted.fold((()=>map$2(components,build$1)),(obs=>map$2(components,((c,i)=>buildOrPatch(c,child$2(obs,i))))))})(spec,obsoleted),completeSpec={...spec,events:{...DefaultEvents,...specEvents},components:components};return Result.value(build$2(completeSpec,obsoleted))},text$2=textContent=>{const element=SugarElement.fromText(textContent);return external$1({element:element})},external$1=spec=>{const extSpec=asRawOrDie$1("external.component",objOfOnly([required$1("element"),option$3("uid")]),spec),systemApi=Cell(NoContextApi()),uid=extSpec.uid.getOrThunk((()=>generate$5("external")));writeOnly(extSpec.element,uid);const me={uid:uid,getSystem:systemApi.get,config:Optional.none,hasConfigured:never,connect:newApi=>{systemApi.set(newApi)},disconnect:()=>{systemApi.set(NoContextApi((()=>me)))},getApis:()=>({}),element:extSpec.element,spec:spec,readState:constant$1("No state"),syncComponents:noop,components:constant$1([]),events:{}};return premade$1(me)},uids=generate$5,buildOrPatch=(spec,obsoleted)=>getPremade(spec).getOrThunk((()=>{const userSpecWithUid=(spec=>has$2(spec,"uid"))(spec)?spec:{uid:uids(""),...spec};return buildFromSpec(userSpecWithUid,obsoleted).getOrDie()})),build$1=spec=>buildOrPatch(spec,Optional.none()),premade=premade$1;var ClosestOrAncestor=(is,ancestor,scope,a,isRoot)=>is(scope,a)?Optional.some(scope):isFunction(isRoot)&&isRoot(scope)?Optional.none():ancestor(scope,a,isRoot);const ancestor$1=(scope,predicate,isRoot)=>{let element=scope.dom;const stop=isFunction(isRoot)?isRoot:never;for(;element.parentNode;){element=element.parentNode;const el=SugarElement.fromDom(element);if(predicate(el))return Optional.some(el);if(stop(el))break}return Optional.none()},closest$3=(scope,predicate,isRoot)=>ClosestOrAncestor(((s,test)=>test(s)),ancestor$1,scope,predicate,isRoot),closest$2=(scope,predicate,isRoot)=>closest$3(scope,predicate,isRoot).isSome(),ancestor=(scope,selector,isRoot)=>ancestor$1(scope,(e=>is(e,selector)),isRoot),child=(scope,selector)=>((scope,predicate)=>find$5(scope.dom.childNodes,(node=>predicate(SugarElement.fromDom(node)))).map(SugarElement.fromDom))(scope,(e=>is(e,selector))),descendant=(scope,selector)=>((selector,scope)=>{const base=void 0===scope?document:scope.dom;return bypassSelector(base)?Optional.none():Optional.from(base.querySelector(selector)).map(SugarElement.fromDom)})(selector,scope),closest$1=(scope,selector,isRoot)=>ClosestOrAncestor(((element,selector)=>is(element,selector)),ancestor,scope,selector,isRoot),attribute="aria-controls",manager=()=>{const ariaId=generate$6(attribute);return{id:ariaId,link:elem=>{set$9(elem,attribute,ariaId)},unlink:elem=>{remove$7(elem,attribute)}}},isAriaPartOf=(component,queryElem)=>(queryElem=>closest$3(queryElem,(elem=>{if(!isElement$1(elem))return!1;const id=get$f(elem,"id");return void 0!==id&&id.indexOf(attribute)>-1})).bind((dep=>{const id=get$f(dep,"id"),dos=getRootNode(dep);return descendant(dos,`[${attribute}="${id}"]`)})))(queryElem).exists((owner=>isPartOf$1(component,owner))),isPartOf$1=(component,queryElem)=>closest$2(queryElem,(el=>eq(el,component.element)),never)||isAriaPartOf(component,queryElem);var EventConfiguration;!function(EventConfiguration){EventConfiguration[EventConfiguration.STOP=0]="STOP",EventConfiguration[EventConfiguration.NORMAL=1]="NORMAL",EventConfiguration[EventConfiguration.LOGGING=2]="LOGGING"}(EventConfiguration||(EventConfiguration={}));const eventConfig=Cell({}),processEvent=(eventName,initialTarget,f)=>{switch(get$g(eventConfig.get(),eventName).orThunk((()=>{const patterns=keys(eventConfig.get());return findMap(patterns,(p=>eventName.indexOf(p)>-1?Optional.some(eventConfig.get()[p]):Optional.none()))})).getOr(EventConfiguration.NORMAL)){case EventConfiguration.NORMAL:return f(noLogger());case EventConfiguration.LOGGING:{const logger=((eventName,initialTarget)=>{const sequence=[],startTime=(new Date).getTime();return{logEventCut:(_name,target,purpose)=>{sequence.push({outcome:"cut",target:target,purpose:purpose})},logEventStopped:(_name,target,purpose)=>{sequence.push({outcome:"stopped",target:target,purpose:purpose})},logNoParent:(_name,target,purpose)=>{sequence.push({outcome:"no-parent",target:target,purpose:purpose})},logEventNoHandlers:(_name,target)=>{sequence.push({outcome:"no-handlers-left",target:target})},logEventResponse:(_name,target,purpose)=>{sequence.push({outcome:"response",purpose:purpose,target:target})},write:()=>{const finishTime=(new Date).getTime();contains$2(["mousemove","mouseover","mouseout",systemInit()],eventName)||console.log(eventName,{event:eventName,time:finishTime-startTime,target:initialTarget.dom,sequence:map$2(sequence,(s=>contains$2(["cut","stopped","response"],s.outcome)?"{"+s.purpose+"} "+s.outcome+" at ("+element(s.target)+")":s.outcome))})}}})(eventName,initialTarget),output=f(logger);return logger.write(),output}case EventConfiguration.STOP:return!0}},path=["alloy/data/Fields","alloy/debugging/Debugging"],monitorEvent=(eventName,initialTarget,f)=>processEvent(eventName,initialTarget,f),noLogger=constant$1({logEventCut:noop,logEventStopped:noop,logNoParent:noop,logEventNoHandlers:noop,logEventResponse:noop,write:noop}),menuFields=constant$1([required$1("menu"),required$1("selectedMenu")]),itemFields=constant$1([required$1("item"),required$1("selectedItem")]);constant$1(objOf(itemFields().concat(menuFields())));const itemSchema$3=constant$1(objOf(itemFields())),_initSize=requiredObjOf("initSize",[required$1("numColumns"),required$1("numRows")]),tieredMenuMarkers=()=>requiredObjOf("markers",[required$1("backgroundMenu")].concat(menuFields()).concat(itemFields())),markers$1=required=>requiredObjOf("markers",map$2(required,required$1)),onPresenceHandler=(label,fieldName,presence)=>((()=>{const err=new Error;if(void 0!==err.stack){const lines=err.stack.split("\n");return find$5(lines,(line=>line.indexOf("alloy")>0&&!exists(path,(p=>line.indexOf(p)>-1)))).getOr("unknown")}})(),field$1(fieldName,fieldName,presence,valueOf((f=>Result.value(((...args)=>f.apply(void 0,args))))))),onHandler=fieldName=>onPresenceHandler(0,fieldName,defaulted$1(noop)),onKeyboardHandler=fieldName=>onPresenceHandler(0,fieldName,defaulted$1(Optional.none)),onStrictHandler=fieldName=>onPresenceHandler(0,fieldName,{tag:"required",process:{}}),onStrictKeyboardHandler=fieldName=>onPresenceHandler(0,fieldName,{tag:"required",process:{}}),output$1=(name,value)=>customField(name,constant$1(value)),snapshot=name=>customField(name,identity),initSize=constant$1(_initSize),nu$6=(x,y,bubble,direction,placement,boundsRestriction,labelPrefix,alwaysFit=!1)=>({x:x,y:y,bubble:bubble,direction:direction,placement:placement,restriction:boundsRestriction,label:`${labelPrefix}-${placement}`,alwaysFit:alwaysFit}),adt$a=Adt_generate([{southeast:[]},{southwest:[]},{northeast:[]},{northwest:[]},{south:[]},{north:[]},{east:[]},{west:[]}]),southeast$3=adt$a.southeast,southwest$3=adt$a.southwest,northeast$3=adt$a.northeast,northwest$3=adt$a.northwest,south$3=adt$a.south,north$3=adt$a.north,east$3=adt$a.east,west$3=adt$a.west,cycleBy=(value,delta,min,max)=>{const r=value+delta;return r>max?min:r<min?max:r},clamp=(value,min,max)=>Math.min(Math.max(value,min),max),boundsRestriction=(anchor,restrictions)=>mapToObject(["left","right","top","bottom"],(dir=>get$g(restrictions,dir).map((restriction=>((anchor,restriction)=>{switch(restriction){case 1:return anchor.x;case 0:return anchor.x+anchor.width;case 2:return anchor.y;case 3:return anchor.y+anchor.height}})(anchor,restriction))))),eastX$1=anchor=>anchor.x,middleX$1=(anchor,element)=>anchor.x+anchor.width/2-element.width/2,westX$1=(anchor,element)=>anchor.x+anchor.width-element.width,northY$2=(anchor,element)=>anchor.y-element.height,southY$2=anchor=>anchor.y+anchor.height,centreY$1=(anchor,element)=>anchor.y+anchor.height/2-element.height/2,southeast$2=(anchor,element,bubbles)=>nu$6(eastX$1(anchor),southY$2(anchor),bubbles.southeast(),southeast$3(),"southeast",boundsRestriction(anchor,{left:1,top:3}),"layout"),southwest$2=(anchor,element,bubbles)=>nu$6(westX$1(anchor,element),southY$2(anchor),bubbles.southwest(),southwest$3(),"southwest",boundsRestriction(anchor,{right:0,top:3}),"layout"),northeast$2=(anchor,element,bubbles)=>nu$6(eastX$1(anchor),northY$2(anchor,element),bubbles.northeast(),northeast$3(),"northeast",boundsRestriction(anchor,{left:1,bottom:2}),"layout"),northwest$2=(anchor,element,bubbles)=>nu$6(westX$1(anchor,element),northY$2(anchor,element),bubbles.northwest(),northwest$3(),"northwest",boundsRestriction(anchor,{right:0,bottom:2}),"layout"),north$2=(anchor,element,bubbles)=>nu$6(middleX$1(anchor,element),northY$2(anchor,element),bubbles.north(),north$3(),"north",boundsRestriction(anchor,{bottom:2}),"layout"),south$2=(anchor,element,bubbles)=>nu$6(middleX$1(anchor,element),southY$2(anchor),bubbles.south(),south$3(),"south",boundsRestriction(anchor,{top:3}),"layout"),east$2=(anchor,element,bubbles)=>nu$6((anchor=>anchor.x+anchor.width)(anchor),centreY$1(anchor,element),bubbles.east(),east$3(),"east",boundsRestriction(anchor,{left:0}),"layout"),west$2=(anchor,element,bubbles)=>nu$6(((anchor,element)=>anchor.x-element.width)(anchor,element),centreY$1(anchor,element),bubbles.west(),west$3(),"west",boundsRestriction(anchor,{right:1}),"layout"),all$1=()=>[southeast$2,southwest$2,northeast$2,northwest$2,south$2,north$2,east$2,west$2],allRtl$1=()=>[southwest$2,southeast$2,northwest$2,northeast$2,south$2,north$2,east$2,west$2],aboveOrBelow=()=>[northeast$2,northwest$2,southeast$2,southwest$2,north$2,south$2],aboveOrBelowRtl=()=>[northwest$2,northeast$2,southwest$2,southeast$2,north$2,south$2],belowOrAbove=()=>[southeast$2,southwest$2,northeast$2,northwest$2,south$2,north$2],belowOrAboveRtl=()=>[southwest$2,southeast$2,northwest$2,northeast$2,south$2,north$2];var ActiveReceiving=Object.freeze({__proto__:null,events:receiveConfig=>derive$2([run$1(receive(),((component,message)=>{const channelMap=receiveConfig.channels,channels=keys(channelMap),receivingData=message,targetChannels=((channels,message)=>message.universal?channels:filter$2(channels,(ch=>contains$2(message.channels,ch))))(channels,receivingData);each$1(targetChannels,(ch=>{const channelInfo=channelMap[ch],channelSchema=channelInfo.schema,data=asRawOrDie$1("channel["+ch+"] data\nReceiver: "+element(component.element),channelSchema,receivingData.data);channelInfo.onReceive(component,data)}))}))])}),ReceivingSchema=[requiredOf("channels",setOf(Result.value,objOfOnly([onStrictHandler("onReceive"),defaulted("schema",anyValue())])))];const loadEvent=(bConfig,bState,f)=>runOnInit(((component,_simulatedEvent)=>{f(component,bConfig,bState)})),wrapApi=(bName,apiFunction,apiName)=>((f,apiName,apiFunction)=>{const delegate=apiFunction.toString(),endIndex=delegate.indexOf(")")+1,openBracketIndex=delegate.indexOf("("),parameters=delegate.substring(openBracketIndex+1,endIndex-1).split(/,\s*/);return f.toFunctionAnnotation=()=>({name:apiName,parameters:cleanParameters(parameters.slice(0,1).concat(parameters.slice(3)))}),f})(((component,...rest)=>{const args=[component].concat(rest);return component.config({name:constant$1(bName)}).fold((()=>{throw new Error("We could not find any behaviour configuration for: "+bName+". Using API: "+apiName)}),(info=>{const rest=Array.prototype.slice.call(args,1);return apiFunction.apply(void 0,[component,info.config,info.state].concat(rest))}))}),apiName,apiFunction),revokeBehaviour=name=>({key:name,value:void 0}),doCreate=(configSchema,schemaSchema,name,active,apis,extra,state)=>{const getConfig=info=>hasNonNullableKey(info,name)?info[name]():Optional.none(),wrappedApis=map$1(apis,((apiF,apiName)=>wrapApi(name,apiF,apiName))),me={...map$1(extra,((extraF,extraName)=>markAsExtraApi(extraF,extraName))),...wrappedApis,revoke:curry(revokeBehaviour,name),config:spec=>{const prepared=asRawOrDie$1(name+"-config",configSchema,spec);return{key:name,value:{config:prepared,me:me,configAsRaw:cached((()=>asRawOrDie$1(name+"-config",configSchema,spec))),initialConfig:spec,state:state}}},schema:constant$1(schemaSchema),exhibit:(info,base)=>lift2(getConfig(info),get$g(active,"exhibit"),((behaviourInfo,exhibitor)=>exhibitor(base,behaviourInfo.config,behaviourInfo.state))).getOrThunk((()=>nu$7({}))),name:constant$1(name),handlers:info=>getConfig(info).map((behaviourInfo=>get$g(active,"events").getOr((()=>({})))(behaviourInfo.config,behaviourInfo.state))).getOr({})};return me},derive$1=capabilities=>wrapAll(capabilities),simpleSchema=objOfOnly([required$1("fields"),required$1("name"),defaulted("active",{}),defaulted("apis",{}),defaulted("state",NoState),defaulted("extra",{})]),create$4=data=>{const value=asRawOrDie$1("Creating behaviour: "+data.name,simpleSchema,data);return((schema,name,active,apis,extra,state)=>{const configSchema=objOfOnly(schema),schemaSchema=optionObjOf(name,[(key="config",objSchema=schema,optionOf(key,objOfOnly(objSchema)))]);var key,objSchema;return doCreate(configSchema,schemaSchema,name,active,apis,extra,state)})(value.fields,value.name,value.active,value.apis,value.extra,value.state)},modeSchema=objOfOnly([required$1("branchKey"),required$1("branches"),required$1("name"),defaulted("active",{}),defaulted("apis",{}),defaulted("state",NoState),defaulted("extra",{})]),createModes=data=>{const value=asRawOrDie$1("Creating behaviour: "+data.name,modeSchema,data);return((modes,name,active,apis,extra,state)=>{const configSchema=modes,schemaSchema=optionObjOf(name,[optionOf("config",modes)]);return doCreate(configSchema,schemaSchema,name,active,apis,extra,state)})(choose$1(value.branchKey,value.branches),value.name,value.active,value.apis,value.extra,value.state)},revoke=constant$1(void 0),Receiving=create$4({fields:ReceivingSchema,name:"receiving",active:ActiveReceiving});var ActivePosition=Object.freeze({__proto__:null,exhibit:(base,posConfig)=>nu$7({classes:[],styles:posConfig.useFixed()?{}:{position:"relative"}})});const focus$3=(element,preventScroll=!1)=>element.dom.focus({preventScroll:preventScroll}),blur$1=element=>element.dom.blur(),hasFocus=element=>{const root=getRootNode(element).dom;return element.dom===root.activeElement},active$1=(root=getDocument())=>Optional.from(root.dom.activeElement).map(SugarElement.fromDom),search=element=>active$1(getRootNode(element)).filter((e=>element.dom.contains(e.dom))),preserve$1=(f,container)=>{const dos=getRootNode(container),refocus=active$1(dos).bind((focused=>{const hasFocus=elem=>eq(focused,elem);return hasFocus(container)?Optional.some(container):((scope,predicate)=>{const descend=node=>{for(let i=0;i<node.childNodes.length;i++){const child=SugarElement.fromDom(node.childNodes[i]);if(predicate(child))return Optional.some(child);const res=descend(node.childNodes[i]);if(res.isSome())return res}return Optional.none()};return descend(scope.dom)})(container,hasFocus)})),result=f(container);return refocus.each((oldFocus=>{active$1(dos).filter((newFocus=>eq(newFocus,oldFocus))).fold((()=>{focus$3(oldFocus)}),noop)})),result},NuPositionCss=(position,left,top,right,bottom)=>{const toPx=num=>num+"px";return{position:position,left:left.map(toPx),top:top.map(toPx),right:right.map(toPx),bottom:bottom.map(toPx)}},applyPositionCss=(element,position)=>{setOptions(element,(position=>({...position,position:Optional.some(position.position)}))(position))},adt$9=Adt_generate([{none:[]},{relative:["x","y","width","height"]},{fixed:["x","y","width","height"]}]),positionWithDirection=(posName,decision,x,y,width,height)=>{const decisionRect=decision.rect,decisionX=decisionRect.x-x,decisionY=decisionRect.y-y,decisionRight=width-(decisionX+decisionRect.width),decisionBottom=height-(decisionY+decisionRect.height),left=Optional.some(decisionX),top=Optional.some(decisionY),right=Optional.some(decisionRight),bottom=Optional.some(decisionBottom),none=Optional.none();return((subject,southeast,southwest,northeast,northwest,south,north,east,west)=>subject.fold(southeast,southwest,northeast,northwest,south,north,east,west))(decision.direction,(()=>NuPositionCss(posName,left,top,none,none)),(()=>NuPositionCss(posName,none,top,right,none)),(()=>NuPositionCss(posName,left,none,none,bottom)),(()=>NuPositionCss(posName,none,none,right,bottom)),(()=>NuPositionCss(posName,left,top,none,none)),(()=>NuPositionCss(posName,left,none,none,bottom)),(()=>NuPositionCss(posName,left,top,none,none)),(()=>NuPositionCss(posName,none,top,right,none)))},reposition=(origin,decision)=>origin.fold((()=>{const decisionRect=decision.rect;return NuPositionCss("absolute",Optional.some(decisionRect.x),Optional.some(decisionRect.y),Optional.none(),Optional.none())}),((x,y,width,height)=>positionWithDirection("absolute",decision,x,y,width,height)),((x,y,width,height)=>positionWithDirection("fixed",decision,x,y,width,height))),toBox=(origin,element)=>{const rel=curry(find$2,element),position=origin.fold(rel,rel,(()=>{const scroll=get$b();return find$2(element).translate(-scroll.left,-scroll.top)})),width=getOuter$1(element),height=getOuter$2(element);return bounds(position.left,position.top,width,height)},viewport=(origin,optBounds)=>optBounds.fold((()=>origin.fold(win,win,bounds)),(bounds$1=>origin.fold(constant$1(bounds$1),constant$1(bounds$1),(()=>{const pos=translate$2(origin,bounds$1.x,bounds$1.y);return bounds(pos.left,pos.top,bounds$1.width,bounds$1.height)})))),translate$2=(origin,x,y)=>{const pos=SugarPosition(x,y);return origin.fold(constant$1(pos),constant$1(pos),(()=>{const outerScroll=get$b();return pos.translate(-outerScroll.left,-outerScroll.top)}))};adt$9.none;const relative$1=adt$9.relative,fixed$1=adt$9.fixed,box=(anchorBox,origin)=>((anchorBox,origin)=>({anchorBox:anchorBox,origin:origin}))(anchorBox,origin),getPlacement=element=>getOpt(element,"data-alloy-placement"),adt$8=Adt_generate([{fit:["reposition"]},{nofit:["reposition","visibleW","visibleH","isVisible"]}]),attempt=(candidate,width,height,bounds$1)=>{const bubble=candidate.bubble,bubbleOffset=bubble.offset,adjustedBounds=((bounds$1,restriction,bubbleOffset)=>{const applyRestriction=(dir,current)=>restriction[dir].map((pos=>{const isVerticalAxis="top"===dir||"bottom"===dir,offset=isVerticalAxis?bubbleOffset.top:bubbleOffset.left,newPos=("left"===dir||"top"===dir?Math.max:Math.min)(pos,current)+offset;return isVerticalAxis?clamp(newPos,bounds$1.y,bounds$1.bottom):clamp(newPos,bounds$1.x,bounds$1.right)})).getOr(current),adjustedLeft=applyRestriction("left",bounds$1.x),adjustedTop=applyRestriction("top",bounds$1.y),adjustedRight=applyRestriction("right",bounds$1.right),adjustedBottom=applyRestriction("bottom",bounds$1.bottom);return bounds(adjustedLeft,adjustedTop,adjustedRight-adjustedLeft,adjustedBottom-adjustedTop)})(bounds$1,candidate.restriction,bubbleOffset),newX=candidate.x+bubbleOffset.left,newY=candidate.y+bubbleOffset.top,box=bounds(newX,newY,width,height),{originInBounds:originInBounds,sizeInBounds:sizeInBounds,visibleW:visibleW,visibleH:visibleH}=((box,bounds)=>{const{x:boundsX,y:boundsY,right:boundsRight,bottom:boundsBottom}=bounds,{x:x,y:y,right:right,bottom:bottom,width:width,height:height}=box;return{originInBounds:x>=boundsX&&x<=boundsRight&&y>=boundsY&&y<=boundsBottom,sizeInBounds:right<=boundsRight&&right>=boundsX&&bottom<=boundsBottom&&bottom>=boundsY,visibleW:Math.min(width,x>=boundsX?boundsRight-x:right-boundsX),visibleH:Math.min(height,y>=boundsY?boundsBottom-y:bottom-boundsY)}})(box,adjustedBounds),fits=originInBounds&&sizeInBounds,fittedBox=fits?box:((box,bounds$1)=>{const{x:boundsX,y:boundsY,right:boundsRight,bottom:boundsBottom}=bounds$1,{x:x,y:y,width:width,height:height}=box,maxX=Math.max(boundsX,boundsRight-width),maxY=Math.max(boundsY,boundsBottom-height),restrictedX=clamp(x,boundsX,maxX),restrictedY=clamp(y,boundsY,maxY),restrictedWidth=Math.min(restrictedX+width,boundsRight)-restrictedX,restrictedHeight=Math.min(restrictedY+height,boundsBottom)-restrictedY;return bounds(restrictedX,restrictedY,restrictedWidth,restrictedHeight)})(box,adjustedBounds),isPartlyVisible=fittedBox.width>0&&fittedBox.height>0,{maxWidth:maxWidth,maxHeight:maxHeight}=((direction,box,bounds)=>{const upAvailable=constant$1(box.bottom-bounds.y),downAvailable=constant$1(bounds.bottom-box.y),maxHeight=((subject,south,middle,north)=>subject.fold(south,south,north,north,south,north,middle,middle))(direction,downAvailable,downAvailable,upAvailable),westAvailable=constant$1(box.right-bounds.x),eastAvailable=constant$1(bounds.right-box.x),maxWidth=((subject,east,middle,west)=>subject.fold(east,west,east,west,middle,middle,east,west))(direction,eastAvailable,eastAvailable,westAvailable);return{maxWidth:maxWidth,maxHeight:maxHeight}})(candidate.direction,fittedBox,bounds$1),reposition={rect:fittedBox,maxHeight:maxHeight,maxWidth:maxWidth,direction:candidate.direction,placement:candidate.placement,classes:{on:bubble.classesOn,off:bubble.classesOff},layout:candidate.label,testY:newY};return fits||candidate.alwaysFit?adt$8.fit(reposition):adt$8.nofit(reposition,visibleW,visibleH,isPartlyVisible)},singleton=doRevoke=>{const subject=Cell(Optional.none()),revoke=()=>subject.get().each(doRevoke);return{clear:()=>{revoke(),subject.set(Optional.none())},isSet:()=>subject.get().isSome(),get:()=>subject.get(),set:s=>{revoke(),subject.set(Optional.some(s))}}},unbindable=()=>singleton((s=>s.unbind())),value$2=()=>{const subject=singleton(noop);return{...subject,on:f=>subject.get().each(f)}},filter=always,bind=(element,event,handler)=>((element,event,filter,handler)=>binder(element,event,filter,handler,!1))(element,event,filter,handler),capture=(element,event,handler)=>((element,event,filter,handler)=>binder(element,event,filter,handler,!0))(element,event,filter,handler),fromRawEvent=fromRawEvent$1,properties=["top","bottom","right","left"],timerAttr="data-alloy-transition-timer",isTransitioning$1=(element,transition)=>((element,classes)=>forall(classes,(clazz=>has(element,clazz))))(element,transition.classes),hasChanges=(position,intermediate)=>{const round=value=>parseFloat(value).toFixed(3);return find$4(intermediate,((value,key)=>!((lhs,rhs,comparator=tripleEquals)=>lift2(lhs,rhs,comparator).getOr(lhs.isNone()&&rhs.isNone()))(position[key].map(round),value.map(round)))).isSome()},setupTransitionListeners=(element,transition)=>{const transitionEnd=unbindable(),transitionCancel=unbindable();let timer;const isSourceTransition=e=>{var _a;const pseudoElement=null!==(_a=e.raw.pseudoElement)&&void 0!==_a?_a:"";return eq(e.target,element)&&isEmpty(pseudoElement)&&contains$2(properties,e.raw.propertyName)},transitionDone=e=>{if(isNullable(e)||isSourceTransition(e)){transitionEnd.clear(),transitionCancel.clear();const type=null==e?void 0:e.raw.type;(isNullable(type)||type===transitionend())&&(clearTimeout(timer),remove$7(element,timerAttr),remove$1(element,transition.classes))}},transitionStart=bind(element,transitionstart(),(e=>{isSourceTransition(e)&&(transitionStart.unbind(),transitionEnd.set(bind(element,transitionend(),transitionDone)),transitionCancel.set(bind(element,transitioncancel(),transitionDone)))})),duration=(element=>{const get=name=>{const times=get$e(element,name).split(/\s*,\s*/);return filter$2(times,isNotEmpty)},parse=value=>{if(isString(value)&&/^[\d.]+/.test(value)){const num=parseFloat(value);return endsWith(value,"ms")?num:1e3*num}return 0},delay=get("transition-delay"),duration=get("transition-duration");return foldl(duration,((acc,dur,i)=>{const time=parse(delay[i])+parse(dur);return Math.max(acc,time)}),0)})(element);requestAnimationFrame((()=>{timer=setTimeout(transitionDone,duration+17),set$9(element,timerAttr,timer)}))},applyTransitionCss=(element,origin,position,transition,decision,lastPlacement)=>{const shouldTransition=((transition,decision,lastPlacement)=>lastPlacement.exists((placer=>{const mode=transition.mode;return"all"===mode||placer[mode]!==decision[mode]})))(transition,decision,lastPlacement);if(shouldTransition||isTransitioning$1(element,transition)){set$8(element,"position",position.position);const rect=toBox(origin,element),intermediatePosition=reposition(origin,{...decision,rect:rect}),intermediateCssOptions=mapToObject(properties,(prop=>intermediatePosition[prop]));hasChanges(position,intermediateCssOptions)&&(setOptions(element,intermediateCssOptions),shouldTransition&&((element,transition)=>{add$1(element,transition.classes),getOpt(element,timerAttr).each((timerId=>{clearTimeout(parseInt(timerId,10)),remove$7(element,timerAttr)})),setupTransitionListeners(element,transition)})(element,transition),reflow(element))}else remove$1(element,transition.classes)},layout=(anchorBox,element,bubbles,options)=>{remove$6(element,"max-height"),remove$6(element,"max-width");const elementBox={width:getOuter$1(p=element),height:getOuter$2(p)};var p;return((element,candidates,anchorBox,elementBox,bubbles,bounds)=>{const panelWidth=elementBox.width,panelHeight=elementBox.height,attemptBestFit=(layout,reposition,visibleW,visibleH,isVisible)=>{const next=layout(anchorBox,elementBox,bubbles,element,bounds),attemptLayout=attempt(next,panelWidth,panelHeight,bounds);return attemptLayout.fold(constant$1(attemptLayout),((newReposition,newVisibleW,newVisibleH,newIsVisible)=>(isVisible===newIsVisible?newVisibleH>visibleH||newVisibleW>visibleW:!isVisible&&newIsVisible)?attemptLayout:adt$8.nofit(reposition,visibleW,visibleH,isVisible)))},abc=foldl(candidates,((b,a)=>{const bestNext=curry(attemptBestFit,a);return b.fold(constant$1(b),bestNext)}),adt$8.nofit({rect:anchorBox,maxHeight:elementBox.height,maxWidth:elementBox.width,direction:southeast$3(),placement:"southeast",classes:{on:[],off:[]},layout:"none",testY:anchorBox.y},-1,-1,!1));return abc.fold(identity,identity)})(element,options.preference,anchorBox,elementBox,bubbles,options.bounds)},setPlacement=(element,decision)=>{((element,placement)=>{set$9(element,"data-alloy-placement",placement)})(element,decision.placement)},setMaxHeight=(element,maxHeight)=>{((element,value)=>{const absMax=api$2.max(element,value,["margin-top","border-top-width","padding-top","padding-bottom","border-bottom-width","margin-bottom"]);set$8(element,"max-height",absMax+"px")})(element,Math.floor(maxHeight))},anchored=constant$1(((element,available)=>{setMaxHeight(element,available),setAll(element,{"overflow-x":"hidden","overflow-y":"auto"})})),expandable$1=constant$1(((element,available)=>{setMaxHeight(element,available)})),defaultOr=(options,key,dephault)=>void 0===options[key]?dephault:options[key],go=(anchorBox,element,bubble,options)=>{const decision=layout(anchorBox,element,bubble,options);return((element,decision,options)=>{const positionCss=reposition(options.origin,decision);options.transition.each((transition=>{applyTransitionCss(element,options.origin,positionCss,transition,decision,options.lastPlacement)})),applyPositionCss(element,positionCss)})(element,decision,options),setPlacement(element,decision),((element,decision)=>{const classInfo=decision.classes;remove$1(element,classInfo.off),add$1(element,classInfo.on)})(element,decision),((element,decision,options)=>{(0,options.maxHeightFunction)(element,decision.maxHeight)})(element,decision,options),((element,decision,options)=>{(0,options.maxWidthFunction)(element,decision.maxWidth)})(element,decision,options),{layout:decision.layout,placement:decision.placement}},allAlignments=["valignCentre","alignLeft","alignRight","alignCentre","top","bottom","left","right","inset"],nu$5=(xOffset,yOffset,classes,insetModifier=1)=>{const insetXOffset=xOffset*insetModifier,insetYOffset=yOffset*insetModifier,getClasses=prop=>get$g(classes,prop).getOr([]),make=(xDelta,yDelta,alignmentsOn)=>{const alignmentsOff=difference(allAlignments,alignmentsOn);return{offset:SugarPosition(xDelta,yDelta),classesOn:bind$3(alignmentsOn,getClasses),classesOff:bind$3(alignmentsOff,getClasses)}};return{southeast:()=>make(-xOffset,yOffset,["top","alignLeft"]),southwest:()=>make(xOffset,yOffset,["top","alignRight"]),south:()=>make(-xOffset/2,yOffset,["top","alignCentre"]),northeast:()=>make(-xOffset,-yOffset,["bottom","alignLeft"]),northwest:()=>make(xOffset,-yOffset,["bottom","alignRight"]),north:()=>make(-xOffset/2,-yOffset,["bottom","alignCentre"]),east:()=>make(xOffset,-yOffset/2,["valignCentre","left"]),west:()=>make(-xOffset,-yOffset/2,["valignCentre","right"]),insetNortheast:()=>make(insetXOffset,insetYOffset,["top","alignLeft","inset"]),insetNorthwest:()=>make(-insetXOffset,insetYOffset,["top","alignRight","inset"]),insetNorth:()=>make(-insetXOffset/2,insetYOffset,["top","alignCentre","inset"]),insetSoutheast:()=>make(insetXOffset,-insetYOffset,["bottom","alignLeft","inset"]),insetSouthwest:()=>make(-insetXOffset,-insetYOffset,["bottom","alignRight","inset"]),insetSouth:()=>make(-insetXOffset/2,-insetYOffset,["bottom","alignCentre","inset"]),insetEast:()=>make(-insetXOffset,-insetYOffset/2,["valignCentre","right","inset"]),insetWest:()=>make(insetXOffset,-insetYOffset/2,["valignCentre","left","inset"])}},fallback=()=>nu$5(0,0,{}),nu$4=identity,onDirection=(isLtr,isRtl)=>element=>"rtl"===getDirection(element)?isRtl:isLtr,getDirection=element=>"rtl"===get$e(element,"direction")?"rtl":"ltr";var AttributeValue;!function(AttributeValue){AttributeValue.TopToBottom="toptobottom",AttributeValue.BottomToTop="bottomtotop"}(AttributeValue||(AttributeValue={}));const Attribute="data-alloy-vertical-dir",isBottomToTopDir=el=>closest$2(el,(current=>isElement$1(current)&&get$f(current,"data-alloy-vertical-dir")===AttributeValue.BottomToTop)),schema$y=()=>optionObjOf("layouts",[required$1("onLtr"),required$1("onRtl"),option$3("onBottomLtr"),option$3("onBottomRtl")]),get$5=(elem,info,defaultLtr,defaultRtl,defaultBottomLtr,defaultBottomRtl,dirElement)=>{const isBottomToTop=dirElement.map(isBottomToTopDir).getOr(!1),customLtr=info.layouts.map((ls=>ls.onLtr(elem))),customRtl=info.layouts.map((ls=>ls.onRtl(elem))),ltr=isBottomToTop?info.layouts.bind((ls=>ls.onBottomLtr.map((f=>f(elem))))).or(customLtr).getOr(defaultBottomLtr):customLtr.getOr(defaultLtr),rtl=isBottomToTop?info.layouts.bind((ls=>ls.onBottomRtl.map((f=>f(elem))))).or(customRtl).getOr(defaultBottomRtl):customRtl.getOr(defaultRtl);return onDirection(ltr,rtl)(elem)};var HotspotAnchor=[required$1("hotspot"),option$3("bubble"),defaulted("overrides",{}),schema$y(),output$1("placement",((component,anchorInfo,origin)=>{const hotspot=anchorInfo.hotspot,anchorBox=toBox(origin,hotspot.element),layouts=get$5(component.element,anchorInfo,belowOrAbove(),belowOrAboveRtl(),aboveOrBelow(),aboveOrBelowRtl(),Optional.some(anchorInfo.hotspot.element));return Optional.some(nu$4({anchorBox:anchorBox,bubble:anchorInfo.bubble.getOr(fallback()),overrides:anchorInfo.overrides,layouts:layouts}))}))];var MakeshiftAnchor=[required$1("x"),required$1("y"),defaulted("height",0),defaulted("width",0),defaulted("bubble",fallback()),defaulted("overrides",{}),schema$y(),output$1("placement",((component,anchorInfo,origin)=>{const pos=translate$2(origin,anchorInfo.x,anchorInfo.y),anchorBox=bounds(pos.left,pos.top,anchorInfo.width,anchorInfo.height),layouts=get$5(component.element,anchorInfo,all$1(),allRtl$1(),all$1(),allRtl$1(),Optional.none());return Optional.some(nu$4({anchorBox:anchorBox,bubble:anchorInfo.bubble,overrides:anchorInfo.overrides,layouts:layouts}))}))];const adt$7=Adt_generate([{screen:["point"]},{absolute:["point","scrollLeft","scrollTop"]}]),toFixed=pos=>pos.fold(identity,((point,scrollLeft,scrollTop)=>point.translate(-scrollLeft,-scrollTop))),toAbsolute=pos=>pos.fold(identity,identity),sum=points=>foldl(points,((b,a)=>b.translate(a.left,a.top)),SugarPosition(0,0)),sumAsAbsolute=positions=>{const points=map$2(positions,toAbsolute);return sum(points)},screen=adt$7.screen,absolute$1=adt$7.absolute,getRootPoint=(component,origin,anchorInfo)=>{const doc=owner$4(component.element),outerScroll=get$b(doc),offset=((component,origin,anchorInfo)=>{const win=defaultView(anchorInfo.root).dom;return Optional.from(win.frameElement).map(SugarElement.fromDom).filter((frame=>{const frameOwner=owner$4(frame),compOwner=owner$4(component.element);return eq(frameOwner,compOwner)})).map(absolute$3)})(component,0,anchorInfo).getOr(outerScroll);return absolute$1(offset,outerScroll.left,outerScroll.top)},getBox=(left,top,width,height)=>{const point=screen(SugarPosition(left,top));return Optional.some(((point,width,height)=>({point:point,width:width,height:height}))(point,width,height))},calcNewAnchor=(optBox,rootPoint,anchorInfo,origin,elem)=>optBox.map((box=>{const points=[rootPoint,box.point],topLeft=(onNone=()=>sumAsAbsolute(points),onRelative=()=>sumAsAbsolute(points),onFixed=()=>(positions=>{const points=map$2(positions,toFixed);return sum(points)})(points),origin.fold(onNone,onRelative,onFixed));var onNone,onRelative,onFixed;const anchorBox=((x,y,width,height)=>({x:x,y:y,width:width,height:height}))(topLeft.left,topLeft.top,box.width,box.height),layoutsLtr=anchorInfo.showAbove?aboveOrBelow():belowOrAbove(),layoutsRtl=anchorInfo.showAbove?aboveOrBelowRtl():belowOrAboveRtl(),layouts=get$5(elem,anchorInfo,layoutsLtr,layoutsRtl,layoutsLtr,layoutsRtl,Optional.none());return nu$4({anchorBox:anchorBox,bubble:anchorInfo.bubble.getOr(fallback()),overrides:anchorInfo.overrides,layouts:layouts})}));var NodeAnchor=[required$1("node"),required$1("root"),option$3("bubble"),schema$y(),defaulted("overrides",{}),defaulted("showAbove",!1),output$1("placement",((component,anchorInfo,origin)=>{const rootPoint=getRootPoint(component,0,anchorInfo);return anchorInfo.node.filter(inBody).bind((target=>{const rect=target.dom.getBoundingClientRect(),nodeBox=getBox(rect.left,rect.top,rect.width,rect.height),elem=anchorInfo.node.getOr(component.element);return calcNewAnchor(nodeBox,rootPoint,anchorInfo,origin,elem)}))}))];const SimRange_create=(start,soffset,finish,foffset)=>({start:start,soffset:soffset,finish:finish,foffset:foffset}),adt$6=Adt_generate([{before:["element"]},{on:["element","offset"]},{after:["element"]}]),Situ_getStart=(adt$6.before,adt$6.on,adt$6.after,situ=>situ.fold(identity,identity,identity)),adt$5=Adt_generate([{domRange:["rng"]},{relative:["startSitu","finishSitu"]},{exact:["start","soffset","finish","foffset"]}]),SimSelection={domRange:adt$5.domRange,relative:adt$5.relative,exact:adt$5.exact,exactFromRange:simRange=>adt$5.exact(simRange.start,simRange.soffset,simRange.finish,simRange.foffset),getWin:selection=>{const start=(selection=>selection.match({domRange:rng=>SugarElement.fromDom(rng.startContainer),relative:(startSitu,_finishSitu)=>Situ_getStart(startSitu),exact:(start,_soffset,_finish,_foffset)=>start}))(selection);return defaultView(start)},range:SimRange_create},relativeToNative=(win,startSitu,finishSitu)=>{const range=win.document.createRange();var rng;return rng=range,startSitu.fold((e=>{rng.setStartBefore(e.dom)}),((e,o)=>{rng.setStart(e.dom,o)}),(e=>{rng.setStartAfter(e.dom)})),((rng,situ)=>{situ.fold((e=>{rng.setEndBefore(e.dom)}),((e,o)=>{rng.setEnd(e.dom,o)}),(e=>{rng.setEndAfter(e.dom)}))})(range,finishSitu),range},exactToNative=(win,start,soffset,finish,foffset)=>{const rng=win.document.createRange();return rng.setStart(start.dom,soffset),rng.setEnd(finish.dom,foffset),rng},toRect=rect=>({left:rect.left,top:rect.top,right:rect.right,bottom:rect.bottom,width:rect.width,height:rect.height}),adt$4=Adt_generate([{ltr:["start","soffset","finish","foffset"]},{rtl:["start","soffset","finish","foffset"]}]),fromRange=(win,type,range)=>type(SugarElement.fromDom(range.startContainer),range.startOffset,SugarElement.fromDom(range.endContainer),range.endOffset),diagnose=(win,selection)=>{const ranges=((win,selection)=>selection.match({domRange:rng=>({ltr:constant$1(rng),rtl:Optional.none}),relative:(startSitu,finishSitu)=>({ltr:cached((()=>relativeToNative(win,startSitu,finishSitu))),rtl:cached((()=>Optional.some(relativeToNative(win,finishSitu,startSitu))))}),exact:(start,soffset,finish,foffset)=>({ltr:cached((()=>exactToNative(win,start,soffset,finish,foffset))),rtl:cached((()=>Optional.some(exactToNative(win,finish,foffset,start,soffset))))})}))(win,selection);return((win,ranges)=>{const rng=ranges.ltr();if(rng.collapsed)return ranges.rtl().filter((rev=>!1===rev.collapsed)).map((rev=>adt$4.rtl(SugarElement.fromDom(rev.endContainer),rev.endOffset,SugarElement.fromDom(rev.startContainer),rev.startOffset))).getOrThunk((()=>fromRange(0,adt$4.ltr,rng)));return fromRange(0,adt$4.ltr,rng)})(0,ranges)},asLtrRange=(win,selection)=>diagnose(win,selection).match({ltr:(start,soffset,finish,foffset)=>{const rng=win.document.createRange();return rng.setStart(start.dom,soffset),rng.setEnd(finish.dom,foffset),rng},rtl:(start,soffset,finish,foffset)=>{const rng=win.document.createRange();return rng.setStart(finish.dom,foffset),rng.setEnd(start.dom,soffset),rng}});adt$4.ltr,adt$4.rtl;const ancestors=(scope,predicate,isRoot)=>filter$2(((element,isRoot)=>{const stop=isFunction(isRoot)?isRoot:never;let dom=element.dom;const ret=[];for(;null!==dom.parentNode&&void 0!==dom.parentNode;){const rawParent=dom.parentNode,p=SugarElement.fromDom(rawParent);if(ret.push(p),!0===stop(p))break;dom=rawParent}return ret})(scope,isRoot),predicate),descendants=(scope,selector)=>((selector,scope)=>{const base=void 0===scope?document:scope.dom;return bypassSelector(base)?[]:map$2(base.querySelectorAll(selector),SugarElement.fromDom)})(selector,scope),after=(start,soffset,finish,foffset)=>{const r=((start,soffset,finish,foffset)=>{const rng=owner$4(start).dom.createRange();return rng.setStart(start.dom,soffset),rng.setEnd(finish.dom,foffset),rng})(start,soffset,finish,foffset),same=eq(start,finish)&&soffset===foffset;return r.collapsed&&!same},readRange=selection=>{if(selection.rangeCount>0){const firstRng=selection.getRangeAt(0),lastRng=selection.getRangeAt(selection.rangeCount-1);return Optional.some(SimRange_create(SugarElement.fromDom(firstRng.startContainer),firstRng.startOffset,SugarElement.fromDom(lastRng.endContainer),lastRng.endOffset))}return Optional.none()},doGetExact=selection=>{if(null===selection.anchorNode||null===selection.focusNode)return readRange(selection);{const anchor=SugarElement.fromDom(selection.anchorNode),focus=SugarElement.fromDom(selection.focusNode);return after(anchor,selection.anchorOffset,focus,selection.focusOffset)?Optional.some(SimRange_create(anchor,selection.anchorOffset,focus,selection.focusOffset)):readRange(selection)}},getExact=win=>(win=>Optional.from(win.getSelection()))(win).filter((sel=>sel.rangeCount>0)).bind(doGetExact),getFirstRect=(win,selection)=>(rng=>{const rects=rng.getClientRects(),rect=rects.length>0?rects[0]:rng.getBoundingClientRect();return rect.width>0||rect.height>0?Optional.some(rect).map(toRect):Optional.none()})(asLtrRange(win,selection)),getBounds$1=(win,selection)=>(rng=>{const rect=rng.getBoundingClientRect();return rect.width>0||rect.height>0?Optional.some(rect).map(toRect):Optional.none()})(asLtrRange(win,selection)),api=((is,name)=>{const getOption=element=>is(element)?Optional.from(element.dom.nodeValue):Optional.none();return{get:element=>{if(!is(element))throw new Error("Can only get "+name+" value of a "+name+" node");return getOption(element).getOr("")},getOption:getOption,set:(element,value)=>{if(!is(element))throw new Error("Can only set raw "+name+" value of a "+name+" node");element.dom.nodeValue=value}}})(isText,"text"),point=(element,offset)=>({element:element,offset:offset}),descendOnce$1=(element,offset)=>{const children$1=children(element);if(0===children$1.length)return point(element,offset);if(offset<children$1.length)return point(children$1[offset],0);{const last=children$1[children$1.length-1],len=isText(last)?(element=>api.get(element))(last).length:children(last).length;return point(last,len)}},descendOnce=(element,offset)=>isText(element)?point(element,offset):descendOnce$1(element,offset),isSimRange=detail=>void 0!==detail.foffset,getAnchorSelection=(win,anchorInfo)=>anchorInfo.getSelection.getOrThunk((()=>()=>getExact(win)))().map((sel=>{if(isSimRange(sel)){const modStart=descendOnce(sel.start,sel.soffset),modFinish=descendOnce(sel.finish,sel.foffset);return SimSelection.range(modStart.element,modStart.offset,modFinish.element,modFinish.offset)}return sel}));var SelectionAnchor=[option$3("getSelection"),required$1("root"),option$3("bubble"),schema$y(),defaulted("overrides",{}),defaulted("showAbove",!1),output$1("placement",((component,anchorInfo,origin)=>{const win=defaultView(anchorInfo.root).dom,rootPoint=getRootPoint(component,0,anchorInfo),selectionBox=getAnchorSelection(win,anchorInfo).bind((sel=>{if(isSimRange(sel)){const optRect=getBounds$1(win,SimSelection.exactFromRange(sel)).orThunk((()=>{const zeroWidth$1=SugarElement.fromText("\ufeff");before$1(sel.start,zeroWidth$1);const rect=getFirstRect(win,SimSelection.exact(zeroWidth$1,0,zeroWidth$1,1));return remove$5(zeroWidth$1),rect}));return optRect.bind((rawRect=>getBox(rawRect.left,rawRect.top,rawRect.width,rawRect.height)))}{const selectionRect=map$1(sel,(cell=>cell.dom.getBoundingClientRect())),bounds={left:Math.min(selectionRect.firstCell.left,selectionRect.lastCell.left),right:Math.max(selectionRect.firstCell.right,selectionRect.lastCell.right),top:Math.min(selectionRect.firstCell.top,selectionRect.lastCell.top),bottom:Math.max(selectionRect.firstCell.bottom,selectionRect.lastCell.bottom)};return getBox(bounds.left,bounds.top,bounds.right-bounds.left,bounds.bottom-bounds.top)}})),elem=getAnchorSelection(win,anchorInfo).bind((sel=>isSimRange(sel)?isElement$1(sel.start)?Optional.some(sel.start):parentElement(sel.start):Optional.some(sel.firstCell))).getOr(component.element);return calcNewAnchor(selectionBox,rootPoint,anchorInfo,origin,elem)}))];const eastX=anchor=>anchor.x+anchor.width,westX=(anchor,element)=>anchor.x-element.width,northY$1=(anchor,element)=>anchor.y-element.height+anchor.height,southY$1=anchor=>anchor.y,southeast$1=(anchor,element,bubbles)=>nu$6(eastX(anchor),southY$1(anchor),bubbles.southeast(),southeast$3(),"southeast",boundsRestriction(anchor,{left:0,top:2}),"link-layout"),southwest$1=(anchor,element,bubbles)=>nu$6(westX(anchor,element),southY$1(anchor),bubbles.southwest(),southwest$3(),"southwest",boundsRestriction(anchor,{right:1,top:2}),"link-layout"),northeast$1=(anchor,element,bubbles)=>nu$6(eastX(anchor),northY$1(anchor,element),bubbles.northeast(),northeast$3(),"northeast",boundsRestriction(anchor,{left:0,bottom:3}),"link-layout"),northwest$1=(anchor,element,bubbles)=>nu$6(westX(anchor,element),northY$1(anchor,element),bubbles.northwest(),northwest$3(),"northwest",boundsRestriction(anchor,{right:1,bottom:3}),"link-layout"),all=()=>[southeast$1,southwest$1,northeast$1,northwest$1],allRtl=()=>[southwest$1,southeast$1,northwest$1,northeast$1];var SubmenuAnchor=[required$1("item"),schema$y(),defaulted("overrides",{}),output$1("placement",((component,submenuInfo,origin)=>{const anchorBox=toBox(origin,submenuInfo.item.element),layouts=get$5(component.element,submenuInfo,all(),allRtl(),all(),allRtl(),Optional.none());return Optional.some(nu$4({anchorBox:anchorBox,bubble:fallback(),overrides:submenuInfo.overrides,layouts:layouts}))}))],AnchorSchema=choose$1("type",{selection:SelectionAnchor,node:NodeAnchor,hotspot:HotspotAnchor,submenu:SubmenuAnchor,makeshift:MakeshiftAnchor});const TransitionSchema=[requiredArrayOf("classes",string),defaultedStringEnum("mode","all",["all","layout","placement"])],PositionSchema=[defaulted("useFixed",never),option$3("getBounds")],PlacementSchema=[requiredOf("anchor",AnchorSchema),optionObjOf("transition",TransitionSchema)],place=(origin,anchoring,optBounds,placee,lastPlace,transition)=>((anchor,element,bubble,layouts,lastPlacement,optBounds,overrideOptions,transition)=>{const maxHeightFunction=defaultOr(overrideOptions,"maxHeightFunction",anchored()),maxWidthFunction=defaultOr(overrideOptions,"maxWidthFunction",noop),anchorBox=anchor.anchorBox,origin=anchor.origin,options={bounds:viewport(origin,optBounds),origin:origin,preference:layouts,maxHeightFunction:maxHeightFunction,maxWidthFunction:maxWidthFunction,lastPlacement:lastPlacement,transition:transition};return go(anchorBox,element,bubble,options)})(box(anchoring.anchorBox,origin),placee.element,anchoring.bubble,anchoring.layouts,lastPlace,optBounds,anchoring.overrides,transition),positionWithinBounds=(component,posConfig,posState,placee,placementSpec,optWithinBounds)=>{const placeeDetail=asRawOrDie$1("placement.info",objOf(PlacementSchema),placementSpec),anchorage=placeeDetail.anchor,element=placee.element,placeeState=posState.get(placee.uid);preserve$1((()=>{set$8(element,"position","fixed");const oldVisibility=getRaw(element,"visibility");set$8(element,"visibility","hidden");const origin=posConfig.useFixed()?(()=>{const html=document.documentElement;return fixed$1(0,0,html.clientWidth,html.clientHeight)})():(component=>{const position=absolute$3(component.element),bounds=component.element.dom.getBoundingClientRect();return relative$1(position.left,position.top,bounds.width,bounds.height)})(component);anchorage.placement(component,anchorage,origin).each((anchoring=>{const optBounds=optWithinBounds.orThunk((()=>posConfig.getBounds.map(apply$1))),newState=place(origin,anchoring,optBounds,placee,placeeState,placeeDetail.transition);posState.set(placee.uid,newState)})),oldVisibility.fold((()=>{remove$6(element,"visibility")}),(vis=>{set$8(element,"visibility",vis)})),getRaw(element,"left").isNone()&&getRaw(element,"top").isNone()&&getRaw(element,"right").isNone()&&getRaw(element,"bottom").isNone()&&is$1(getRaw(element,"position"),"fixed")&&remove$6(element,"position")}),element)};var PositionApis=Object.freeze({__proto__:null,position:(component,posConfig,posState,placee,placementSpec)=>{const optWithinBounds=Optional.none();positionWithinBounds(component,posConfig,posState,placee,placementSpec,optWithinBounds)},positionWithinBounds:positionWithinBounds,getMode:(component,pConfig,_pState)=>pConfig.useFixed()?"fixed":"absolute",reset:(component,pConfig,posState,placee)=>{const element=placee.element;each$1(["position","left","right","top","bottom"],(prop=>remove$6(element,prop))),(element=>{remove$7(element,"data-alloy-placement")})(element),posState.clear(placee.uid)}});const Positioning=create$4({fields:PositionSchema,name:"positioning",active:ActivePosition,apis:PositionApis,state:Object.freeze({__proto__:null,init:()=>{let state={};return nu$8({readState:()=>state,clear:id=>{isNonNullable(id)?delete state[id]:state={}},set:(id,data)=>{state[id]=data},get:id=>get$g(state,id)})}})}),isConnected=comp=>comp.getSystem().isConnected(),fireDetaching=component=>{emit(component,detachedFromDom());const children=component.components();each$1(children,fireDetaching)},fireAttaching=component=>{const children=component.components();each$1(children,fireAttaching),emit(component,attachedToDom())},virtualAttach=(parent,child)=>{parent.getSystem().addToWorld(child),inBody(parent.element)&&fireAttaching(child)},virtualDetach=comp=>{fireDetaching(comp),comp.getSystem().removeFromWorld(comp)},attach$1=(parent,child)=>{append$2(parent.element,child.element)},replaceChildren=(component,newSpecs,buildNewChildren)=>{const subs=component.components();(component=>{each$1(component.components(),(childComp=>remove$5(childComp.element))),empty(component.element),component.syncComponents()})(component);const newChildren=buildNewChildren(newSpecs),deleted=difference(subs,newChildren);each$1(deleted,(comp=>{fireDetaching(comp),component.getSystem().removeFromWorld(comp)})),each$1(newChildren,(childComp=>{isConnected(childComp)?attach$1(component,childComp):(component.getSystem().addToWorld(childComp),attach$1(component,childComp),inBody(component.element)&&fireAttaching(childComp))})),component.syncComponents()},attach=(parent,child)=>{attachWith(parent,child,append$2)},attachWith=(parent,child,insertion)=>{parent.getSystem().addToWorld(child),insertion(parent.element,child.element),inBody(parent.element)&&fireAttaching(child),parent.syncComponents()},doDetach=component=>{fireDetaching(component),remove$5(component.element),component.getSystem().removeFromWorld(component)},detach=component=>{const parent$1=parent(component.element).bind((p=>component.getSystem().getByDom(p).toOptional()));doDetach(component),parent$1.each((p=>{p.syncComponents()}))},detachChildren=component=>{const subs=component.components();each$1(subs,doDetach),empty(component.element),component.syncComponents()},attachSystem=(element,guiSystem)=>{attachSystemWith(element,guiSystem,append$2)},attachSystemAfter=(element,guiSystem)=>{attachSystemWith(element,guiSystem,after$2)},attachSystemWith=(element,guiSystem,inserter)=>{inserter(element,guiSystem.element);const children$1=children(guiSystem.element);each$1(children$1,(child=>{guiSystem.getByDom(child).each(fireAttaching)}))},detachSystem=guiSystem=>{const children$1=children(guiSystem.element);each$1(children$1,(child=>{guiSystem.getByDom(child).each(fireDetaching)})),remove$5(guiSystem.element)},rebuild=(sandbox,sConfig,sState,data)=>{sState.get().each((_data=>{detachChildren(sandbox)}));const point=sConfig.getAttachPoint(sandbox);attach(point,sandbox);const built=sandbox.getSystem().build(data);return attach(sandbox,built),sState.set(built),built},open$1=(sandbox,sConfig,sState,data)=>{const newState=rebuild(sandbox,sConfig,sState,data);return sConfig.onOpen(sandbox,newState),newState},close$1=(sandbox,sConfig,sState)=>{sState.get().each((data=>{detachChildren(sandbox),detach(sandbox),sConfig.onClose(sandbox,data),sState.clear()}))},isOpen$1=(_sandbox,_sConfig,sState)=>sState.isOpen(),cloak=(sandbox,sConfig,_sState)=>{const sink=sConfig.getAttachPoint(sandbox);set$8(sandbox.element,"position",Positioning.getMode(sink)),((sandbox,cssKey,attr,newValue)=>{getRaw(sandbox.element,cssKey).fold((()=>{remove$7(sandbox.element,attr)}),(v=>{set$9(sandbox.element,attr,v)})),set$8(sandbox.element,cssKey,newValue)})(sandbox,"visibility",sConfig.cloakVisibilityAttr,"hidden")},decloak=(sandbox,sConfig,_sState)=>{(element=>exists(["top","left","right","bottom"],(pos=>getRaw(element,pos).isSome())))(sandbox.element)||remove$6(sandbox.element,"position"),((sandbox,cssKey,attr)=>{getOpt(sandbox.element,attr).fold((()=>remove$6(sandbox.element,cssKey)),(oldValue=>set$8(sandbox.element,cssKey,oldValue)))})(sandbox,"visibility",sConfig.cloakVisibilityAttr)};var SandboxApis=Object.freeze({__proto__:null,cloak:cloak,decloak:decloak,open:open$1,openWhileCloaked:(sandbox,sConfig,sState,data,transaction)=>{cloak(sandbox,sConfig),open$1(sandbox,sConfig,sState,data),transaction(),decloak(sandbox,sConfig)},close:close$1,isOpen:isOpen$1,isPartOf:(sandbox,sConfig,sState,queryElem)=>isOpen$1(0,0,sState)&&sState.get().exists((data=>sConfig.isPartOf(sandbox,data,queryElem))),getState:(_sandbox,_sConfig,sState)=>sState.get(),setContent:(sandbox,sConfig,sState,data)=>sState.get().map((()=>rebuild(sandbox,sConfig,sState,data)))});var ActiveSandbox=Object.freeze({__proto__:null,events:(sandboxConfig,sandboxState)=>derive$2([run$1(sandboxClose(),((sandbox,_simulatedEvent)=>{close$1(sandbox,sandboxConfig,sandboxState)}))])}),SandboxSchema=[onHandler("onOpen"),onHandler("onClose"),required$1("isPartOf"),required$1("getAttachPoint"),defaulted("cloakVisibilityAttr","data-precloak-visibility")];var SandboxState=Object.freeze({__proto__:null,init:()=>{const contents=value$2(),readState=constant$1("not-implemented");return nu$8({readState:readState,isOpen:contents.isSet,clear:contents.clear,set:contents.set,get:contents.get})}});const Sandboxing=create$4({fields:SandboxSchema,name:"sandboxing",active:ActiveSandbox,apis:SandboxApis,state:SandboxState}),dismissPopups=constant$1("dismiss.popups"),repositionPopups=constant$1("reposition.popups"),mouseReleased=constant$1("mouse.released"),schema$x=objOfOnly([defaulted("isExtraPart",never),optionObjOf("fireEventInstead",[defaulted("event",dismissRequested())])]),receivingChannel$1=rawSpec=>{const detail=asRawOrDie$1("Dismissal",schema$x,rawSpec);return{[dismissPopups()]:{schema:objOfOnly([required$1("target")]),onReceive:(sandbox,data)=>{if(Sandboxing.isOpen(sandbox)){Sandboxing.isPartOf(sandbox,data.target)||detail.isExtraPart(sandbox,data.target)||detail.fireEventInstead.fold((()=>Sandboxing.close(sandbox)),(fe=>emit(sandbox,fe.event)))}}}}},schema$w=objOfOnly([optionObjOf("fireEventInstead",[defaulted("event",repositionRequested())]),requiredFunction("doReposition")]),receivingChannel=rawSpec=>{const detail=asRawOrDie$1("Reposition",schema$w,rawSpec);return{[repositionPopups()]:{onReceive:sandbox=>{Sandboxing.isOpen(sandbox)&&detail.fireEventInstead.fold((()=>detail.doReposition(sandbox)),(fe=>emit(sandbox,fe.event)))}}}},onLoad$5=(component,repConfig,repState)=>{repConfig.store.manager.onLoad(component,repConfig,repState)},onUnload$2=(component,repConfig,repState)=>{repConfig.store.manager.onUnload(component,repConfig,repState)};var RepresentApis=Object.freeze({__proto__:null,onLoad:onLoad$5,onUnload:onUnload$2,setValue:(component,repConfig,repState,data)=>{repConfig.store.manager.setValue(component,repConfig,repState,data)},getValue:(component,repConfig,repState)=>repConfig.store.manager.getValue(component,repConfig,repState),getState:(component,repConfig,repState)=>repState});var ActiveRepresenting=Object.freeze({__proto__:null,events:(repConfig,repState)=>{const es=repConfig.resetOnDom?[runOnAttached(((comp,_se)=>{onLoad$5(comp,repConfig,repState)})),runOnDetached(((comp,_se)=>{onUnload$2(comp,repConfig,repState)}))]:[loadEvent(repConfig,repState,onLoad$5)];return derive$2(es)}});const memory$1=()=>{const data=Cell(null);return nu$8({set:data.set,get:data.get,isNotSet:()=>null===data.get(),clear:()=>{data.set(null)},readState:()=>({mode:"memory",value:data.get()})})},dataset=()=>{const dataByValue=Cell({}),dataByText=Cell({});return nu$8({readState:()=>({mode:"dataset",dataByValue:dataByValue.get(),dataByText:dataByText.get()}),lookup:itemString=>get$g(dataByValue.get(),itemString).orThunk((()=>get$g(dataByText.get(),itemString))),update:items=>{const currentDataByValue=dataByValue.get(),currentDataByText=dataByText.get(),newDataByValue={},newDataByText={};each$1(items,(item=>{newDataByValue[item.value]=item,get$g(item,"meta").each((meta=>{get$g(meta,"text").each((text=>{newDataByText[text]=item}))}))})),dataByValue.set({...currentDataByValue,...newDataByValue}),dataByText.set({...currentDataByText,...newDataByText})},clear:()=>{dataByValue.set({}),dataByText.set({})}})};var RepresentState=Object.freeze({__proto__:null,memory:memory$1,dataset:dataset,manual:()=>nu$8({readState:noop}),init:spec=>spec.store.manager.state(spec)});const setValue$2=(component,repConfig,repState,data)=>{const store=repConfig.store;repState.update([data]),store.setValue(component,data),repConfig.onSetValue(component,data)};var DatasetStore=[option$3("initialValue"),required$1("getFallbackEntry"),required$1("getDataKey"),required$1("setValue"),output$1("manager",{setValue:setValue$2,getValue:(component,repConfig,repState)=>{const store=repConfig.store,key=store.getDataKey(component);return repState.lookup(key).getOrThunk((()=>store.getFallbackEntry(key)))},onLoad:(component,repConfig,repState)=>{repConfig.store.initialValue.each((data=>{setValue$2(component,repConfig,repState,data)}))},onUnload:(component,repConfig,repState)=>{repState.clear()},state:dataset})];var ManualStore=[required$1("getValue"),defaulted("setValue",noop),option$3("initialValue"),output$1("manager",{setValue:(component,repConfig,_repState,data)=>{repConfig.store.setValue(component,data),repConfig.onSetValue(component,data)},getValue:(component,repConfig,_repState)=>repConfig.store.getValue(component),onLoad:(component,repConfig,_repState)=>{repConfig.store.initialValue.each((data=>{repConfig.store.setValue(component,data)}))},onUnload:noop,state:NoState.init})];var MemoryStore=[option$3("initialValue"),output$1("manager",{setValue:(component,repConfig,repState,data)=>{repState.set(data),repConfig.onSetValue(component,data)},getValue:(component,repConfig,repState)=>repState.get(),onLoad:(component,repConfig,repState)=>{repConfig.store.initialValue.each((initVal=>{repState.isNotSet()&&repState.set(initVal)}))},onUnload:(component,repConfig,repState)=>{repState.clear()},state:memory$1})],RepresentSchema=[defaultedOf("store",{mode:"memory"},choose$1("mode",{memory:MemoryStore,manual:ManualStore,dataset:DatasetStore})),onHandler("onSetValue"),defaulted("resetOnDom",!1)];const Representing=create$4({fields:RepresentSchema,name:"representing",active:ActiveRepresenting,apis:RepresentApis,extra:{setValueFrom:(component,source)=>{const value=Representing.getValue(source);Representing.setValue(component,value)}},state:RepresentState}),field=(name,forbidden)=>defaultedObjOf(name,{},map$2(forbidden,(f=>{return key=f.name(),message="Cannot configure "+f.name()+" for "+name,field$1(key,key,{tag:"option",process:{}},value$3((_v=>SimpleResult_serror("The field: "+key+" is forbidden. "+message))));var key,message})).concat([customField("dump",identity)])),get$3=data=>data.dump,augment=(data,original)=>({...derive$1(original),...data.dump}),SketchBehaviours_field=field,SketchBehaviours_augment=augment,adt$3=Adt_generate([{single:["required","valueThunk"]},{multiple:["required","valueThunks"]}]),isSubstituted=spec=>has$2(spec,"uiType"),scan=(owner,detail,compSpec,placeholders)=>isSubstituted(compSpec)&&"placeholder"===compSpec.uiType?((owner,detail,compSpec,placeholders)=>owner.exists((o=>o!==compSpec.owner))?adt$3.single(!0,constant$1(compSpec)):get$g(placeholders,compSpec.name).fold((()=>{throw new Error("Unknown placeholder component: "+compSpec.name+"\nKnown: ["+keys(placeholders)+"]\nNamespace: "+owner.getOr("none")+"\nSpec: "+JSON.stringify(compSpec,null,2))}),(newSpec=>newSpec.replace())))(owner,0,compSpec,placeholders):adt$3.single(!1,constant$1(compSpec)),substitute=(owner,detail,compSpec,placeholders)=>scan(owner,0,compSpec,placeholders).fold(((req,valueThunk)=>{const value=isSubstituted(compSpec)?valueThunk(detail,compSpec.config,compSpec.validated):valueThunk(detail),childSpecs=get$g(value,"components").getOr([]),substituted=bind$3(childSpecs,(c=>substitute(owner,detail,c,placeholders)));return[{...value,components:substituted}]}),((req,valuesThunk)=>{if(isSubstituted(compSpec)){const values=valuesThunk(detail,compSpec.config,compSpec.validated);return compSpec.validated.preprocess.getOr(identity)(values)}return valuesThunk(detail)})),substitutePlaces=(owner,detail,components,placeholders)=>{const ps=map$1(placeholders,((ph,name)=>((label,replacements)=>{let called=!1;return{name:constant$1(label),required:()=>replacements.fold(((req,_)=>req),((req,_)=>req)),used:()=>called,replace:()=>{if(called)throw new Error("Trying to use the same placeholder more than once: "+label);return called=!0,replacements}}})(name,ph))),outcome=((owner,detail,components,placeholders)=>bind$3(components,(c=>substitute(owner,detail,c,placeholders))))(owner,detail,components,ps);return each(ps,(p=>{if(!1===p.used()&&p.required())throw new Error("Placeholder: "+p.name()+" was not found in components list\nNamespace: "+owner.getOr("none")+"\nComponents: "+JSON.stringify(detail.components,null,2))})),outcome},single$2=adt$3.single,multiple=adt$3.multiple,placeholder=constant$1("placeholder"),adt$2=Adt_generate([{required:["data"]},{external:["data"]},{optional:["data"]},{group:["data"]}]),fFactory=defaulted("factory",{sketch:identity}),fSchema=defaulted("schema",[]),fName=required$1("name"),fPname=field$1("pname","pname",defaultedThunk((typeSpec=>"<alloy."+generate$6(typeSpec.name)+">")),anyValue()),fGroupSchema=customField("schema",(()=>[option$3("preprocess")])),fDefaults=defaulted("defaults",constant$1({})),fOverrides=defaulted("overrides",constant$1({})),requiredSpec=objOf([fFactory,fSchema,fName,fPname,fDefaults,fOverrides]),externalSpec=objOf([fFactory,fSchema,fName,fDefaults,fOverrides]),optionalSpec=objOf([fFactory,fSchema,fName,fPname,fDefaults,fOverrides]),groupSpec=objOf([fFactory,fGroupSchema,fName,required$1("unit"),fPname,fDefaults,fOverrides]),asNamedPart=part=>part.fold(Optional.some,Optional.none,Optional.some,Optional.some),name$2=part=>{const get=data=>data.name;return part.fold(get,get,get,get)},convert=(adtConstructor,partSchema)=>spec=>{const data=asRawOrDie$1("Converting part type",partSchema,spec);return adtConstructor(data)},required=convert(adt$2.required,requiredSpec),external=convert(adt$2.external,externalSpec),optional=convert(adt$2.optional,optionalSpec),group=convert(adt$2.group,groupSpec),original=constant$1("entirety");var PartType=Object.freeze({__proto__:null,required:required,external:external,optional:optional,group:group,asNamedPart:asNamedPart,name:name$2,asCommon:part=>part.fold(identity,identity,identity,identity),original:original});const combine=(detail,data,partSpec,partValidated)=>deepMerge(data.defaults(detail,partSpec,partValidated),partSpec,{uid:detail.partUids[data.name]},data.overrides(detail,partSpec,partValidated)),generate$3=(owner,parts)=>{const r={};return each$1(parts,(part=>{asNamedPart(part).each((np=>{const g=doGenerateOne(owner,np.pname);r[np.name]=config=>{const validated=asRawOrDie$1("Part: "+np.name+" in "+owner,objOf(np.schema),config);return{...g,config:config,validated:validated}}}))})),r},doGenerateOne=(owner,pname)=>({uiType:placeholder(),owner:owner,name:pname}),generateOne$1=(owner,pname,config)=>({uiType:placeholder(),owner:owner,name:pname,config:config,validated:{}}),schemas=parts=>bind$3(parts,(part=>part.fold(Optional.none,Optional.some,Optional.none,Optional.none).map((data=>requiredObjOf(data.name,data.schema.concat([snapshot(original())])))).toArray())),names=parts=>map$2(parts,name$2),substitutes=(owner,detail,parts)=>((owner,detail,parts)=>{const internals={},externals={};return each$1(parts,(part=>{part.fold((data=>{internals[data.pname]=single$2(!0,((detail,partSpec,partValidated)=>data.factory.sketch(combine(detail,data,partSpec,partValidated))))}),(data=>{const partSpec=detail.parts[data.name];externals[data.name]=constant$1(data.factory.sketch(combine(detail,data,partSpec[original()]),partSpec))}),(data=>{internals[data.pname]=single$2(!1,((detail,partSpec,partValidated)=>data.factory.sketch(combine(detail,data,partSpec,partValidated))))}),(data=>{internals[data.pname]=multiple(!0,((detail,_partSpec,_partValidated)=>{const units=detail[data.name];return map$2(units,(u=>data.factory.sketch(deepMerge(data.defaults(detail,u,_partValidated),u,data.overrides(detail,u)))))}))}))})),{internals:constant$1(internals),externals:constant$1(externals)}})(0,detail,parts),components$1=(owner,detail,internals)=>substitutePlaces(Optional.some(owner),detail,detail.components,internals),getPart=(component,detail,partKey)=>{const uid=detail.partUids[partKey];return component.getSystem().getByUid(uid).toOptional()},getPartOrDie=(component,detail,partKey)=>getPart(component,detail,partKey).getOrDie("Could not find part: "+partKey),getParts=(component,detail,partKeys)=>{const r={},uids=detail.partUids,system=component.getSystem();return each$1(partKeys,(pk=>{r[pk]=constant$1(system.getByUid(uids[pk]))})),r},getAllParts=(component,detail)=>{const system=component.getSystem();return map$1(detail.partUids,((pUid,_k)=>constant$1(system.getByUid(pUid))))},getAllPartNames=detail=>keys(detail.partUids),getPartsOrDie=(component,detail,partKeys)=>{const r={},uids=detail.partUids,system=component.getSystem();return each$1(partKeys,(pk=>{r[pk]=constant$1(system.getByUid(uids[pk]).getOrDie())})),r},defaultUids=(baseUid,partTypes)=>{const partNames=names(partTypes);return wrapAll(map$2(partNames,(pn=>({key:pn,value:baseUid+"-"+pn}))))},defaultUidsSchema=partTypes=>field$1("partUids","partUids",mergeWithThunk((spec=>defaultUids(spec.uid,partTypes))),anyValue());var AlloyParts=Object.freeze({__proto__:null,generate:generate$3,generateOne:generateOne$1,schemas:schemas,names:names,substitutes:substitutes,components:components$1,defaultUids:defaultUids,defaultUidsSchema:defaultUidsSchema,getAllParts:getAllParts,getAllPartNames:getAllPartNames,getPart:getPart,getPartOrDie:getPartOrDie,getParts:getParts,getPartsOrDie:getPartsOrDie});const asRawOrDie=(label,schema,spec,partSchemas,partUidsSchemas)=>{const baseS=((partSchemas,partUidsSchemas)=>(partSchemas.length>0?[requiredObjOf("parts",partSchemas)]:[]).concat([required$1("uid"),defaulted("dom",{}),defaulted("components",[]),snapshot("originalSpec"),defaulted("debug.sketcher",{})]).concat(partUidsSchemas))(partSchemas,partUidsSchemas);return asRawOrDie$1(label+" [SpecSchema]",objOfOnly(baseS.concat(schema)),spec)},composite$1=(owner,schema,partTypes,factory,spec)=>{const specWithUid=supplyUid(spec),partSchemas=schemas(partTypes),partUidsSchema=defaultUidsSchema(partTypes),detail=asRawOrDie(owner,schema,specWithUid,partSchemas,[partUidsSchema]),subs=substitutes(0,detail,partTypes);return factory(detail,components$1(owner,detail,subs.internals()),specWithUid,subs.externals())},supplyUid=spec=>(spec=>has$2(spec,"uid"))(spec)?spec:{...spec,uid:generate$5("uid")},singleSchema=objOfOnly([required$1("name"),required$1("factory"),required$1("configFields"),defaulted("apis",{}),defaulted("extraApis",{})]),compositeSchema=objOfOnly([required$1("name"),required$1("factory"),required$1("configFields"),required$1("partFields"),defaulted("apis",{}),defaulted("extraApis",{})]),single=rawConfig=>{const config=asRawOrDie$1("Sketcher for "+rawConfig.name,singleSchema,rawConfig),apis=map$1(config.apis,makeApi),extraApis=map$1(config.extraApis,((f,k)=>markAsExtraApi(f,k)));return{name:config.name,configFields:config.configFields,sketch:spec=>((owner,schema,factory,spec)=>{const specWithUid=supplyUid(spec);return factory(asRawOrDie(owner,schema,specWithUid,[],[]),specWithUid)})(config.name,config.configFields,config.factory,spec),...apis,...extraApis}},composite=rawConfig=>{const config=asRawOrDie$1("Sketcher for "+rawConfig.name,compositeSchema,rawConfig),parts=generate$3(config.name,config.partFields),apis=map$1(config.apis,makeApi),extraApis=map$1(config.extraApis,((f,k)=>markAsExtraApi(f,k)));return{name:config.name,partFields:config.partFields,configFields:config.configFields,sketch:spec=>composite$1(config.name,config.configFields,config.partFields,config.factory,spec),parts:parts,...apis,...extraApis}},inside=target=>isTag("input")(target)&&"radio"!==get$f(target,"type")||isTag("textarea")(target);var ComposeApis=Object.freeze({__proto__:null,getCurrent:(component,composeConfig,_composeState)=>composeConfig.find(component)});const ComposeSchema=[required$1("find")],Composing=create$4({fields:ComposeSchema,name:"composing",apis:ComposeApis}),nativeDisabled=["input","button","textarea","select"],onLoad$1=(component,disableConfig,disableState)=>{(disableConfig.disabled()?disable:enable)(component,disableConfig)},hasNative=(component,config)=>!0===config.useNative&&contains$2(nativeDisabled,name$3(component.element)),nativeDisable=component=>{set$9(component.element,"disabled","disabled")},nativeEnable=component=>{remove$7(component.element,"disabled")},ariaDisable=component=>{set$9(component.element,"aria-disabled","true")},ariaEnable=component=>{set$9(component.element,"aria-disabled","false")},disable=(component,disableConfig,_disableState)=>{disableConfig.disableClass.each((disableClass=>{add$2(component.element,disableClass)}));(hasNative(component,disableConfig)?nativeDisable:ariaDisable)(component),disableConfig.onDisabled(component)},enable=(component,disableConfig,_disableState)=>{disableConfig.disableClass.each((disableClass=>{remove$2(component.element,disableClass)}));(hasNative(component,disableConfig)?nativeEnable:ariaEnable)(component),disableConfig.onEnabled(component)},isDisabled=(component,disableConfig)=>hasNative(component,disableConfig)?(component=>has$1(component.element,"disabled"))(component):(component=>"true"===get$f(component.element,"aria-disabled"))(component);var DisableApis=Object.freeze({__proto__:null,enable:enable,disable:disable,isDisabled:isDisabled,onLoad:onLoad$1,set:(component,disableConfig,disableState,disabled)=>{(disabled?disable:enable)(component,disableConfig)}});var ActiveDisable=Object.freeze({__proto__:null,exhibit:(base,disableConfig)=>nu$7({classes:disableConfig.disabled()?disableConfig.disableClass.toArray():[]}),events:(disableConfig,disableState)=>derive$2([abort(execute$5(),((component,_simulatedEvent)=>isDisabled(component,disableConfig))),loadEvent(disableConfig,disableState,onLoad$1)])}),DisableSchema=[defaultedFunction("disabled",never),defaulted("useNative",!0),option$3("disableClass"),onHandler("onDisabled"),onHandler("onEnabled")];const Disabling=create$4({fields:DisableSchema,name:"disabling",active:ActiveDisable,apis:DisableApis}),dehighlightAllExcept=(component,hConfig,hState,skip)=>{const highlighted=descendants(component.element,"."+hConfig.highlightClass);each$1(highlighted,(h=>{exists(skip,(skipComp=>eq(skipComp.element,h)))||(remove$2(h,hConfig.highlightClass),component.getSystem().getByDom(h).each((target=>{hConfig.onDehighlight(component,target),emit(target,dehighlight$1())})))}))},highlight=(component,hConfig,hState,target)=>{dehighlightAllExcept(component,hConfig,0,[target]),isHighlighted(component,hConfig,hState,target)||(add$2(target.element,hConfig.highlightClass),hConfig.onHighlight(component,target),emit(target,highlight$1()))},isHighlighted=(component,hConfig,hState,queryTarget)=>has(queryTarget.element,hConfig.highlightClass),getByIndex=(component,hConfig,hState,index)=>{const items=descendants(component.element,"."+hConfig.itemClass);return Optional.from(items[index]).fold((()=>Result.error(new Error("No element found with index "+index))),component.getSystem().getByDom)},getFirst=(component,hConfig,_hState)=>descendant(component.element,"."+hConfig.itemClass).bind((e=>component.getSystem().getByDom(e).toOptional())),getLast=(component,hConfig,_hState)=>{const items=descendants(component.element,"."+hConfig.itemClass);return(items.length>0?Optional.some(items[items.length-1]):Optional.none()).bind((c=>component.getSystem().getByDom(c).toOptional()))},getDelta$2=(component,hConfig,hState,delta)=>{const items=descendants(component.element,"."+hConfig.itemClass),current=findIndex$1(items,(item=>has(item,hConfig.highlightClass)));return current.bind((selected=>{const dest=cycleBy(selected,delta,0,items.length-1);return component.getSystem().getByDom(items[dest]).toOptional()}))},getCandidates=(component,hConfig,_hState)=>{const items=descendants(component.element,"."+hConfig.itemClass);return cat(map$2(items,(i=>component.getSystem().getByDom(i).toOptional())))};var HighlightApis=Object.freeze({__proto__:null,dehighlightAll:(component,hConfig,hState)=>dehighlightAllExcept(component,hConfig,0,[]),dehighlight:(component,hConfig,hState,target)=>{isHighlighted(component,hConfig,hState,target)&&(remove$2(target.element,hConfig.highlightClass),hConfig.onDehighlight(component,target),emit(target,dehighlight$1()))},highlight:highlight,highlightFirst:(component,hConfig,hState)=>{getFirst(component,hConfig).each((firstComp=>{highlight(component,hConfig,hState,firstComp)}))},highlightLast:(component,hConfig,hState)=>{getLast(component,hConfig).each((lastComp=>{highlight(component,hConfig,hState,lastComp)}))},highlightAt:(component,hConfig,hState,index)=>{getByIndex(component,hConfig,hState,index).fold((err=>{throw err}),(firstComp=>{highlight(component,hConfig,hState,firstComp)}))},highlightBy:(component,hConfig,hState,predicate)=>{const candidates=getCandidates(component,hConfig);find$5(candidates,predicate).each((c=>{highlight(component,hConfig,hState,c)}))},isHighlighted:isHighlighted,getHighlighted:(component,hConfig,_hState)=>descendant(component.element,"."+hConfig.highlightClass).bind((e=>component.getSystem().getByDom(e).toOptional())),getFirst:getFirst,getLast:getLast,getPrevious:(component,hConfig,hState)=>getDelta$2(component,hConfig,0,-1),getNext:(component,hConfig,hState)=>getDelta$2(component,hConfig,0,1),getCandidates:getCandidates}),HighlightSchema=[required$1("highlightClass"),required$1("itemClass"),onHandler("onHighlight"),onHandler("onDehighlight")];const Highlighting=create$4({fields:HighlightSchema,name:"highlighting",apis:HighlightApis}),BACKSPACE=[8],TAB=[9],ENTER=[13],ESCAPE=[27],SPACE=[32],LEFT=[37],UP=[38],RIGHT=[39],DOWN=[40],cyclePrev=(values,index,predicate)=>{const before=reverse(values.slice(0,index)),after=reverse(values.slice(index+1));return find$5(before.concat(after),predicate)},tryPrev=(values,index,predicate)=>{const before=reverse(values.slice(0,index));return find$5(before,predicate)},cycleNext=(values,index,predicate)=>{const before=values.slice(0,index),after=values.slice(index+1);return find$5(after.concat(before),predicate)},tryNext=(values,index,predicate)=>{const after=values.slice(index+1);return find$5(after,predicate)},inSet=keys=>event=>{const raw=event.raw;return contains$2(keys,raw.which)},and=preds=>event=>forall(preds,(pred=>pred(event))),isShift$1=event=>!0===event.raw.shiftKey,isControl=event=>!0===event.raw.ctrlKey,isNotShift=not(isShift$1),rule=(matches,action)=>({matches:matches,classification:action}),reportFocusShifting=(component,prevFocus,newFocus)=>{prevFocus.exists((p=>newFocus.exists((n=>eq(n,p)))))||emitWith(component,focusShifted(),{prevFocus:prevFocus,newFocus:newFocus})},dom$2=()=>{const get=component=>search(component.element);return{get:get,set:(component,focusee)=>{const prevFocus=get(component);component.getSystem().triggerFocus(focusee,component.element);const newFocus=get(component);reportFocusShifting(component,prevFocus,newFocus)}}},highlights=()=>{const get=component=>Highlighting.getHighlighted(component).map((item=>item.element));return{get:get,set:(component,element)=>{const prevFocus=get(component);component.getSystem().getByDom(element).fold(noop,(item=>{Highlighting.highlight(component,item)}));const newFocus=get(component);reportFocusShifting(component,prevFocus,newFocus)}}};var FocusInsideModes;!function(FocusInsideModes){FocusInsideModes.OnFocusMode="onFocus",FocusInsideModes.OnEnterOrSpaceMode="onEnterOrSpace",FocusInsideModes.OnApiMode="onApi"}(FocusInsideModes||(FocusInsideModes={}));const typical=(infoSchema,stateInit,getKeydownRules,getKeyupRules,optFocusIn)=>{const processKey=(component,simulatedEvent,getRules,keyingConfig,keyingState)=>((transitions,event)=>{const transition=find$5(transitions,(t=>t.matches(event)));return transition.map((t=>t.classification))})(getRules(component,simulatedEvent,keyingConfig,keyingState),simulatedEvent.event).bind((rule=>rule(component,simulatedEvent,keyingConfig,keyingState))),me={schema:()=>infoSchema.concat([defaulted("focusManager",dom$2()),defaultedOf("focusInside","onFocus",valueOf((val=>contains$2(["onFocus","onEnterOrSpace","onApi"],val)?Result.value(val):Result.error("Invalid value for focusInside")))),output$1("handler",me),output$1("state",stateInit),output$1("sendFocusIn",optFocusIn)]),processKey:processKey,toEvents:(keyingConfig,keyingState)=>{const onFocusHandler=keyingConfig.focusInside!==FocusInsideModes.OnFocusMode?Optional.none():optFocusIn(keyingConfig).map((focusIn=>run$1(focus$4(),((component,simulatedEvent)=>{focusIn(component,keyingConfig,keyingState),simulatedEvent.stop()})))),keyboardEvents=[run$1(keydown(),((component,simulatedEvent)=>{processKey(component,simulatedEvent,getKeydownRules,keyingConfig,keyingState).fold((()=>{((component,simulatedEvent)=>{const isEnterOrSpace=inSet(SPACE.concat(ENTER))(simulatedEvent.event);keyingConfig.focusInside===FocusInsideModes.OnEnterOrSpaceMode&&isEnterOrSpace&&isSource(component,simulatedEvent)&&optFocusIn(keyingConfig).each((focusIn=>{focusIn(component,keyingConfig,keyingState),simulatedEvent.stop()}))})(component,simulatedEvent)}),(_=>{simulatedEvent.stop()}))})),run$1(keyup(),((component,simulatedEvent)=>{processKey(component,simulatedEvent,getKeyupRules,keyingConfig,keyingState).each((_=>{simulatedEvent.stop()}))}))];return derive$2(onFocusHandler.toArray().concat(keyboardEvents))}};return me},create$2=cyclicField=>{const schema=[option$3("onEscape"),option$3("onEnter"),defaulted("selector",'[data-alloy-tabstop="true"]:not(:disabled)'),defaulted("firstTabstop",0),defaulted("useTabstopAt",always),option$3("visibilitySelector")].concat([cyclicField]),isVisible=(tabbingConfig,element)=>{const target=tabbingConfig.visibilitySelector.bind((sel=>closest$1(element,sel))).getOr(element);return get$d(target)>0},findCurrent=(component,tabbingConfig)=>tabbingConfig.focusManager.get(component).bind((elem=>closest$1(elem,tabbingConfig.selector))),focusIn=(component,tabbingConfig,_tabbingState)=>{((component,tabbingConfig)=>{const tabstops=descendants(component.element,tabbingConfig.selector),visibles=filter$2(tabstops,(elem=>isVisible(tabbingConfig,elem)));return Optional.from(visibles[tabbingConfig.firstTabstop])})(component,tabbingConfig).each((target=>{tabbingConfig.focusManager.set(component,target)}))},goFromTabstop=(component,tabstops,stopIndex,tabbingConfig,cycle)=>cycle(tabstops,stopIndex,(elem=>((tabbingConfig,element)=>isVisible(tabbingConfig,element)&&tabbingConfig.useTabstopAt(element))(tabbingConfig,elem))).fold((()=>tabbingConfig.cyclic?Optional.some(!0):Optional.none()),(target=>(tabbingConfig.focusManager.set(component,target),Optional.some(!0)))),go=(component,_simulatedEvent,tabbingConfig,cycle)=>{const tabstops=descendants(component.element,tabbingConfig.selector);return findCurrent(component,tabbingConfig).bind((tabstop=>findIndex$1(tabstops,curry(eq,tabstop)).bind((stopIndex=>goFromTabstop(component,tabstops,stopIndex,tabbingConfig,cycle)))))},goBackwards=(component,simulatedEvent,tabbingConfig)=>{const navigate=tabbingConfig.cyclic?cyclePrev:tryPrev;return go(component,0,tabbingConfig,navigate)},goForwards=(component,simulatedEvent,tabbingConfig)=>{const navigate=tabbingConfig.cyclic?cycleNext:tryNext;return go(component,0,tabbingConfig,navigate)},isFirstChild=elem=>(element=>parent(element))(elem).bind(firstChild).exists((child=>eq(child,elem))),getKeydownRules=constant$1([rule(and([isShift$1,inSet(TAB)]),goBackwards),rule(inSet(TAB),goForwards),rule(and([isNotShift,inSet(ENTER)]),((component,simulatedEvent,tabbingConfig)=>tabbingConfig.onEnter.bind((f=>f(component,simulatedEvent)))))]),getKeyupRules=constant$1([rule(inSet(ESCAPE),((component,simulatedEvent,tabbingConfig)=>tabbingConfig.onEscape.bind((f=>f(component,simulatedEvent))))),rule(inSet(TAB),((component,simulatedEvent,tabbingConfig)=>findCurrent(component,tabbingConfig).filter((elem=>!tabbingConfig.useTabstopAt(elem))).bind((elem=>(isFirstChild(elem)?goBackwards:goForwards)(component,simulatedEvent,tabbingConfig)))))]);return typical(schema,NoState.init,getKeydownRules,getKeyupRules,(()=>Optional.some(focusIn)))};var AcyclicType=create$2(customField("cyclic",never)),CyclicType=create$2(customField("cyclic",always));const defaultExecute=(component,simulatedEvent,focused)=>inside(focused)&&inSet(SPACE)(simulatedEvent.event)?Optional.none():((component,_simulatedEvent,focused)=>(dispatch(component,focused,execute$5()),Optional.some(!0)))(component,0,focused),stopEventForFirefox=(_component,_simulatedEvent)=>Optional.some(!0),schema$v=[defaulted("execute",defaultExecute),defaulted("useSpace",!1),defaulted("useEnter",!0),defaulted("useControlEnter",!1),defaulted("useDown",!1)],execute$4=(component,simulatedEvent,executeConfig)=>executeConfig.execute(component,simulatedEvent,component.element);var ExecutionType=typical(schema$v,NoState.init,((component,_simulatedEvent,executeConfig,_executeState)=>{const spaceExec=executeConfig.useSpace&&!inside(component.element)?SPACE:[],enterExec=executeConfig.useEnter?ENTER:[],downExec=executeConfig.useDown?DOWN:[],execKeys=spaceExec.concat(enterExec).concat(downExec);return[rule(inSet(execKeys),execute$4)].concat(executeConfig.useControlEnter?[rule(and([isControl,inSet(ENTER)]),execute$4)]:[])}),((component,_simulatedEvent,executeConfig,_executeState)=>executeConfig.useSpace&&!inside(component.element)?[rule(inSet(SPACE),stopEventForFirefox)]:[]),(()=>Optional.none()));const flatgrid$1=()=>{const dimensions=value$2();return nu$8({readState:()=>dimensions.get().map((d=>({numRows:String(d.numRows),numColumns:String(d.numColumns)}))).getOr({numRows:"?",numColumns:"?"}),setGridSize:(numRows,numColumns)=>{dimensions.set({numRows:numRows,numColumns:numColumns})},getNumRows:()=>dimensions.get().map((d=>d.numRows)),getNumColumns:()=>dimensions.get().map((d=>d.numColumns))})};var KeyingState=Object.freeze({__proto__:null,flatgrid:flatgrid$1,init:spec=>spec.state(spec)});const useH=movement=>(component,simulatedEvent,config,state)=>{const move=movement(component.element);return use(move,component,simulatedEvent,config,state)},west$1=(moveLeft,moveRight)=>{const movement=onDirection(moveLeft,moveRight);return useH(movement)},east$1=(moveLeft,moveRight)=>{const movement=onDirection(moveRight,moveLeft);return useH(movement)},useV=move=>(component,simulatedEvent,config,state)=>use(move,component,simulatedEvent,config,state),use=(move,component,simulatedEvent,config,state)=>config.focusManager.get(component).bind((focused=>move(component.element,focused,config,state))).map((newFocus=>(config.focusManager.set(component,newFocus),!0))),north$1=useV,south$1=useV,move$1=useV,isVisible=element=>!(dom=>dom.offsetWidth<=0&&dom.offsetHeight<=0)(element.dom),locateVisible=(container,current,selector)=>{const candidates=descendants(container,selector);return((candidates,predicate)=>findIndex$1(candidates,predicate).map((index=>({index:index,candidates:candidates}))))(filter$2(candidates,isVisible),(x=>eq(x,current)))},findIndex=(elements,target)=>findIndex$1(elements,(elem=>eq(target,elem))),withGrid=(values,index,numCols,f)=>f(Math.floor(index/numCols),index%numCols).bind((address=>{const newIndex=address.row*numCols+address.column;return newIndex>=0&&newIndex<values.length?Optional.some(values[newIndex]):Optional.none()})),cycleHorizontal$1=(values,index,numRows,numCols,delta)=>withGrid(values,index,numCols,((oldRow,oldColumn)=>{const colsInRow=oldRow===numRows-1?values.length-oldRow*numCols:numCols,newColumn=cycleBy(oldColumn,delta,0,colsInRow-1);return Optional.some({row:oldRow,column:newColumn})})),cycleVertical$1=(values,index,numRows,numCols,delta)=>withGrid(values,index,numCols,((oldRow,oldColumn)=>{const newRow=cycleBy(oldRow,delta,0,numRows-1),colsInRow=newRow===numRows-1?values.length-newRow*numCols:numCols,newCol=clamp(oldColumn,0,colsInRow-1);return Optional.some({row:newRow,column:newCol})})),schema$u=[required$1("selector"),defaulted("execute",defaultExecute),onKeyboardHandler("onEscape"),defaulted("captureTab",!1),initSize()],focusIn$3=(component,gridConfig,_gridState)=>{descendant(component.element,gridConfig.selector).each((first=>{gridConfig.focusManager.set(component,first)}))},doMove$2=cycle=>(element,focused,gridConfig,gridState)=>locateVisible(element,focused,gridConfig.selector).bind((identified=>cycle(identified.candidates,identified.index,gridState.getNumRows().getOr(gridConfig.initSize.numRows),gridState.getNumColumns().getOr(gridConfig.initSize.numColumns)))),handleTab=(_component,_simulatedEvent,gridConfig)=>gridConfig.captureTab?Optional.some(!0):Optional.none(),moveLeft$3=doMove$2(((values,index,numRows,numCols)=>cycleHorizontal$1(values,index,numRows,numCols,-1))),moveRight$3=doMove$2(((values,index,numRows,numCols)=>cycleHorizontal$1(values,index,numRows,numCols,1))),moveNorth$1=doMove$2(((values,index,numRows,numCols)=>cycleVertical$1(values,index,numRows,numCols,-1))),moveSouth$1=doMove$2(((values,index,numRows,numCols)=>cycleVertical$1(values,index,numRows,numCols,1))),getKeydownRules$4=constant$1([rule(inSet(LEFT),west$1(moveLeft$3,moveRight$3)),rule(inSet(RIGHT),east$1(moveLeft$3,moveRight$3)),rule(inSet(UP),north$1(moveNorth$1)),rule(inSet(DOWN),south$1(moveSouth$1)),rule(and([isShift$1,inSet(TAB)]),handleTab),rule(and([isNotShift,inSet(TAB)]),handleTab),rule(inSet(SPACE.concat(ENTER)),((component,simulatedEvent,gridConfig,_gridState)=>((component,gridConfig)=>gridConfig.focusManager.get(component).bind((elem=>closest$1(elem,gridConfig.selector))))(component,gridConfig).bind((focused=>gridConfig.execute(component,simulatedEvent,focused)))))]),getKeyupRules$4=constant$1([rule(inSet(ESCAPE),((component,simulatedEvent,gridConfig)=>gridConfig.onEscape(component,simulatedEvent))),rule(inSet(SPACE),stopEventForFirefox)]);var FlatgridType=typical(schema$u,flatgrid$1,getKeydownRules$4,getKeyupRules$4,(()=>Optional.some(focusIn$3)));const f=(container,selector,current,delta,getNewIndex)=>{const tryNewIndex=(initial,index,candidates)=>getNewIndex(initial,index,delta,0,candidates.length-1,candidates[index],(newIndex=>{return candidate=candidates[newIndex],"button"===name$3(candidate)&&"disabled"===get$f(candidate,"disabled")?tryNewIndex(initial,newIndex,candidates):Optional.from(candidates[newIndex]);var candidate}));return locateVisible(container,current,selector).bind((identified=>{const index=identified.index,candidates=identified.candidates;return tryNewIndex(index,index,candidates)}))},horizontalWithoutCycles=(container,selector,current,delta)=>f(container,selector,current,delta,((prevIndex,v,d,min,max,oldCandidate,onNewIndex)=>{const newIndex=clamp(v+d,min,max);return newIndex===prevIndex?Optional.from(oldCandidate):onNewIndex(newIndex)})),horizontal=(container,selector,current,delta)=>f(container,selector,current,delta,((prevIndex,v,d,min,max,_oldCandidate,onNewIndex)=>{const newIndex=cycleBy(v,d,min,max);return newIndex===prevIndex?Optional.none():onNewIndex(newIndex)})),schema$t=[required$1("selector"),defaulted("getInitial",Optional.none),defaulted("execute",defaultExecute),onKeyboardHandler("onEscape"),defaulted("executeOnMove",!1),defaulted("allowVertical",!0),defaulted("allowHorizontal",!0),defaulted("cycles",!0)],execute$2=(component,simulatedEvent,flowConfig)=>((component,flowConfig)=>flowConfig.focusManager.get(component).bind((elem=>closest$1(elem,flowConfig.selector))))(component,flowConfig).bind((focused=>flowConfig.execute(component,simulatedEvent,focused))),focusIn$2=(component,flowConfig,_state)=>{flowConfig.getInitial(component).orThunk((()=>descendant(component.element,flowConfig.selector))).each((first=>{flowConfig.focusManager.set(component,first)}))},moveLeft$2=(element,focused,info)=>(info.cycles?horizontal:horizontalWithoutCycles)(element,info.selector,focused,-1),moveRight$2=(element,focused,info)=>(info.cycles?horizontal:horizontalWithoutCycles)(element,info.selector,focused,1),doMove$1=movement=>(component,simulatedEvent,flowConfig,flowState)=>movement(component,simulatedEvent,flowConfig,flowState).bind((()=>flowConfig.executeOnMove?execute$2(component,simulatedEvent,flowConfig):Optional.some(!0))),getKeyupRules$3=constant$1([rule(inSet(SPACE),stopEventForFirefox),rule(inSet(ESCAPE),((component,simulatedEvent,flowConfig)=>flowConfig.onEscape(component,simulatedEvent)))]);var FlowType=typical(schema$t,NoState.init,((_component,_se,flowConfig,_flowState)=>{const westMovers=[...flowConfig.allowHorizontal?LEFT:[]].concat(flowConfig.allowVertical?UP:[]),eastMovers=[...flowConfig.allowHorizontal?RIGHT:[]].concat(flowConfig.allowVertical?DOWN:[]);return[rule(inSet(westMovers),doMove$1(west$1(moveLeft$2,moveRight$2))),rule(inSet(eastMovers),doMove$1(east$1(moveLeft$2,moveRight$2))),rule(inSet(ENTER),execute$2),rule(inSet(SPACE),execute$2)]}),getKeyupRules$3,(()=>Optional.some(focusIn$2)));const toCell=(matrix,rowIndex,columnIndex)=>Optional.from(matrix[rowIndex]).bind((row=>Optional.from(row[columnIndex]).map((cell=>({rowIndex:rowIndex,columnIndex:columnIndex,cell:cell}))))),cycleHorizontal=(matrix,rowIndex,startCol,deltaCol)=>{const colsInRow=matrix[rowIndex].length,newColIndex=cycleBy(startCol,deltaCol,0,colsInRow-1);return toCell(matrix,rowIndex,newColIndex)},cycleVertical=(matrix,colIndex,startRow,deltaRow)=>{const nextRowIndex=cycleBy(startRow,deltaRow,0,matrix.length-1),colsInNextRow=matrix[nextRowIndex].length,nextColIndex=clamp(colIndex,0,colsInNextRow-1);return toCell(matrix,nextRowIndex,nextColIndex)},moveHorizontal=(matrix,rowIndex,startCol,deltaCol)=>{const colsInRow=matrix[rowIndex].length,newColIndex=clamp(startCol+deltaCol,0,colsInRow-1);return toCell(matrix,rowIndex,newColIndex)},moveVertical=(matrix,colIndex,startRow,deltaRow)=>{const nextRowIndex=clamp(startRow+deltaRow,0,matrix.length-1),colsInNextRow=matrix[nextRowIndex].length,nextColIndex=clamp(colIndex,0,colsInNextRow-1);return toCell(matrix,nextRowIndex,nextColIndex)},schema$s=[requiredObjOf("selectors",[required$1("row"),required$1("cell")]),defaulted("cycles",!0),defaulted("previousSelector",Optional.none),defaulted("execute",defaultExecute)],focusIn$1=(component,matrixConfig,_state)=>{matrixConfig.previousSelector(component).orThunk((()=>{const selectors=matrixConfig.selectors;return descendant(component.element,selectors.cell)})).each((cell=>{matrixConfig.focusManager.set(component,cell)}))},doMove=(ifCycle,ifMove)=>(element,focused,matrixConfig)=>{const move=matrixConfig.cycles?ifCycle:ifMove;return closest$1(focused,matrixConfig.selectors.row).bind((inRow=>{const cellsInRow=descendants(inRow,matrixConfig.selectors.cell);return findIndex(cellsInRow,focused).bind((colIndex=>{const allRows=descendants(element,matrixConfig.selectors.row);return findIndex(allRows,inRow).bind((rowIndex=>{const matrix=((rows,matrixConfig)=>map$2(rows,(row=>descendants(row,matrixConfig.selectors.cell))))(allRows,matrixConfig);return move(matrix,rowIndex,colIndex).map((next=>next.cell))}))}))}))},moveLeft=doMove(((matrix,startRow,startCol)=>cycleHorizontal(matrix,startRow,startCol,-1)),((matrix,startRow,startCol)=>moveHorizontal(matrix,startRow,startCol,-1))),moveRight=doMove(((matrix,startRow,startCol)=>cycleHorizontal(matrix,startRow,startCol,1)),((matrix,startRow,startCol)=>moveHorizontal(matrix,startRow,startCol,1))),moveNorth=doMove(((matrix,startRow,startCol)=>cycleVertical(matrix,startCol,startRow,-1)),((matrix,startRow,startCol)=>moveVertical(matrix,startCol,startRow,-1))),moveSouth=doMove(((matrix,startRow,startCol)=>cycleVertical(matrix,startCol,startRow,1)),((matrix,startRow,startCol)=>moveVertical(matrix,startCol,startRow,1))),getKeydownRules$2=constant$1([rule(inSet(LEFT),west$1(moveLeft,moveRight)),rule(inSet(RIGHT),east$1(moveLeft,moveRight)),rule(inSet(UP),north$1(moveNorth)),rule(inSet(DOWN),south$1(moveSouth)),rule(inSet(SPACE.concat(ENTER)),((component,simulatedEvent,matrixConfig)=>search(component.element).bind((focused=>matrixConfig.execute(component,simulatedEvent,focused)))))]),getKeyupRules$2=constant$1([rule(inSet(SPACE),stopEventForFirefox)]);var MatrixType=typical(schema$s,NoState.init,getKeydownRules$2,getKeyupRules$2,(()=>Optional.some(focusIn$1)));const schema$r=[required$1("selector"),defaulted("execute",defaultExecute),defaulted("moveOnTab",!1)],execute=(component,simulatedEvent,menuConfig)=>menuConfig.focusManager.get(component).bind((focused=>menuConfig.execute(component,simulatedEvent,focused))),focusIn=(component,menuConfig,_state)=>{descendant(component.element,menuConfig.selector).each((first=>{menuConfig.focusManager.set(component,first)}))},moveUp=(element,focused,info)=>horizontal(element,info.selector,focused,-1),moveDown=(element,focused,info)=>horizontal(element,info.selector,focused,1),getKeydownRules$1=constant$1([rule(inSet(UP),move$1(moveUp)),rule(inSet(DOWN),move$1(moveDown)),rule(and([isShift$1,inSet(TAB)]),((component,simulatedEvent,menuConfig,menuState)=>menuConfig.moveOnTab?move$1(moveUp)(component,simulatedEvent,menuConfig,menuState):Optional.none())),rule(and([isNotShift,inSet(TAB)]),((component,simulatedEvent,menuConfig,menuState)=>menuConfig.moveOnTab?move$1(moveDown)(component,simulatedEvent,menuConfig,menuState):Optional.none())),rule(inSet(ENTER),execute),rule(inSet(SPACE),execute)]),getKeyupRules$1=constant$1([rule(inSet(SPACE),stopEventForFirefox)]);var MenuType=typical(schema$r,NoState.init,getKeydownRules$1,getKeyupRules$1,(()=>Optional.some(focusIn)));const schema$q=[onKeyboardHandler("onSpace"),onKeyboardHandler("onEnter"),onKeyboardHandler("onShiftEnter"),onKeyboardHandler("onLeft"),onKeyboardHandler("onRight"),onKeyboardHandler("onTab"),onKeyboardHandler("onShiftTab"),onKeyboardHandler("onUp"),onKeyboardHandler("onDown"),onKeyboardHandler("onEscape"),defaulted("stopSpaceKeyup",!1),option$3("focusIn")];var SpecialType=typical(schema$q,NoState.init,((component,simulatedEvent,specialInfo)=>[rule(inSet(SPACE),specialInfo.onSpace),rule(and([isNotShift,inSet(ENTER)]),specialInfo.onEnter),rule(and([isShift$1,inSet(ENTER)]),specialInfo.onShiftEnter),rule(and([isShift$1,inSet(TAB)]),specialInfo.onShiftTab),rule(and([isNotShift,inSet(TAB)]),specialInfo.onTab),rule(inSet(UP),specialInfo.onUp),rule(inSet(DOWN),specialInfo.onDown),rule(inSet(LEFT),specialInfo.onLeft),rule(inSet(RIGHT),specialInfo.onRight),rule(inSet(SPACE),specialInfo.onSpace)]),((component,simulatedEvent,specialInfo)=>[...specialInfo.stopSpaceKeyup?[rule(inSet(SPACE),stopEventForFirefox)]:[],rule(inSet(ESCAPE),specialInfo.onEscape)]),(specialInfo=>specialInfo.focusIn));const acyclic=AcyclicType.schema(),cyclic=CyclicType.schema(),flow=FlowType.schema(),flatgrid=FlatgridType.schema(),matrix=MatrixType.schema(),execution=ExecutionType.schema(),menu=MenuType.schema(),special=SpecialType.schema();const Keying=createModes({branchKey:"mode",branches:Object.freeze({__proto__:null,acyclic:acyclic,cyclic:cyclic,flow:flow,flatgrid:flatgrid,matrix:matrix,execution:execution,menu:menu,special:special}),name:"keying",active:{events:(keyingConfig,keyingState)=>keyingConfig.handler.toEvents(keyingConfig,keyingState)},apis:{focusIn:(component,keyConfig,keyState)=>{keyConfig.sendFocusIn(keyConfig).fold((()=>{component.getSystem().triggerFocus(component.element,component.element)}),(sendFocusIn=>{sendFocusIn(component,keyConfig,keyState)}))},setGridSize:(component,keyConfig,keyState,numRows,numColumns)=>{(keyState=>hasNonNullableKey(keyState,"setGridSize"))(keyState)?keyState.setGridSize(numRows,numColumns):console.error("Layout does not support setGridSize")}},state:KeyingState}),withoutReuse=(parent,data)=>{preserve$1((()=>{replaceChildren(parent,data,(()=>map$2(data,parent.getSystem().build)))}),parent.element)},withReuse=(parent,data)=>{preserve$1((()=>{((component,newSpecs,buildNewChildren)=>{const subs=component.components(),existingComps=bind$3(newSpecs,(spec=>getPremade(spec).toArray()));each$1(subs,(childComp=>{contains$2(existingComps,childComp)||virtualDetach(childComp)}));const newChildren=buildNewChildren(newSpecs),deleted=difference(subs,newChildren);each$1(deleted,(deletedComp=>{isConnected(deletedComp)&&virtualDetach(deletedComp)})),each$1(newChildren,(childComp=>{isConnected(childComp)||virtualAttach(component,childComp)})),component.syncComponents()})(parent,data,(()=>((parent,specs,build)=>patchChildrenWith(parent,specs,((spec,index)=>patchSpecChild(parent,index,spec,build))))(parent.element,data,parent.getSystem().buildOrPatch)))}),parent.element)},virtualReplace=(component,replacee,replaceeIndex,childSpec)=>{virtualDetach(replacee);const child=patchSpecChild(component.element,replaceeIndex,childSpec,component.getSystem().buildOrPatch);virtualAttach(component,child),component.syncComponents()},insert=(component,insertion,childSpec)=>{const child=component.getSystem().build(childSpec);attachWith(component,child,insertion)},replace=(component,replacee,replaceeIndex,childSpec)=>{detach(replacee),insert(component,((p,c)=>((parent,element,index)=>{child$2(parent,index).fold((()=>{append$2(parent,element)}),(v=>{before$1(v,element)}))})(p,c,replaceeIndex)),childSpec)},contents=(component,_replaceConfig)=>component.components(),replaceAt=(component,replaceConfig,replaceState,replaceeIndex,replacer)=>{const children=contents(component);return Optional.from(children[replaceeIndex]).map((replacee=>(replacer.fold((()=>detach(replacee)),(r=>{(replaceConfig.reuseDom?virtualReplace:replace)(component,replacee,replaceeIndex,r)})),replacee)))};var ReplaceApis=Object.freeze({__proto__:null,append:(component,replaceConfig,replaceState,appendee)=>{insert(component,append$2,appendee)},prepend:(component,replaceConfig,replaceState,prependee)=>{insert(component,prepend$1,prependee)},remove:(component,replaceConfig,replaceState,removee)=>{const children=contents(component),foundChild=find$5(children,(child=>eq(removee.element,child.element)));foundChild.each(detach)},replaceAt:replaceAt,replaceBy:(component,replaceConfig,replaceState,replaceePred,replacer)=>{const children=contents(component);return findIndex$1(children,replaceePred).bind((replaceeIndex=>replaceAt(component,replaceConfig,0,replaceeIndex,replacer)))},set:(component,replaceConfig,replaceState,data)=>(replaceConfig.reuseDom?withReuse:withoutReuse)(component,data),contents:contents});const Replacing=create$4({fields:[defaultedBoolean("reuseDom",!0)],name:"replacing",apis:ReplaceApis}),config=(name,eventHandlers)=>{const me=((name,eventHandlers)=>{const events=derive$2(eventHandlers);return create$4({fields:[required$1("enabled")],name:name,active:{events:constant$1(events)}})})(name,eventHandlers);return{key:name,value:{config:{},me:me,configAsRaw:constant$1({}),initialConfig:{},state:NoState}}},focus$2=(component,focusConfig)=>{focusConfig.ignore||(focus$3(component.element),focusConfig.onFocus(component))};var FocusApis=Object.freeze({__proto__:null,focus:focus$2,blur:(component,focusConfig)=>{focusConfig.ignore||blur$1(component.element)},isFocused:component=>hasFocus(component.element)});var ActiveFocus=Object.freeze({__proto__:null,exhibit:(base,focusConfig)=>{const mod=focusConfig.ignore?{}:{attributes:{tabindex:"-1"}};return nu$7(mod)},events:focusConfig=>derive$2([run$1(focus$4(),((component,simulatedEvent)=>{focus$2(component,focusConfig),simulatedEvent.stop()}))].concat(focusConfig.stopMousedown?[run$1(mousedown(),((_,simulatedEvent)=>{simulatedEvent.event.prevent()}))]:[]))}),FocusSchema=[onHandler("onFocus"),defaulted("stopMousedown",!1),defaulted("ignore",!1)];const Focusing=create$4({fields:FocusSchema,name:"focusing",active:ActiveFocus,apis:FocusApis}),set$2=(component,toggleConfig,toggleState,state)=>{const initialState=toggleState.get();toggleState.set(state),((component,toggleConfig,toggleState)=>{toggleConfig.toggleClass.each((toggleClass=>{toggleState.get()?add$2(component.element,toggleClass):remove$2(component.element,toggleClass)}))})(component,toggleConfig,toggleState),((component,toggleConfig,toggleState)=>{const ariaInfo=toggleConfig.aria;ariaInfo.update(component,ariaInfo,toggleState.get())})(component,toggleConfig,toggleState),initialState!==state&&toggleConfig.onToggled(component,state)},toggle$2=(component,toggleConfig,toggleState)=>{set$2(component,toggleConfig,toggleState,!toggleState.get())},onLoad=(component,toggleConfig,toggleState)=>{set$2(component,toggleConfig,toggleState,toggleConfig.selected)};var ToggleApis=Object.freeze({__proto__:null,onLoad:onLoad,toggle:toggle$2,isOn:(component,toggleConfig,toggleState)=>toggleState.get(),on:(component,toggleConfig,toggleState)=>{set$2(component,toggleConfig,toggleState,!0)},off:(component,toggleConfig,toggleState)=>{set$2(component,toggleConfig,toggleState,!1)},set:set$2});var ActiveToggle=Object.freeze({__proto__:null,exhibit:()=>nu$7({}),events:(toggleConfig,toggleState)=>{const execute=(bConfig=toggleConfig,bState=toggleState,executor=toggle$2,runOnExecute$1((component=>{executor(component,bConfig,bState)})));var bConfig,bState,executor;const load=loadEvent(toggleConfig,toggleState,onLoad);return derive$2(flatten([toggleConfig.toggleOnExecute?[execute]:[],[load]]))}});const updateExpanded=(component,ariaInfo,status)=>{set$9(component.element,"aria-expanded",status)};var ToggleSchema=[defaulted("selected",!1),option$3("toggleClass"),defaulted("toggleOnExecute",!0),onHandler("onToggled"),defaultedOf("aria",{mode:"none"},choose$1("mode",{pressed:[defaulted("syncWithExpanded",!1),output$1("update",((component,ariaInfo,status)=>{set$9(component.element,"aria-pressed",status),ariaInfo.syncWithExpanded&&updateExpanded(component,ariaInfo,status)}))],checked:[output$1("update",((component,ariaInfo,status)=>{set$9(component.element,"aria-checked",status)}))],expanded:[output$1("update",updateExpanded)],selected:[output$1("update",((component,ariaInfo,status)=>{set$9(component.element,"aria-selected",status)}))],none:[output$1("update",noop)]}))];const Toggling=create$4({fields:ToggleSchema,name:"toggling",active:ActiveToggle,apis:ToggleApis,state:(initialState=!1,{init:()=>{const cell=Cell(initialState);return{get:()=>cell.get(),set:newState=>cell.set(newState),clear:()=>cell.set(initialState),readState:()=>cell.get()}}})});var initialState;const pointerEvents=()=>{const onClick=(component,simulatedEvent)=>{simulatedEvent.stop(),emitExecute(component)};return[run$1(click(),onClick),run$1(tap(),onClick),cutter(touchstart()),cutter(mousedown())]},events$a=optAction=>derive$2(flatten([optAction.map((action=>runOnExecute$1(((component,simulatedEvent)=>{action(component),simulatedEvent.stop()})))).toArray(),pointerEvents()])),onHover=item=>{(search(item.element).isNone()||Focusing.isFocused(item))&&(Focusing.isFocused(item)||Focusing.focus(item),emitWith(item,"alloy.item-hover",{item:item}))},onFocus$1=item=>{emitWith(item,"alloy.item-focus",{item:item})},hover=constant$1("alloy.item-hover"),focus$1=constant$1("alloy.item-focus"),toggled=constant$1("alloy.item-toggled"),getItemRole=detail=>detail.toggling.map((toggling=>toggling.exclusive?"menuitemradio":"menuitemcheckbox")).getOr("menuitem"),getTogglingSpec=tConfig=>({aria:{mode:"checked"},...filter$1(tConfig,((_value,name)=>"exclusive"!==name)),onToggled:(component,state)=>{isFunction(tConfig.onToggled)&&tConfig.onToggled(component,state),((item,state)=>{emitWith(item,"alloy.item-toggled",{item:item,state:state})})(component,state)}}),schema$p=[required$1("data"),required$1("components"),required$1("dom"),defaulted("hasSubmenu",!1),option$3("toggling"),SketchBehaviours_field("itemBehaviours",[Toggling,Focusing,Keying,Representing]),defaulted("ignoreFocus",!1),defaulted("domModification",{}),output$1("builder",(detail=>({dom:detail.dom,domModification:{...detail.domModification,attributes:{role:getItemRole(detail),...detail.domModification.attributes,"aria-haspopup":detail.hasSubmenu,...detail.hasSubmenu?{"aria-expanded":!1}:{}}},behaviours:SketchBehaviours_augment(detail.itemBehaviours,[detail.toggling.fold(Toggling.revoke,(tConfig=>Toggling.config(getTogglingSpec(tConfig)))),Focusing.config({ignore:detail.ignoreFocus,stopMousedown:detail.ignoreFocus,onFocus:component=>{onFocus$1(component)}}),Keying.config({mode:"execution"}),Representing.config({store:{mode:"memory",initialValue:detail.data}}),config("item-type-events",[...pointerEvents(),run$1(mouseover(),onHover),run$1(focusItem(),Focusing.focus)])]),components:detail.components,eventOrder:detail.eventOrder}))),defaulted("eventOrder",{})],schema$o=[required$1("dom"),required$1("components"),output$1("builder",(detail=>({dom:detail.dom,components:detail.components,events:derive$2([stopper(focusItem())])})))],owner$2=constant$1("item-widget"),parts$h=constant$1([required({name:"widget",overrides:detail=>({behaviours:derive$1([Representing.config({store:{mode:"manual",getValue:_component=>detail.data,setValue:noop}})])})})]),schema$n=[required$1("uid"),required$1("data"),required$1("components"),required$1("dom"),defaulted("autofocus",!1),defaulted("ignoreFocus",!1),SketchBehaviours_field("widgetBehaviours",[Representing,Focusing,Keying]),defaulted("domModification",{}),defaultUidsSchema(parts$h()),output$1("builder",(detail=>{const subs=substitutes(owner$2(),detail,parts$h()),components=components$1(owner$2(),detail,subs.internals()),focusWidget=component=>getPart(component,detail,"widget").map((widget=>(Keying.focusIn(widget),widget))),onHorizontalArrow=(component,simulatedEvent)=>inside(simulatedEvent.event.target)?Optional.none():detail.autofocus?(simulatedEvent.setSource(component.element),Optional.none()):Optional.none();return{dom:detail.dom,components:components,domModification:detail.domModification,events:derive$2([runOnExecute$1(((component,simulatedEvent)=>{focusWidget(component).each((_widget=>{simulatedEvent.stop()}))})),run$1(mouseover(),onHover),run$1(focusItem(),((component,_simulatedEvent)=>{detail.autofocus?focusWidget(component):Focusing.focus(component)}))]),behaviours:SketchBehaviours_augment(detail.widgetBehaviours,[Representing.config({store:{mode:"memory",initialValue:detail.data}}),Focusing.config({ignore:detail.ignoreFocus,onFocus:component=>{onFocus$1(component)}}),Keying.config({mode:"special",focusIn:detail.autofocus?component=>{focusWidget(component)}:revoke(),onLeft:onHorizontalArrow,onRight:onHorizontalArrow,onEscape:(component,simulatedEvent)=>Focusing.isFocused(component)||detail.autofocus?detail.autofocus?(simulatedEvent.setSource(component.element),Optional.none()):Optional.none():(Focusing.focus(component),Optional.some(!0))})])}}))],itemSchema$2=choose$1("type",{widget:schema$n,item:schema$p,separator:schema$o}),parts$g=constant$1([group({factory:{sketch:spec=>{const itemInfo=asRawOrDie$1("menu.spec item",itemSchema$2,spec);return itemInfo.builder(itemInfo)}},name:"items",unit:"item",defaults:(detail,u)=>has$2(u,"uid")?u:{...u,uid:generate$5("item")},overrides:(detail,u)=>({type:u.type,ignoreFocus:detail.fakeFocus,domModification:{classes:[detail.markers.item]}})})]),schema$m=constant$1([required$1("value"),required$1("items"),required$1("dom"),required$1("components"),defaulted("eventOrder",{}),field("menuBehaviours",[Highlighting,Representing,Composing,Keying]),defaultedOf("movement",{mode:"menu",moveOnTab:!0},choose$1("mode",{grid:[initSize(),output$1("config",((detail,movementInfo)=>({mode:"flatgrid",selector:"."+detail.markers.item,initSize:{numColumns:movementInfo.initSize.numColumns,numRows:movementInfo.initSize.numRows},focusManager:detail.focusManager})))],matrix:[output$1("config",((detail,movementInfo)=>({mode:"matrix",selectors:{row:movementInfo.rowSelector,cell:"."+detail.markers.item},previousSelector:movementInfo.previousSelector,focusManager:detail.focusManager}))),required$1("rowSelector"),defaulted("previousSelector",Optional.none)],menu:[defaulted("moveOnTab",!0),output$1("config",((detail,movementInfo)=>({mode:"menu",selector:"."+detail.markers.item,moveOnTab:movementInfo.moveOnTab,focusManager:detail.focusManager})))]})),requiredOf("markers",itemSchema$3()),defaulted("fakeFocus",!1),defaulted("focusManager",dom$2()),onHandler("onHighlight"),onHandler("onDehighlight")]),focus=constant$1("alloy.menu-focus"),Menu=composite({name:"Menu",configFields:schema$m(),partFields:parts$g(),factory:(detail,components,_spec,_externals)=>({uid:detail.uid,dom:detail.dom,markers:detail.markers,behaviours:augment(detail.menuBehaviours,[Highlighting.config({highlightClass:detail.markers.selectedItem,itemClass:detail.markers.item,onHighlight:detail.onHighlight,onDehighlight:detail.onDehighlight}),Representing.config({store:{mode:"memory",initialValue:detail.value}}),Composing.config({find:Optional.some}),Keying.config(detail.movement.config(detail,detail.movement))]),events:derive$2([run$1(focus$1(),((menu,simulatedEvent)=>{const event=simulatedEvent.event;menu.getSystem().getByDom(event.target).each((item=>{Highlighting.highlight(menu,item),simulatedEvent.stop(),emitWith(menu,focus(),{menu:menu,item:item})}))})),run$1(hover(),((menu,simulatedEvent)=>{const item=simulatedEvent.event.item;Highlighting.highlight(menu,item)})),run$1(toggled(),((menu,simulatedEvent)=>{const{item:item,state:state}=simulatedEvent.event;state&&"menuitemradio"===get$f(item.element,"role")&&((menu,item)=>{const checkedRadioItems=descendants(menu.element,'[role="menuitemradio"][aria-checked="true"]');each$1(checkedRadioItems,(ele=>{eq(ele,item.element)||menu.getSystem().getByDom(ele).each((c=>{Toggling.off(c)}))}))})(menu,item)}))]),components:components,eventOrder:detail.eventOrder,domModification:{attributes:{role:"menu"}}})}),trace=(items,byItem,byMenu,finish)=>get$g(byMenu,finish).bind((triggerItem=>get$g(items,triggerItem).bind((triggerMenu=>{const rest=trace(items,byItem,byMenu,triggerMenu);return Optional.some([triggerMenu].concat(rest))})))).getOr([]),generate$2=(menus,expansions)=>{const items={};each(menus,((menuItems,menu)=>{each$1(menuItems,(item=>{items[item]=menu}))}));const byItem=expansions,byMenu=tupleMap(expansions,((v,k)=>({k:v,v:k})));const menuPaths=map$1(byMenu,((_triggerItem,submenu)=>[submenu].concat(trace(items,byItem,byMenu,submenu))));return map$1(items,(menu=>get$g(menuPaths,menu).getOr([menu])))},extractPreparedMenu=prep=>"prepared"===prep.type?Optional.some(prep.menu):Optional.none(),LayeredState={init:()=>{const expansions=Cell({}),menus=Cell({}),paths=Cell({}),primary=value$2(),directory=Cell({}),getTriggerData=(menuValue,getItemByValue,path)=>getPreparedMenu(menuValue).bind((menu=>(menuValue=>find$4(expansions.get(),((v,_k)=>v===menuValue)))(menuValue).bind((triggeringItemValue=>getItemByValue(triggeringItemValue).map((triggeredItem=>({triggeredMenu:menu,triggeringItem:triggeredItem,triggeringPath:path}))))))),getPreparedMenu=menuValue=>lookupMenu(menuValue).bind(extractPreparedMenu),lookupMenu=menuValue=>get$g(menus.get(),menuValue),lookupItem=itemValue=>get$g(expansions.get(),itemValue);return{setMenuBuilt:(menuName,built)=>{menus.set({...menus.get(),[menuName]:{type:"prepared",menu:built}})},setContents:(sPrimary,sMenus,sExpansions,dir)=>{primary.set(sPrimary),expansions.set(sExpansions),menus.set(sMenus),directory.set(dir);const sPaths=generate$2(dir,sExpansions);paths.set(sPaths)},expand:itemValue=>get$g(expansions.get(),itemValue).map((menu=>{const current=get$g(paths.get(),itemValue).getOr([]);return[menu].concat(current)})),refresh:itemValue=>get$g(paths.get(),itemValue),collapse:itemValue=>get$g(paths.get(),itemValue).bind((path=>path.length>1?Optional.some(path.slice(1)):Optional.none())),lookupMenu:lookupMenu,lookupItem:lookupItem,otherMenus:path=>{const menuValues=directory.get();return difference(keys(menuValues),path)},getPrimary:()=>primary.get().bind(getPreparedMenu),getMenus:()=>menus.get(),clear:()=>{expansions.set({}),menus.set({}),paths.set({}),primary.clear()},isClear:()=>primary.get().isNone(),getTriggeringPath:(itemValue,getItemByValue)=>{const extraPath=filter$2(lookupItem(itemValue).toArray(),(menuValue=>getPreparedMenu(menuValue).isSome()));return get$g(paths.get(),itemValue).bind((path=>{const revPath=reverse(extraPath.concat(path));return(arr=>{const r=[];for(let i=0;i<arr.length;i++){const x=arr[i];if(!x.isSome())return Optional.none();r.push(x.getOrDie())}return Optional.some(r)})(bind$3(revPath,((menuValue,menuIndex)=>getTriggerData(menuValue,getItemByValue,revPath.slice(0,menuIndex+1)).fold((()=>is$1(primary.get(),menuValue)?[]:[Optional.none()]),(data=>[Optional.some(data)])))))}))}}},extractPreparedMenu:extractPreparedMenu},onMenuItemHighlightedEvent=generate$6("tiered-menu-item-highlight"),onMenuItemDehighlightedEvent=generate$6("tiered-menu-item-dehighlight");var HighlightOnOpen;!function(HighlightOnOpen){HighlightOnOpen[HighlightOnOpen.HighlightMenuAndItem=0]="HighlightMenuAndItem",HighlightOnOpen[HighlightOnOpen.HighlightJustMenu=1]="HighlightJustMenu",HighlightOnOpen[HighlightOnOpen.HighlightNone=2]="HighlightNone"}(HighlightOnOpen||(HighlightOnOpen={}));const collapseItem$1=constant$1("collapse-item"),tieredMenu=single({name:"TieredMenu",configFields:[onStrictKeyboardHandler("onExecute"),onStrictKeyboardHandler("onEscape"),onStrictHandler("onOpenMenu"),onStrictHandler("onOpenSubmenu"),onHandler("onRepositionMenu"),onHandler("onCollapseMenu"),defaulted("highlightOnOpen",HighlightOnOpen.HighlightMenuAndItem),requiredObjOf("data",[required$1("primary"),required$1("menus"),required$1("expansions")]),defaulted("fakeFocus",!1),onHandler("onHighlightItem"),onHandler("onDehighlightItem"),onHandler("onHover"),tieredMenuMarkers(),required$1("dom"),defaulted("navigateOnHover",!0),defaulted("stayInDom",!1),field("tmenuBehaviours",[Keying,Highlighting,Composing,Replacing]),defaulted("eventOrder",{})],apis:{collapseMenu:(apis,tmenu)=>{apis.collapseMenu(tmenu)},highlightPrimary:(apis,tmenu)=>{apis.highlightPrimary(tmenu)},repositionMenus:(apis,tmenu)=>{apis.repositionMenus(tmenu)}},factory:(detail,_rawUiSpec)=>{const submenuParentItems=value$2(),layeredState=LayeredState.init(),setup=container=>{const componentMap=((container,primaryName,menus)=>map$1(menus,((spec,name)=>{const makeSketch=()=>Menu.sketch({...spec,value:name,markers:detail.markers,fakeFocus:detail.fakeFocus,onHighlight:(menuComp,itemComp)=>{emitWith(menuComp,onMenuItemHighlightedEvent,{menuComp:menuComp,itemComp:itemComp})},onDehighlight:(menuComp,itemComp)=>{emitWith(menuComp,onMenuItemDehighlightedEvent,{menuComp:menuComp,itemComp:itemComp})},focusManager:detail.fakeFocus?highlights():dom$2()});return name===primaryName?{type:"prepared",menu:container.getSystem().build(makeSketch())}:{type:"notbuilt",nbMenu:makeSketch}})))(container,detail.data.primary,detail.data.menus),directory=toDirectory();return layeredState.setContents(detail.data.primary,componentMap,detail.data.expansions,directory),layeredState.getPrimary()},getItemValue=item=>Representing.getValue(item).value,toDirectory=_container=>map$1(detail.data.menus,((data,_menuName)=>bind$3(data.items,(item=>"separator"===item.type?[]:[item.data.value])))),setActiveMenu=Highlighting.highlight,setActiveMenuAndItem=(container,menu)=>{setActiveMenu(container,menu),Highlighting.getHighlighted(menu).orThunk((()=>Highlighting.getFirst(menu))).each((item=>{detail.fakeFocus?Highlighting.highlight(menu,item):dispatch(container,item.element,focusItem())}))},getMenus=(state,menuValues)=>cat(map$2(menuValues,(mv=>state.lookupMenu(mv).bind((prep=>"prepared"===prep.type?Optional.some(prep.menu):Optional.none()))))),closeOthers=(container,state,path)=>{const others=getMenus(state,state.otherMenus(path));each$1(others,(o=>{remove$1(o.element,[detail.markers.backgroundMenu]),detail.stayInDom||Replacing.remove(container,o)}))},updateAriaExpansions=(container,path)=>{const parentItems=(container=>submenuParentItems.get().getOrThunk((()=>{const r={},items=descendants(container.element,`.${detail.markers.item}`),parentItems=filter$2(items,(i=>"true"===get$f(i,"aria-haspopup")));return each$1(parentItems,(i=>{container.getSystem().getByDom(i).each((itemComp=>{const key=getItemValue(itemComp);r[key]=itemComp}))})),submenuParentItems.set(r),r})))(container);each(parentItems,((v,k)=>{const expanded=contains$2(path,k);set$9(v.element,"aria-expanded",expanded)}))},updateMenuPath=(container,state,path)=>Optional.from(path[0]).bind((latestMenuName=>state.lookupMenu(latestMenuName).bind((menuPrep=>{if("notbuilt"===menuPrep.type)return Optional.none();{const activeMenu=menuPrep.menu,rest=getMenus(state,path.slice(1));return each$1(rest,(r=>{add$2(r.element,detail.markers.backgroundMenu)})),inBody(activeMenu.element)||Replacing.append(container,premade(activeMenu)),remove$1(activeMenu.element,[detail.markers.backgroundMenu]),setActiveMenuAndItem(container,activeMenu),closeOthers(container,state,path),Optional.some(activeMenu)}}))));let ExpandHighlightDecision;!function(ExpandHighlightDecision){ExpandHighlightDecision[ExpandHighlightDecision.HighlightSubmenu=0]="HighlightSubmenu",ExpandHighlightDecision[ExpandHighlightDecision.HighlightParent=1]="HighlightParent"}(ExpandHighlightDecision||(ExpandHighlightDecision={}));const expandRight=(container,item,decision=ExpandHighlightDecision.HighlightSubmenu)=>{if(item.hasConfigured(Disabling)&&Disabling.isDisabled(item))return Optional.some(item);{const value=getItemValue(item);return layeredState.expand(value).bind((path=>(updateAriaExpansions(container,path),Optional.from(path[0]).bind((menuName=>layeredState.lookupMenu(menuName).bind((activeMenuPrep=>{const activeMenu=((container,menuName,menuPrep)=>{if("notbuilt"===menuPrep.type){const menu=container.getSystem().build(menuPrep.nbMenu());return layeredState.setMenuBuilt(menuName,menu),menu}return menuPrep.menu})(container,menuName,activeMenuPrep);return inBody(activeMenu.element)||Replacing.append(container,premade(activeMenu)),detail.onOpenSubmenu(container,item,activeMenu,reverse(path)),decision===ExpandHighlightDecision.HighlightSubmenu?(Highlighting.highlightFirst(activeMenu),updateMenuPath(container,layeredState,path)):(Highlighting.dehighlightAll(activeMenu),Optional.some(item))})))))))}},collapseLeft=(container,item)=>{const value=getItemValue(item);return layeredState.collapse(value).bind((path=>(updateAriaExpansions(container,path),updateMenuPath(container,layeredState,path).map((activeMenu=>(detail.onCollapseMenu(container,item,activeMenu),activeMenu))))))},keyOnItem=f=>(container,simulatedEvent)=>closest$1(simulatedEvent.getSource(),`.${detail.markers.item}`).bind((target=>container.getSystem().getByDom(target).toOptional().bind((item=>f(container,item).map(always))))),events=derive$2([run$1(focus(),((tmenu,simulatedEvent)=>{const item=simulatedEvent.event.item;layeredState.lookupItem(getItemValue(item)).each((()=>{const menu=simulatedEvent.event.menu;Highlighting.highlight(tmenu,menu);const value=getItemValue(simulatedEvent.event.item);layeredState.refresh(value).each((path=>closeOthers(tmenu,layeredState,path)))}))})),runOnExecute$1(((component,simulatedEvent)=>{const target=simulatedEvent.event.target;component.getSystem().getByDom(target).each((item=>{0===getItemValue(item).indexOf("collapse-item")&&collapseLeft(component,item),expandRight(component,item,ExpandHighlightDecision.HighlightSubmenu).fold((()=>{detail.onExecute(component,item)}),noop)}))})),runOnAttached(((container,_simulatedEvent)=>{setup(container).each((primary=>{Replacing.append(container,premade(primary)),detail.onOpenMenu(container,primary),detail.highlightOnOpen===HighlightOnOpen.HighlightMenuAndItem?setActiveMenuAndItem(container,primary):detail.highlightOnOpen===HighlightOnOpen.HighlightJustMenu&&setActiveMenu(container,primary)}))})),run$1(onMenuItemHighlightedEvent,((tmenuComp,se)=>{detail.onHighlightItem(tmenuComp,se.event.menuComp,se.event.itemComp)})),run$1(onMenuItemDehighlightedEvent,((tmenuComp,se)=>{detail.onDehighlightItem(tmenuComp,se.event.menuComp,se.event.itemComp)})),...detail.navigateOnHover?[run$1(hover(),((tmenu,simulatedEvent)=>{const item=simulatedEvent.event.item;((container,item)=>{const value=getItemValue(item);layeredState.refresh(value).bind((path=>(updateAriaExpansions(container,path),updateMenuPath(container,layeredState,path))))})(tmenu,item),expandRight(tmenu,item,ExpandHighlightDecision.HighlightParent),detail.onHover(tmenu,item)}))]:[]]),getActiveItem=container=>Highlighting.getHighlighted(container).bind(Highlighting.getHighlighted),apis={collapseMenu:container=>{getActiveItem(container).each((currentItem=>{collapseLeft(container,currentItem)}))},highlightPrimary:container=>{layeredState.getPrimary().each((primary=>{setActiveMenuAndItem(container,primary)}))},repositionMenus:container=>{const maybeActivePrimary=layeredState.getPrimary().bind((primary=>getActiveItem(container).bind((currentItem=>{const itemValue=getItemValue(currentItem),allMenus=values(layeredState.getMenus()),preparedMenus=cat(map$2(allMenus,LayeredState.extractPreparedMenu));return layeredState.getTriggeringPath(itemValue,(v=>((_container,menus,itemValue)=>findMap(menus,(menu=>{if(!menu.getSystem().isConnected())return Optional.none();const candidates=Highlighting.getCandidates(menu);return find$5(candidates,(c=>getItemValue(c)===itemValue))})))(0,preparedMenus,v)))})).map((triggeringPath=>({primary:primary,triggeringPath:triggeringPath})))));maybeActivePrimary.fold((()=>{(container=>Optional.from(container.components()[0]).filter((comp=>"menu"===get$f(comp.element,"role"))))(container).each((primaryMenu=>{detail.onRepositionMenu(container,primaryMenu,[])}))}),(({primary:primary,triggeringPath:triggeringPath})=>{detail.onRepositionMenu(container,primary,triggeringPath)}))}};return{uid:detail.uid,dom:detail.dom,markers:detail.markers,behaviours:augment(detail.tmenuBehaviours,[Keying.config({mode:"special",onRight:keyOnItem(((container,item)=>inside(item.element)?Optional.none():expandRight(container,item,ExpandHighlightDecision.HighlightSubmenu))),onLeft:keyOnItem(((container,item)=>inside(item.element)?Optional.none():collapseLeft(container,item))),onEscape:keyOnItem(((container,item)=>collapseLeft(container,item).orThunk((()=>detail.onEscape(container,item).map((()=>container)))))),focusIn:(container,_keyInfo)=>{layeredState.getPrimary().each((primary=>{dispatch(container,primary.element,focusItem())}))}}),Highlighting.config({highlightClass:detail.markers.selectedMenu,itemClass:detail.markers.menu}),Composing.config({find:container=>Highlighting.getHighlighted(container)}),Replacing.config({})]),eventOrder:detail.eventOrder,apis:apis,events:events}},extraApis:{tieredData:(primary,menus,expansions)=>({primary:primary,menus:menus,expansions:expansions}),singleData:(name,menu)=>({primary:name,menus:wrap$1(name,menu),expansions:{}}),collapseItem:text=>({value:generate$6(collapseItem$1()),meta:{text:text}})}}),InlineView=single({name:"InlineView",configFields:[required$1("lazySink"),onHandler("onShow"),onHandler("onHide"),optionFunction("onEscape"),field("inlineBehaviours",[Sandboxing,Representing,Receiving]),optionObjOf("fireDismissalEventInstead",[defaulted("event",dismissRequested())]),optionObjOf("fireRepositionEventInstead",[defaulted("event",repositionRequested())]),defaulted("getRelated",Optional.none),defaulted("isExtraPart",never),defaulted("eventOrder",Optional.none)],factory:(detail,spec)=>{const showWithinBounds=(sandbox,thing,placementSpec,getBounds)=>{const sink=detail.lazySink(sandbox).getOrDie();Sandboxing.openWhileCloaked(sandbox,thing,(()=>Positioning.positionWithinBounds(sink,sandbox,placementSpec,getBounds()))),Representing.setValue(sandbox,Optional.some({mode:"position",config:placementSpec,getBounds:getBounds}))},showMenuWithinBounds=(sandbox,placementSpec,menuSpec,getBounds)=>{const menu=((detail,menuSandbox,placementSpec,menuSpec,getBounds)=>{const lazySink=()=>detail.lazySink(menuSandbox),layouts="horizontal"===menuSpec.type?{layouts:{onLtr:()=>belowOrAbove(),onRtl:()=>belowOrAboveRtl()}}:{},getSubmenuLayouts=triggeringPaths=>(triggeringPaths=>2===triggeringPaths.length)(triggeringPaths)?layouts:{};return tieredMenu.sketch({dom:{tag:"div"},data:menuSpec.data,markers:menuSpec.menu.markers,highlightOnOpen:menuSpec.menu.highlightOnOpen,fakeFocus:menuSpec.menu.fakeFocus,onEscape:()=>(Sandboxing.close(menuSandbox),detail.onEscape.map((handler=>handler(menuSandbox))),Optional.some(!0)),onExecute:()=>Optional.some(!0),onOpenMenu:(tmenu,menu)=>{Positioning.positionWithinBounds(lazySink().getOrDie(),menu,placementSpec,getBounds())},onOpenSubmenu:(tmenu,item,submenu,triggeringPaths)=>{const sink=lazySink().getOrDie();Positioning.position(sink,submenu,{anchor:{type:"submenu",item:item,...getSubmenuLayouts(triggeringPaths)}})},onRepositionMenu:(tmenu,primaryMenu,submenuTriggers)=>{const sink=lazySink().getOrDie();Positioning.positionWithinBounds(sink,primaryMenu,placementSpec,getBounds()),each$1(submenuTriggers,(st=>{const submenuLayouts=getSubmenuLayouts(st.triggeringPath);Positioning.position(sink,st.triggeredMenu,{anchor:{type:"submenu",item:st.triggeringItem,...submenuLayouts}})}))}})})(detail,sandbox,placementSpec,menuSpec,getBounds);Sandboxing.open(sandbox,menu),Representing.setValue(sandbox,Optional.some({mode:"menu",menu:menu}))},reposition=sandbox=>{Sandboxing.isOpen(sandbox)&&Representing.getValue(sandbox).each((state=>{switch(state.mode){case"menu":Sandboxing.getState(sandbox).each(tieredMenu.repositionMenus);break;case"position":const sink=detail.lazySink(sandbox).getOrDie();Positioning.positionWithinBounds(sink,sandbox,state.config,state.getBounds())}}))},apis={setContent:(sandbox,thing)=>{Sandboxing.setContent(sandbox,thing)},showAt:(sandbox,thing,placementSpec)=>{const getBounds=Optional.none;showWithinBounds(sandbox,thing,placementSpec,getBounds)},showWithinBounds:showWithinBounds,showMenuAt:(sandbox,placementSpec,menuSpec)=>{showMenuWithinBounds(sandbox,placementSpec,menuSpec,Optional.none)},showMenuWithinBounds:showMenuWithinBounds,hide:sandbox=>{Sandboxing.isOpen(sandbox)&&(Representing.setValue(sandbox,Optional.none()),Sandboxing.close(sandbox))},getContent:sandbox=>Sandboxing.getState(sandbox),reposition:reposition,isOpen:Sandboxing.isOpen};return{uid:detail.uid,dom:detail.dom,behaviours:augment(detail.inlineBehaviours,[Sandboxing.config({isPartOf:(sandbox,data,queryElem)=>isPartOf$1(data,queryElem)||((sandbox,queryElem)=>detail.getRelated(sandbox).exists((rel=>isPartOf$1(rel,queryElem))))(sandbox,queryElem),getAttachPoint:sandbox=>detail.lazySink(sandbox).getOrDie(),onOpen:sandbox=>{detail.onShow(sandbox)},onClose:sandbox=>{detail.onHide(sandbox)}}),Representing.config({store:{mode:"memory",initialValue:Optional.none()}}),Receiving.config({channels:{...receivingChannel$1({isExtraPart:spec.isExtraPart,...detail.fireDismissalEventInstead.map((fe=>({fireEventInstead:{event:fe.event}}))).getOr({})}),...receivingChannel({...detail.fireRepositionEventInstead.map((fe=>({fireEventInstead:{event:fe.event}}))).getOr({}),doReposition:reposition})}})]),eventOrder:detail.eventOrder,apis:apis}},apis:{showAt:(apis,component,anchor,thing)=>{apis.showAt(component,anchor,thing)},showWithinBounds:(apis,component,anchor,thing,bounds)=>{apis.showWithinBounds(component,anchor,thing,bounds)},showMenuAt:(apis,component,anchor,menuSpec)=>{apis.showMenuAt(component,anchor,menuSpec)},showMenuWithinBounds:(apis,component,anchor,menuSpec,bounds)=>{apis.showMenuWithinBounds(component,anchor,menuSpec,bounds)},hide:(apis,component)=>{apis.hide(component)},isOpen:(apis,component)=>apis.isOpen(component),getContent:(apis,component)=>apis.getContent(component),setContent:(apis,component,thing)=>{apis.setContent(component,thing)},reposition:(apis,component)=>{apis.reposition(component)}}});var global$9=tinymce.util.Tools.resolve("tinymce.util.Delay");const Button=single({name:"Button",factory:detail=>{const events=events$a(detail.action),tag=detail.dom.tag,lookupAttr=attr=>get$g(detail.dom,"attributes").bind((attrs=>get$g(attrs,attr)));return{uid:detail.uid,dom:detail.dom,components:detail.components,events:events,behaviours:SketchBehaviours_augment(detail.buttonBehaviours,[Focusing.config({}),Keying.config({mode:"execution",useSpace:!0,useEnter:!0})]),domModification:{attributes:(()=>{if("button"===tag){return{type:lookupAttr("type").getOr("button"),...lookupAttr("role").map((role=>({role:role}))).getOr({})}}return{role:detail.role.getOr(lookupAttr("role").getOr("button"))}})()},eventOrder:detail.eventOrder}},configFields:[defaulted("uid",void 0),required$1("dom"),defaulted("components",[]),SketchBehaviours_field("buttonBehaviours",[Focusing,Keying]),option$3("action"),option$3("role"),defaulted("eventOrder",{})]}),fromHtml=html=>{const elem=SugarElement.fromHtml(html),children$1=children(elem),attrs=(elem=>{const attributes=void 0!==elem.dom.attributes?elem.dom.attributes:[];return foldl(attributes,((b,attr)=>"class"===attr.name?b:{...b,[attr.name]:attr.value}),{})})(elem),classes=(elem=>Array.prototype.slice.call(elem.dom.classList,0))(elem),contents=0===children$1.length?{}:{innerHtml:get$9(elem)};return{tag:name$3(elem),classes:classes,attributes:attrs,...contents}},record=spec=>{const uid=(spec=>void 0!==spec.uid)(spec)&&hasNonNullableKey(spec,"uid")?spec.uid:generate$5("memento");return{get:anyInSystem=>anyInSystem.getSystem().getByUid(uid).getOrDie(),getOpt:anyInSystem=>anyInSystem.getSystem().getByUid(uid).toOptional(),asSpec:()=>({...spec,uid:uid})}},{entries:entries,setPrototypeOf:setPrototypeOf,isFrozen:isFrozen,getPrototypeOf:getPrototypeOf,getOwnPropertyDescriptor:getOwnPropertyDescriptor}=Object;let{freeze:freeze,seal:seal,create:create$1}=Object,{apply:apply,construct:construct}="undefined"!=typeof Reflect&&Reflect;apply||(apply=function(fun,thisValue,args){return fun.apply(thisValue,args)}),freeze||(freeze=function(x){return x}),seal||(seal=function(x){return x}),construct||(construct=function(Func,args){return new Func(...args)});const arrayForEach=unapply(Array.prototype.forEach),arrayPop=unapply(Array.prototype.pop),arrayPush=unapply(Array.prototype.push),stringToLowerCase=unapply(String.prototype.toLowerCase),stringToString=unapply(String.prototype.toString),stringMatch=unapply(String.prototype.match),stringReplace=unapply(String.prototype.replace),stringIndexOf=unapply(String.prototype.indexOf),stringTrim=unapply(String.prototype.trim),regExpTest=unapply(RegExp.prototype.test),typeErrorCreate=(func=TypeError,function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return construct(func,args)});var func;function unapply(func){return function(thisArg){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];return apply(func,thisArg,args)}}function addToSet(set,array,transformCaseFunc){var _transformCaseFunc;transformCaseFunc=null!==(_transformCaseFunc=transformCaseFunc)&&void 0!==_transformCaseFunc?_transformCaseFunc:stringToLowerCase,setPrototypeOf&&setPrototypeOf(set,null);let l=array.length;for(;l--;){let element=array[l];if("string"==typeof element){const lcElement=transformCaseFunc(element);lcElement!==element&&(isFrozen(array)||(array[l]=lcElement),element=lcElement)}set[element]=!0}return set}function clone(object){const newObject=create$1(null);for(const[property,value]of entries(object))newObject[property]=value;return newObject}function lookupGetter(object,prop){for(;null!==object;){const desc=getOwnPropertyDescriptor(object,prop);if(desc){if(desc.get)return unapply(desc.get);if("function"==typeof desc.value)return unapply(desc.value)}object=getPrototypeOf(object)}return function(element){return console.warn("fallback value for",element),null}}const html$1=freeze(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),svg$1=freeze(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),svgFilters=freeze(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),svgDisallowed=freeze(["animate","color-profile","cursor","discard","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),mathMl$1=freeze(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","mprescripts"]),mathMlDisallowed=freeze(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),text$1=freeze(["#text"]),html=freeze(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),svg=freeze(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),mathMl=freeze(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),xml=freeze(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),MUSTACHE_EXPR=seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm),ERB_EXPR=seal(/<%[\w\W]*|[\w\W]*%>/gm),TMPLIT_EXPR=seal(/\${[\w\W]*}/gm),DATA_ATTR=seal(/^data-[\-\w.\u00B7-\uFFFF]/),ARIA_ATTR=seal(/^aria-[\-\w]+$/),IS_ALLOWED_URI=seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),IS_SCRIPT_OR_DATA=seal(/^(?:\w+script|data):/i),ATTR_WHITESPACE=seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),DOCTYPE_NAME=seal(/^html$/i);var EXPRESSIONS=Object.freeze({__proto__:null,MUSTACHE_EXPR:MUSTACHE_EXPR,ERB_EXPR:ERB_EXPR,TMPLIT_EXPR:TMPLIT_EXPR,DATA_ATTR:DATA_ATTR,ARIA_ATTR:ARIA_ATTR,IS_ALLOWED_URI:IS_ALLOWED_URI,IS_SCRIPT_OR_DATA:IS_SCRIPT_OR_DATA,ATTR_WHITESPACE:ATTR_WHITESPACE,DOCTYPE_NAME:DOCTYPE_NAME});const getGlobal=()=>"undefined"==typeof window?null:window;var purify=function createDOMPurify(){let window=arguments.length>0&&void 0!==arguments[0]?arguments[0]:getGlobal();const DOMPurify=root=>createDOMPurify(root);if(DOMPurify.version="3.0.5",DOMPurify.removed=[],!window||!window.document||9!==window.document.nodeType)return DOMPurify.isSupported=!1,DOMPurify;const originalDocument=window.document,currentScript=originalDocument.currentScript;let{document:document}=window;const{DocumentFragment:DocumentFragment,HTMLTemplateElement:HTMLTemplateElement,Node:Node,Element:Element,NodeFilter:NodeFilter,NamedNodeMap:NamedNodeMap=window.NamedNodeMap||window.MozNamedAttrMap,HTMLFormElement:HTMLFormElement,DOMParser:DOMParser,trustedTypes:trustedTypes}=window,ElementPrototype=Element.prototype,cloneNode=lookupGetter(ElementPrototype,"cloneNode"),getNextSibling=lookupGetter(ElementPrototype,"nextSibling"),getChildNodes=lookupGetter(ElementPrototype,"childNodes"),getParentNode=lookupGetter(ElementPrototype,"parentNode");if("function"==typeof HTMLTemplateElement){const template=document.createElement("template");template.content&&template.content.ownerDocument&&(document=template.content.ownerDocument)}let trustedTypesPolicy,emptyHTML="";const{implementation:implementation,createNodeIterator:createNodeIterator,createDocumentFragment:createDocumentFragment,getElementsByTagName:getElementsByTagName}=document,{importNode:importNode}=originalDocument;let hooks={};DOMPurify.isSupported="function"==typeof entries&&"function"==typeof getParentNode&&implementation&&void 0!==implementation.createHTMLDocument;const{MUSTACHE_EXPR:MUSTACHE_EXPR,ERB_EXPR:ERB_EXPR,TMPLIT_EXPR:TMPLIT_EXPR,DATA_ATTR:DATA_ATTR,ARIA_ATTR:ARIA_ATTR,IS_SCRIPT_OR_DATA:IS_SCRIPT_OR_DATA,ATTR_WHITESPACE:ATTR_WHITESPACE}=EXPRESSIONS;let{IS_ALLOWED_URI:IS_ALLOWED_URI$1}=EXPRESSIONS,ALLOWED_TAGS=null;const DEFAULT_ALLOWED_TAGS=addToSet({},[...html$1,...svg$1,...svgFilters,...mathMl$1,...text$1]);let ALLOWED_ATTR=null;const DEFAULT_ALLOWED_ATTR=addToSet({},[...html,...svg,...mathMl,...xml]);let CUSTOM_ELEMENT_HANDLING=Object.seal(Object.create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),FORBID_TAGS=null,FORBID_ATTR=null,ALLOW_ARIA_ATTR=!0,ALLOW_DATA_ATTR=!0,ALLOW_UNKNOWN_PROTOCOLS=!1,ALLOW_SELF_CLOSE_IN_ATTR=!0,SAFE_FOR_TEMPLATES=!1,WHOLE_DOCUMENT=!1,SET_CONFIG=!1,FORCE_BODY=!1,RETURN_DOM=!1,RETURN_DOM_FRAGMENT=!1,RETURN_TRUSTED_TYPE=!1,SANITIZE_DOM=!0,SANITIZE_NAMED_PROPS=!1,KEEP_CONTENT=!0,IN_PLACE=!1,USE_PROFILES={},FORBID_CONTENTS=null;const DEFAULT_FORBID_CONTENTS=addToSet({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]);let DATA_URI_TAGS=null;const DEFAULT_DATA_URI_TAGS=addToSet({},["audio","video","img","source","image","track"]);let URI_SAFE_ATTRIBUTES=null;const DEFAULT_URI_SAFE_ATTRIBUTES=addToSet({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),MATHML_NAMESPACE="http://www.w3.org/1998/Math/MathML",SVG_NAMESPACE="http://www.w3.org/2000/svg",HTML_NAMESPACE="http://www.w3.org/1999/xhtml";let NAMESPACE=HTML_NAMESPACE,IS_EMPTY_INPUT=!1,ALLOWED_NAMESPACES=null;const DEFAULT_ALLOWED_NAMESPACES=addToSet({},[MATHML_NAMESPACE,SVG_NAMESPACE,HTML_NAMESPACE],stringToString);let PARSER_MEDIA_TYPE;const SUPPORTED_PARSER_MEDIA_TYPES=["application/xhtml+xml","text/html"];let transformCaseFunc,CONFIG=null;const formElement=document.createElement("form"),isRegexOrFunction=function(testValue){return testValue instanceof RegExp||testValue instanceof Function},_parseConfig=function(cfg){if(!CONFIG||CONFIG!==cfg){if(cfg&&"object"==typeof cfg||(cfg={}),cfg=clone(cfg),PARSER_MEDIA_TYPE=PARSER_MEDIA_TYPE=-1===SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE)?"text/html":cfg.PARSER_MEDIA_TYPE,transformCaseFunc="application/xhtml+xml"===PARSER_MEDIA_TYPE?stringToString:stringToLowerCase,ALLOWED_TAGS="ALLOWED_TAGS"in cfg?addToSet({},cfg.ALLOWED_TAGS,transformCaseFunc):DEFAULT_ALLOWED_TAGS,ALLOWED_ATTR="ALLOWED_ATTR"in cfg?addToSet({},cfg.ALLOWED_ATTR,transformCaseFunc):DEFAULT_ALLOWED_ATTR,ALLOWED_NAMESPACES="ALLOWED_NAMESPACES"in cfg?addToSet({},cfg.ALLOWED_NAMESPACES,stringToString):DEFAULT_ALLOWED_NAMESPACES,URI_SAFE_ATTRIBUTES="ADD_URI_SAFE_ATTR"in cfg?addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),cfg.ADD_URI_SAFE_ATTR,transformCaseFunc):DEFAULT_URI_SAFE_ATTRIBUTES,DATA_URI_TAGS="ADD_DATA_URI_TAGS"in cfg?addToSet(clone(DEFAULT_DATA_URI_TAGS),cfg.ADD_DATA_URI_TAGS,transformCaseFunc):DEFAULT_DATA_URI_TAGS,FORBID_CONTENTS="FORBID_CONTENTS"in cfg?addToSet({},cfg.FORBID_CONTENTS,transformCaseFunc):DEFAULT_FORBID_CONTENTS,FORBID_TAGS="FORBID_TAGS"in cfg?addToSet({},cfg.FORBID_TAGS,transformCaseFunc):{},FORBID_ATTR="FORBID_ATTR"in cfg?addToSet({},cfg.FORBID_ATTR,transformCaseFunc):{},USE_PROFILES="USE_PROFILES"in cfg&&cfg.USE_PROFILES,ALLOW_ARIA_ATTR=!1!==cfg.ALLOW_ARIA_ATTR,ALLOW_DATA_ATTR=!1!==cfg.ALLOW_DATA_ATTR,ALLOW_UNKNOWN_PROTOCOLS=cfg.ALLOW_UNKNOWN_PROTOCOLS||!1,ALLOW_SELF_CLOSE_IN_ATTR=!1!==cfg.ALLOW_SELF_CLOSE_IN_ATTR,SAFE_FOR_TEMPLATES=cfg.SAFE_FOR_TEMPLATES||!1,WHOLE_DOCUMENT=cfg.WHOLE_DOCUMENT||!1,RETURN_DOM=cfg.RETURN_DOM||!1,RETURN_DOM_FRAGMENT=cfg.RETURN_DOM_FRAGMENT||!1,RETURN_TRUSTED_TYPE=cfg.RETURN_TRUSTED_TYPE||!1,FORCE_BODY=cfg.FORCE_BODY||!1,SANITIZE_DOM=!1!==cfg.SANITIZE_DOM,SANITIZE_NAMED_PROPS=cfg.SANITIZE_NAMED_PROPS||!1,KEEP_CONTENT=!1!==cfg.KEEP_CONTENT,IN_PLACE=cfg.IN_PLACE||!1,IS_ALLOWED_URI$1=cfg.ALLOWED_URI_REGEXP||IS_ALLOWED_URI,NAMESPACE=cfg.NAMESPACE||HTML_NAMESPACE,CUSTOM_ELEMENT_HANDLING=cfg.CUSTOM_ELEMENT_HANDLING||{},cfg.CUSTOM_ELEMENT_HANDLING&&isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(CUSTOM_ELEMENT_HANDLING.tagNameCheck=cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck),cfg.CUSTOM_ELEMENT_HANDLING&&isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(CUSTOM_ELEMENT_HANDLING.attributeNameCheck=cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),cfg.CUSTOM_ELEMENT_HANDLING&&"boolean"==typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements=cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),SAFE_FOR_TEMPLATES&&(ALLOW_DATA_ATTR=!1),RETURN_DOM_FRAGMENT&&(RETURN_DOM=!0),USE_PROFILES&&(ALLOWED_TAGS=addToSet({},[...text$1]),ALLOWED_ATTR=[],!0===USE_PROFILES.html&&(addToSet(ALLOWED_TAGS,html$1),addToSet(ALLOWED_ATTR,html)),!0===USE_PROFILES.svg&&(addToSet(ALLOWED_TAGS,svg$1),addToSet(ALLOWED_ATTR,svg),addToSet(ALLOWED_ATTR,xml)),!0===USE_PROFILES.svgFilters&&(addToSet(ALLOWED_TAGS,svgFilters),addToSet(ALLOWED_ATTR,svg),addToSet(ALLOWED_ATTR,xml)),!0===USE_PROFILES.mathMl&&(addToSet(ALLOWED_TAGS,mathMl$1),addToSet(ALLOWED_ATTR,mathMl),addToSet(ALLOWED_ATTR,xml))),cfg.ADD_TAGS&&(ALLOWED_TAGS===DEFAULT_ALLOWED_TAGS&&(ALLOWED_TAGS=clone(ALLOWED_TAGS)),addToSet(ALLOWED_TAGS,cfg.ADD_TAGS,transformCaseFunc)),cfg.ADD_ATTR&&(ALLOWED_ATTR===DEFAULT_ALLOWED_ATTR&&(ALLOWED_ATTR=clone(ALLOWED_ATTR)),addToSet(ALLOWED_ATTR,cfg.ADD_ATTR,transformCaseFunc)),cfg.ADD_URI_SAFE_ATTR&&addToSet(URI_SAFE_ATTRIBUTES,cfg.ADD_URI_SAFE_ATTR,transformCaseFunc),cfg.FORBID_CONTENTS&&(FORBID_CONTENTS===DEFAULT_FORBID_CONTENTS&&(FORBID_CONTENTS=clone(FORBID_CONTENTS)),addToSet(FORBID_CONTENTS,cfg.FORBID_CONTENTS,transformCaseFunc)),KEEP_CONTENT&&(ALLOWED_TAGS["#text"]=!0),WHOLE_DOCUMENT&&addToSet(ALLOWED_TAGS,["html","head","body"]),ALLOWED_TAGS.table&&(addToSet(ALLOWED_TAGS,["tbody"]),delete FORBID_TAGS.tbody),cfg.TRUSTED_TYPES_POLICY){if("function"!=typeof cfg.TRUSTED_TYPES_POLICY.createHTML)throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');if("function"!=typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL)throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');trustedTypesPolicy=cfg.TRUSTED_TYPES_POLICY,emptyHTML=trustedTypesPolicy.createHTML("")}else void 0===trustedTypesPolicy&&(trustedTypesPolicy=function(trustedTypes,purifyHostElement){if("object"!=typeof trustedTypes||"function"!=typeof trustedTypes.createPolicy)return null;let suffix=null;purifyHostElement&&purifyHostElement.hasAttribute("data-tt-policy-suffix")&&(suffix=purifyHostElement.getAttribute("data-tt-policy-suffix"));const policyName="dompurify"+(suffix?"#"+suffix:"");try{return trustedTypes.createPolicy(policyName,{createHTML:html=>html,createScriptURL:scriptUrl=>scriptUrl})}catch(_){return console.warn("TrustedTypes policy "+policyName+" could not be created."),null}}(trustedTypes,currentScript)),null!==trustedTypesPolicy&&"string"==typeof emptyHTML&&(emptyHTML=trustedTypesPolicy.createHTML(""));freeze&&freeze(cfg),CONFIG=cfg}},MATHML_TEXT_INTEGRATION_POINTS=addToSet({},["mi","mo","mn","ms","mtext"]),HTML_INTEGRATION_POINTS=addToSet({},["foreignobject","desc","title","annotation-xml"]),COMMON_SVG_AND_HTML_ELEMENTS=addToSet({},["title","style","font","a","script"]),ALL_SVG_TAGS=addToSet({},svg$1);addToSet(ALL_SVG_TAGS,svgFilters),addToSet(ALL_SVG_TAGS,svgDisallowed);const ALL_MATHML_TAGS=addToSet({},mathMl$1);addToSet(ALL_MATHML_TAGS,mathMlDisallowed);const _forceRemove=function(node){arrayPush(DOMPurify.removed,{element:node});try{node.parentNode.removeChild(node)}catch(_){node.remove()}},_removeAttribute=function(name,node){try{arrayPush(DOMPurify.removed,{attribute:node.getAttributeNode(name),from:node})}catch(_){arrayPush(DOMPurify.removed,{attribute:null,from:node})}if(node.removeAttribute(name),"is"===name&&!ALLOWED_ATTR[name])if(RETURN_DOM||RETURN_DOM_FRAGMENT)try{_forceRemove(node)}catch(_){}else try{node.setAttribute(name,"")}catch(_){}},_initDocument=function(dirty){let doc,leadingWhitespace;if(FORCE_BODY)dirty="<remove></remove>"+dirty;else{const matches=stringMatch(dirty,/^[\r\n\t ]+/);leadingWhitespace=matches&&matches[0]}"application/xhtml+xml"===PARSER_MEDIA_TYPE&&NAMESPACE===HTML_NAMESPACE&&(dirty='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+dirty+"</body></html>");const dirtyPayload=trustedTypesPolicy?trustedTypesPolicy.createHTML(dirty):dirty;if(NAMESPACE===HTML_NAMESPACE)try{doc=(new DOMParser).parseFromString(dirtyPayload,PARSER_MEDIA_TYPE)}catch(_){}if(!doc||!doc.documentElement){doc=implementation.createDocument(NAMESPACE,"template",null);try{doc.documentElement.innerHTML=IS_EMPTY_INPUT?emptyHTML:dirtyPayload}catch(_){}}const body=doc.body||doc.documentElement;return dirty&&leadingWhitespace&&body.insertBefore(document.createTextNode(leadingWhitespace),body.childNodes[0]||null),NAMESPACE===HTML_NAMESPACE?getElementsByTagName.call(doc,WHOLE_DOCUMENT?"html":"body")[0]:WHOLE_DOCUMENT?doc.documentElement:body},_createIterator=function(root){return createNodeIterator.call(root.ownerDocument||root,root,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_COMMENT|NodeFilter.SHOW_TEXT,null,!1)},_isNode=function(object){return"object"==typeof Node?object instanceof Node:object&&"object"==typeof object&&"number"==typeof object.nodeType&&"string"==typeof object.nodeName},_executeHook=function(entryPoint,currentNode,data){hooks[entryPoint]&&arrayForEach(hooks[entryPoint],(hook=>{hook.call(DOMPurify,currentNode,data,CONFIG)}))},_sanitizeElements=function(currentNode){let content;if(_executeHook("beforeSanitizeElements",currentNode,null),(elm=currentNode)instanceof HTMLFormElement&&("string"!=typeof elm.nodeName||"string"!=typeof elm.textContent||"function"!=typeof elm.removeChild||!(elm.attributes instanceof NamedNodeMap)||"function"!=typeof elm.removeAttribute||"function"!=typeof elm.setAttribute||"string"!=typeof elm.namespaceURI||"function"!=typeof elm.insertBefore||"function"!=typeof elm.hasChildNodes))return _forceRemove(currentNode),!0;var elm;const tagName=transformCaseFunc(currentNode.nodeName);if(_executeHook("uponSanitizeElement",currentNode,{tagName:tagName,allowedTags:ALLOWED_TAGS}),currentNode.hasChildNodes()&&!_isNode(currentNode.firstElementChild)&&(!_isNode(currentNode.content)||!_isNode(currentNode.content.firstElementChild))&&regExpTest(/<[/\w]/g,currentNode.innerHTML)&&regExpTest(/<[/\w]/g,currentNode.textContent))return _forceRemove(currentNode),!0;if(!ALLOWED_TAGS[tagName]||FORBID_TAGS[tagName]){if(!FORBID_TAGS[tagName]&&_basicCustomElementTest(tagName)){if(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck,tagName))return!1;if(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName))return!1}if(KEEP_CONTENT&&!FORBID_CONTENTS[tagName]){const parentNode=getParentNode(currentNode)||currentNode.parentNode,childNodes=getChildNodes(currentNode)||currentNode.childNodes;if(childNodes&&parentNode){for(let i=childNodes.length-1;i>=0;--i)parentNode.insertBefore(cloneNode(childNodes[i],!0),getNextSibling(currentNode))}}return _forceRemove(currentNode),!0}return currentNode instanceof Element&&!function(element){let parent=getParentNode(element);parent&&parent.tagName||(parent={namespaceURI:NAMESPACE,tagName:"template"});const tagName=stringToLowerCase(element.tagName),parentTagName=stringToLowerCase(parent.tagName);return!!ALLOWED_NAMESPACES[element.namespaceURI]&&(element.namespaceURI===SVG_NAMESPACE?parent.namespaceURI===HTML_NAMESPACE?"svg"===tagName:parent.namespaceURI===MATHML_NAMESPACE?"svg"===tagName&&("annotation-xml"===parentTagName||MATHML_TEXT_INTEGRATION_POINTS[parentTagName]):Boolean(ALL_SVG_TAGS[tagName]):element.namespaceURI===MATHML_NAMESPACE?parent.namespaceURI===HTML_NAMESPACE?"math"===tagName:parent.namespaceURI===SVG_NAMESPACE?"math"===tagName&&HTML_INTEGRATION_POINTS[parentTagName]:Boolean(ALL_MATHML_TAGS[tagName]):element.namespaceURI===HTML_NAMESPACE?!(parent.namespaceURI===SVG_NAMESPACE&&!HTML_INTEGRATION_POINTS[parentTagName])&&!(parent.namespaceURI===MATHML_NAMESPACE&&!MATHML_TEXT_INTEGRATION_POINTS[parentTagName])&&!ALL_MATHML_TAGS[tagName]&&(COMMON_SVG_AND_HTML_ELEMENTS[tagName]||!ALL_SVG_TAGS[tagName]):!("application/xhtml+xml"!==PARSER_MEDIA_TYPE||!ALLOWED_NAMESPACES[element.namespaceURI]))}(currentNode)?(_forceRemove(currentNode),!0):"noscript"!==tagName&&"noembed"!==tagName&&"noframes"!==tagName||!regExpTest(/<\/no(script|embed|frames)/i,currentNode.innerHTML)?(SAFE_FOR_TEMPLATES&&3===currentNode.nodeType&&(content=currentNode.textContent,content=stringReplace(content,MUSTACHE_EXPR," "),content=stringReplace(content,ERB_EXPR," "),content=stringReplace(content,TMPLIT_EXPR," "),currentNode.textContent!==content&&(arrayPush(DOMPurify.removed,{element:currentNode.cloneNode()}),currentNode.textContent=content)),_executeHook("afterSanitizeElements",currentNode,null),!1):(_forceRemove(currentNode),!0)},_isValidAttribute=function(lcTag,lcName,value){if(SANITIZE_DOM&&("id"===lcName||"name"===lcName)&&(value in document||value in formElement))return!1;if(ALLOW_DATA_ATTR&&!FORBID_ATTR[lcName]&&regExpTest(DATA_ATTR,lcName));else if(ALLOW_ARIA_ATTR&&regExpTest(ARIA_ATTR,lcName));else if(!ALLOWED_ATTR[lcName]||FORBID_ATTR[lcName]){if(!(_basicCustomElementTest(lcTag)&&(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck,lcTag)||CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))&&(CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck,lcName)||CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName))||"is"===lcName&&CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck,value)||CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))return!1}else if(URI_SAFE_ATTRIBUTES[lcName]);else if(regExpTest(IS_ALLOWED_URI$1,stringReplace(value,ATTR_WHITESPACE,"")));else if("src"!==lcName&&"xlink:href"!==lcName&&"href"!==lcName||"script"===lcTag||0!==stringIndexOf(value,"data:")||!DATA_URI_TAGS[lcTag]){if(ALLOW_UNKNOWN_PROTOCOLS&&!regExpTest(IS_SCRIPT_OR_DATA,stringReplace(value,ATTR_WHITESPACE,"")));else if(value)return!1}else;return!0},_basicCustomElementTest=function(tagName){return tagName.indexOf("-")>0},_sanitizeAttributes=function(currentNode){let attr,value,lcName,l;_executeHook("beforeSanitizeAttributes",currentNode,null);const{attributes:attributes}=currentNode;if(!attributes)return;const hookEvent={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:ALLOWED_ATTR};for(l=attributes.length;l--;){attr=attributes[l];const{name:name,namespaceURI:namespaceURI}=attr;value="value"===name?attr.value:stringTrim(attr.value);const initValue=value;if(lcName=transformCaseFunc(name),hookEvent.attrName=lcName,hookEvent.attrValue=value,hookEvent.keepAttr=!0,hookEvent.forceKeepAttr=void 0,_executeHook("uponSanitizeAttribute",currentNode,hookEvent),value=hookEvent.attrValue,hookEvent.forceKeepAttr)continue;if(!hookEvent.keepAttr){_removeAttribute(name,currentNode);continue}if(!ALLOW_SELF_CLOSE_IN_ATTR&&regExpTest(/\/>/i,value)){_removeAttribute(name,currentNode);continue}SAFE_FOR_TEMPLATES&&(value=stringReplace(value,MUSTACHE_EXPR," "),value=stringReplace(value,ERB_EXPR," "),value=stringReplace(value,TMPLIT_EXPR," "));const lcTag=transformCaseFunc(currentNode.nodeName);if(_isValidAttribute(lcTag,lcName,value)){if(!SANITIZE_NAMED_PROPS||"id"!==lcName&&"name"!==lcName||(_removeAttribute(name,currentNode),value="user-content-"+value),trustedTypesPolicy&&"object"==typeof trustedTypes&&"function"==typeof trustedTypes.getAttributeType)if(namespaceURI);else switch(trustedTypes.getAttributeType(lcTag,lcName)){case"TrustedHTML":value=trustedTypesPolicy.createHTML(value);break;case"TrustedScriptURL":value=trustedTypesPolicy.createScriptURL(value)}if(value!==initValue)try{namespaceURI?currentNode.setAttributeNS(namespaceURI,name,value):currentNode.setAttribute(name,value)}catch(_){_removeAttribute(name,currentNode)}}else _removeAttribute(name,currentNode)}_executeHook("afterSanitizeAttributes",currentNode,null)},_sanitizeShadowDOM=function _sanitizeShadowDOM(fragment){let shadowNode;const shadowIterator=_createIterator(fragment);for(_executeHook("beforeSanitizeShadowDOM",fragment,null);shadowNode=shadowIterator.nextNode();)_executeHook("uponSanitizeShadowNode",shadowNode,null),_sanitizeElements(shadowNode)||(shadowNode.content instanceof DocumentFragment&&_sanitizeShadowDOM(shadowNode.content),_sanitizeAttributes(shadowNode));_executeHook("afterSanitizeShadowDOM",fragment,null)};return DOMPurify.sanitize=function(dirty){let body,importedNode,currentNode,returnNode,cfg=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(IS_EMPTY_INPUT=!dirty,IS_EMPTY_INPUT&&(dirty="\x3c!--\x3e"),"string"!=typeof dirty&&!_isNode(dirty)){if("function"!=typeof dirty.toString)throw typeErrorCreate("toString is not a function");if("string"!=typeof(dirty=dirty.toString()))throw typeErrorCreate("dirty is not a string, aborting")}if(!DOMPurify.isSupported)return dirty;if(SET_CONFIG||_parseConfig(cfg),DOMPurify.removed=[],"string"==typeof dirty&&(IN_PLACE=!1),IN_PLACE){if(dirty.nodeName){const tagName=transformCaseFunc(dirty.nodeName);if(!ALLOWED_TAGS[tagName]||FORBID_TAGS[tagName])throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place")}}else if(dirty instanceof Node)body=_initDocument("\x3c!----\x3e"),importedNode=body.ownerDocument.importNode(dirty,!0),1===importedNode.nodeType&&"BODY"===importedNode.nodeName||"HTML"===importedNode.nodeName?body=importedNode:body.appendChild(importedNode);else{if(!RETURN_DOM&&!SAFE_FOR_TEMPLATES&&!WHOLE_DOCUMENT&&-1===dirty.indexOf("<"))return trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(dirty):dirty;if(body=_initDocument(dirty),!body)return RETURN_DOM?null:RETURN_TRUSTED_TYPE?emptyHTML:""}body&&FORCE_BODY&&_forceRemove(body.firstChild);const nodeIterator=_createIterator(IN_PLACE?dirty:body);for(;currentNode=nodeIterator.nextNode();)_sanitizeElements(currentNode)||(currentNode.content instanceof DocumentFragment&&_sanitizeShadowDOM(currentNode.content),_sanitizeAttributes(currentNode));if(IN_PLACE)return dirty;if(RETURN_DOM){if(RETURN_DOM_FRAGMENT)for(returnNode=createDocumentFragment.call(body.ownerDocument);body.firstChild;)returnNode.appendChild(body.firstChild);else returnNode=body;return(ALLOWED_ATTR.shadowroot||ALLOWED_ATTR.shadowrootmode)&&(returnNode=importNode.call(originalDocument,returnNode,!0)),returnNode}let serializedHTML=WHOLE_DOCUMENT?body.outerHTML:body.innerHTML;return WHOLE_DOCUMENT&&ALLOWED_TAGS["!doctype"]&&body.ownerDocument&&body.ownerDocument.doctype&&body.ownerDocument.doctype.name&&regExpTest(DOCTYPE_NAME,body.ownerDocument.doctype.name)&&(serializedHTML="<!DOCTYPE "+body.ownerDocument.doctype.name+">\n"+serializedHTML),SAFE_FOR_TEMPLATES&&(serializedHTML=stringReplace(serializedHTML,MUSTACHE_EXPR," "),serializedHTML=stringReplace(serializedHTML,ERB_EXPR," "),serializedHTML=stringReplace(serializedHTML,TMPLIT_EXPR," ")),trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(serializedHTML):serializedHTML},DOMPurify.setConfig=function(cfg){_parseConfig(cfg),SET_CONFIG=!0},DOMPurify.clearConfig=function(){CONFIG=null,SET_CONFIG=!1},DOMPurify.isValidAttribute=function(tag,attr,value){CONFIG||_parseConfig({});const lcTag=transformCaseFunc(tag),lcName=transformCaseFunc(attr);return _isValidAttribute(lcTag,lcName,value)},DOMPurify.addHook=function(entryPoint,hookFunction){"function"==typeof hookFunction&&(hooks[entryPoint]=hooks[entryPoint]||[],arrayPush(hooks[entryPoint],hookFunction))},DOMPurify.removeHook=function(entryPoint){if(hooks[entryPoint])return arrayPop(hooks[entryPoint])},DOMPurify.removeHooks=function(entryPoint){hooks[entryPoint]&&(hooks[entryPoint]=[])},DOMPurify.removeAllHooks=function(){hooks={}},DOMPurify}();const sanitizeHtmlString=html=>purify().sanitize(html);var global$8=tinymce.util.Tools.resolve("tinymce.util.I18n");const rtlTransform={indent:!0,outdent:!0,"table-insert-column-after":!0,"table-insert-column-before":!0,"paste-column-after":!0,"paste-column-before":!0,"unordered-list":!0,"list-bull-circle":!0,"list-bull-default":!0,"list-bull-square":!0},defaultIcon=icons=>()=>get$g(icons,"temporary-placeholder").getOr("!not found!"),getIconName=(name,icons)=>{const lcName=name.toLowerCase();if(global$8.isRtl()){const rtlName=((str,suffix)=>endsWith(str,suffix)?str:((str,suffix)=>str+suffix)(str,suffix))(lcName,"-rtl");return has$2(icons,rtlName)?rtlName:lcName}return lcName},lookupIcon=(name,icons)=>get$g(icons,getIconName(name,icons)),get$2=(name,iconProvider)=>{const icons=iconProvider();return lookupIcon(name,icons).getOrThunk(defaultIcon(icons))},addFocusableBehaviour=()=>config("add-focusable",[runOnAttached((comp=>{child(comp.element,"svg").each((svg=>set$9(svg,"focusable","false")))}))]),renderIcon$3=(spec,iconName,icons,fallbackIcon)=>{var _a,_b;const rtlIconClasses=(iconName=>!!global$8.isRtl()&&has$2(rtlTransform,iconName))(iconName)?["tox-icon--flip"]:[],iconHtml=get$g(icons,getIconName(iconName,icons)).or(fallbackIcon).getOrThunk(defaultIcon(icons));return{dom:{tag:spec.tag,attributes:null!==(_a=spec.attributes)&&void 0!==_a?_a:{},classes:spec.classes.concat(rtlIconClasses),innerHtml:iconHtml},behaviours:derive$1([...null!==(_b=spec.behaviours)&&void 0!==_b?_b:[],addFocusableBehaviour()])}},render$3=(iconName,spec,iconProvider,fallbackIcon=Optional.none())=>renderIcon$3(spec,iconName,iconProvider(),fallbackIcon),notificationIconMap={success:"checkmark",error:"warning",err:"error",warning:"warning",warn:"warning",info:"info"},Notification=single({name:"Notification",factory:detail=>{const memBannerText=record({dom:fromHtml(`<p>${sanitizeHtmlString(detail.translationProvider(detail.text))}</p>`),behaviours:derive$1([Replacing.config({})])}),renderPercentBar=percent=>({dom:{tag:"div",classes:["tox-bar"],styles:{width:`${percent}%`}}}),renderPercentText=percent=>({dom:{tag:"div",classes:["tox-text"],innerHtml:`${percent}%`}}),memBannerProgress=record({dom:{tag:"div",classes:detail.progress?["tox-progress-bar","tox-progress-indicator"]:["tox-progress-bar"]},components:[{dom:{tag:"div",classes:["tox-bar-container"]},components:[renderPercentBar(0)]},renderPercentText(0)],behaviours:derive$1([Replacing.config({})])}),apis={updateProgress:(comp,percent)=>{comp.getSystem().isConnected()&&memBannerProgress.getOpt(comp).each((progress=>{Replacing.set(progress,[{dom:{tag:"div",classes:["tox-bar-container"]},components:[renderPercentBar(percent)]},renderPercentText(percent)])}))},updateText:(comp,text)=>{if(comp.getSystem().isConnected()){const banner=memBannerText.get(comp);Replacing.set(banner,[text$2(text)])}}},iconChoices=flatten([detail.icon.toArray(),detail.level.toArray(),detail.level.bind((level=>Optional.from(notificationIconMap[level]))).toArray()]),memButton=record(Button.sketch({dom:{tag:"button",classes:["tox-notification__dismiss","tox-button","tox-button--naked","tox-button--icon"]},components:[render$3("close",{tag:"span",classes:["tox-icon"],attributes:{"aria-label":detail.translationProvider("Close")}},detail.iconProvider)],action:comp=>{detail.onAction(comp)}})),notificationIconSpec=((iconNames,spec,iconProvider)=>{const icons=iconProvider(),iconName=find$5(iconNames,(name=>has$2(icons,getIconName(name,icons))));return renderIcon$3(spec,iconName.getOr("temporary-placeholder"),icons,Optional.none())})(iconChoices,{tag:"div",classes:["tox-notification__icon"]},detail.iconProvider),components=[notificationIconSpec,{dom:{tag:"div",classes:["tox-notification__body"]},components:[memBannerText.asSpec()],behaviours:derive$1([Replacing.config({})])}];return{uid:detail.uid,dom:{tag:"div",attributes:{role:"alert"},classes:detail.level.map((level=>["tox-notification","tox-notification--in",`tox-notification--${level}`])).getOr(["tox-notification","tox-notification--in"])},behaviours:derive$1([Focusing.config({}),config("notification-events",[run$1(focusin(),(comp=>{memButton.getOpt(comp).each(Focusing.focus)}))])]),components:components.concat(detail.progress?[memBannerProgress.asSpec()]:[]).concat(detail.closeButton?[memButton.asSpec()]:[]),apis:apis}},configFields:[option$3("level"),required$1("progress"),option$3("icon"),required$1("onAction"),required$1("text"),required$1("iconProvider"),required$1("translationProvider"),defaultedBoolean("closeButton",!0)],apis:{updateProgress:(apis,comp,percent)=>{apis.updateProgress(comp,percent)},updateText:(apis,comp,text)=>{apis.updateText(comp,text)}}});var ToolbarMode$1,ToolbarLocation$1,global$7=tinymce.util.Tools.resolve("tinymce.dom.DOMUtils"),global$6=tinymce.util.Tools.resolve("tinymce.EditorManager"),global$5=tinymce.util.Tools.resolve("tinymce.Env");!function(ToolbarMode){ToolbarMode.default="wrap",ToolbarMode.floating="floating",ToolbarMode.sliding="sliding",ToolbarMode.scrolling="scrolling"}(ToolbarMode$1||(ToolbarMode$1={})),function(ToolbarLocation){ToolbarLocation.auto="auto",ToolbarLocation.top="top",ToolbarLocation.bottom="bottom"}(ToolbarLocation$1||(ToolbarLocation$1={}));const option$2=name=>editor=>editor.options.get(name),wrapOptional=fn=>editor=>Optional.from(fn(editor)),register$e=editor=>{const isPhone=global$5.deviceType.isPhone(),isMobile=global$5.deviceType.isTablet()||isPhone,registerOption=editor.options.register,stringOrFalseProcessor=value=>isString(value)||!1===value,stringOrNumberProcessor=value=>isString(value)||isNumber(value);registerOption("skin",{processor:value=>isString(value)||!1===value,default:"oxide"}),registerOption("skin_url",{processor:"string"}),registerOption("height",{processor:stringOrNumberProcessor,default:Math.max(editor.getElement().offsetHeight,400)}),registerOption("width",{processor:stringOrNumberProcessor,default:global$7.DOM.getStyle(editor.getElement(),"width")}),registerOption("min_height",{processor:"number",default:100}),registerOption("min_width",{processor:"number"}),registerOption("max_height",{processor:"number"}),registerOption("max_width",{processor:"number"}),registerOption("style_formats",{processor:"object[]"}),registerOption("style_formats_merge",{processor:"boolean",default:!1}),registerOption("style_formats_autohide",{processor:"boolean",default:!1}),registerOption("line_height_formats",{processor:"string",default:"1 1.1 1.2 1.3 1.4 1.5 2"}),registerOption("font_family_formats",{processor:"string",default:"Andale Mono=andale mono,monospace;Arial=arial,helvetica,sans-serif;Arial Black=arial black,sans-serif;Book Antiqua=book antiqua,palatino,serif;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier,monospace;Georgia=georgia,palatino,serif;Helvetica=helvetica,arial,sans-serif;Impact=impact,sans-serif;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco,monospace;Times New Roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,geneva,sans-serif;Verdana=verdana,geneva,sans-serif;Webdings=webdings;Wingdings=wingdings,zapf dingbats"}),registerOption("font_size_formats",{processor:"string",default:"8pt 10pt 12pt 14pt 18pt 24pt 36pt"}),registerOption("font_size_input_default_unit",{processor:"string",default:"pt"}),registerOption("block_formats",{processor:"string",default:"Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6;Preformatted=pre"}),registerOption("content_langs",{processor:"object[]"}),registerOption("removed_menuitems",{processor:"string",default:""}),registerOption("menubar",{processor:value=>isString(value)||isBoolean(value),default:!isPhone}),registerOption("menu",{processor:"object",default:{}}),registerOption("toolbar",{processor:value=>isBoolean(value)||isString(value)||isArray(value)?{value:value,valid:!0}:{valid:!1,message:"Must be a boolean, string or array."},default:!0}),range$2(9,(num=>{registerOption("toolbar"+(num+1),{processor:"string"})})),registerOption("toolbar_mode",{processor:"string",default:isMobile?"scrolling":"floating"}),registerOption("toolbar_groups",{processor:"object",default:{}}),registerOption("toolbar_location",{processor:"string",default:ToolbarLocation$1.auto}),registerOption("toolbar_persist",{processor:"boolean",default:!1}),registerOption("toolbar_sticky",{processor:"boolean",default:editor.inline}),registerOption("toolbar_sticky_offset",{processor:"number",default:0}),registerOption("fixed_toolbar_container",{processor:"string",default:""}),registerOption("fixed_toolbar_container_target",{processor:"object"}),registerOption("ui_mode",{processor:"string",default:"combined"}),registerOption("file_picker_callback",{processor:"function"}),registerOption("file_picker_validator_handler",{processor:"function"}),registerOption("file_picker_types",{processor:"string"}),registerOption("typeahead_urls",{processor:"boolean",default:!0}),registerOption("anchor_top",{processor:stringOrFalseProcessor,default:"#top"}),registerOption("anchor_bottom",{processor:stringOrFalseProcessor,default:"#bottom"}),registerOption("draggable_modal",{processor:"boolean",default:!1}),registerOption("statusbar",{processor:"boolean",default:!0}),registerOption("elementpath",{processor:"boolean",default:!0}),registerOption("branding",{processor:"boolean",default:!0}),registerOption("promotion",{processor:"boolean",default:!0}),registerOption("resize",{processor:value=>"both"===value||isBoolean(value),default:!global$5.deviceType.isTouch()}),registerOption("sidebar_show",{processor:"string"}),registerOption("help_accessibility",{processor:"boolean",default:editor.hasPlugin("help")}),registerOption("default_font_stack",{processor:"string[]",default:[]})},isReadOnly=option$2("readonly"),getHeightOption=option$2("height"),getWidthOption=option$2("width"),getMinWidthOption=wrapOptional(option$2("min_width")),getMinHeightOption=wrapOptional(option$2("min_height")),getMaxWidthOption=wrapOptional(option$2("max_width")),getMaxHeightOption=wrapOptional(option$2("max_height")),getUserStyleFormats=wrapOptional(option$2("style_formats")),shouldMergeStyleFormats=option$2("style_formats_merge"),shouldAutoHideStyleFormats=option$2("style_formats_autohide"),getContentLanguages=option$2("content_langs"),getRemovedMenuItems=option$2("removed_menuitems"),getToolbarMode=option$2("toolbar_mode"),getToolbarGroups=option$2("toolbar_groups"),getToolbarLocation=option$2("toolbar_location"),fixedContainerSelector=option$2("fixed_toolbar_container"),fixedToolbarContainerTarget=option$2("fixed_toolbar_container_target"),isToolbarPersist=option$2("toolbar_persist"),getStickyToolbarOffset=option$2("toolbar_sticky_offset"),getMenubar=option$2("menubar"),getToolbar=option$2("toolbar"),getFilePickerCallback=option$2("file_picker_callback"),getFilePickerValidatorHandler=option$2("file_picker_validator_handler"),getFontSizeInputDefaultUnit=option$2("font_size_input_default_unit"),getFilePickerTypes=option$2("file_picker_types"),useTypeaheadUrls=option$2("typeahead_urls"),getAnchorTop=option$2("anchor_top"),getAnchorBottom=option$2("anchor_bottom"),isDraggableModal$1=option$2("draggable_modal"),useStatusBar=option$2("statusbar"),useElementPath=option$2("elementpath"),useBranding=option$2("branding"),getResize=option$2("resize"),getPasteAsText=option$2("paste_as_text"),getSidebarShow=option$2("sidebar_show"),promotionEnabled=option$2("promotion"),useHelpAccessibility=option$2("help_accessibility"),getDefaultFontStack=option$2("default_font_stack"),isSkinDisabled=editor=>!1===editor.options.get("skin"),isMenubarEnabled=editor=>!1!==editor.options.get("menubar"),getSkinUrl=editor=>{const skinUrl=editor.options.get("skin_url");if(isSkinDisabled(editor))return skinUrl;if(skinUrl)return editor.documentBaseURI.toAbsolute(skinUrl);{const skin=editor.options.get("skin");return global$6.baseURL+"/skins/ui/"+skin}},getSkinUrlOption=editor=>Optional.from(editor.options.get("skin_url")),getLineHeightFormats=editor=>editor.options.get("line_height_formats").split(" "),isToolbarEnabled=editor=>{const toolbar=getToolbar(editor),isToolbarString=isString(toolbar),isToolbarObjectArray=isArray(toolbar)&&toolbar.length>0;return!isMultipleToolbars(editor)&&(isToolbarObjectArray||isToolbarString||!0===toolbar)},getMultipleToolbarsOption=editor=>{const toolbars=range$2(9,(num=>editor.options.get("toolbar"+(num+1)))),toolbarArray=filter$2(toolbars,isString);return someIf(toolbarArray.length>0,toolbarArray)},isMultipleToolbars=editor=>getMultipleToolbarsOption(editor).fold((()=>{const toolbar=getToolbar(editor);return isArrayOf(toolbar,isString)&&toolbar.length>0}),always),isToolbarLocationBottom=editor=>getToolbarLocation(editor)===ToolbarLocation$1.bottom,fixedContainerTarget=editor=>{var _a;if(!editor.inline)return Optional.none();const selector=null!==(_a=fixedContainerSelector(editor))&&void 0!==_a?_a:"";if(selector.length>0)return descendant(body(),selector);const element=fixedToolbarContainerTarget(editor);return isNonNullable(element)?Optional.some(SugarElement.fromDom(element)):Optional.none()},useFixedContainer=editor=>editor.inline&&fixedContainerTarget(editor).isSome(),getUiContainer=editor=>fixedContainerTarget(editor).getOrThunk((()=>getContentContainer(getRootNode(SugarElement.fromDom(editor.getElement()))))),isDistractionFree=editor=>editor.inline&&!isMenubarEnabled(editor)&&!isToolbarEnabled(editor)&&!isMultipleToolbars(editor),isStickyToolbar=editor=>(editor.options.get("toolbar_sticky")||editor.inline)&&!useFixedContainer(editor)&&!isDistractionFree(editor),isSplitUiMode=editor=>!useFixedContainer(editor)&&"split"===editor.options.get("ui_mode"),getMenus=editor=>{const menu=editor.options.get("menu");return map$1(menu,(menu=>({...menu,items:menu.items})))};var Options=Object.freeze({__proto__:null,get ToolbarMode(){return ToolbarMode$1},get ToolbarLocation(){return ToolbarLocation$1},register:register$e,getSkinUrl:getSkinUrl,getSkinUrlOption:getSkinUrlOption,isReadOnly:isReadOnly,isSkinDisabled:isSkinDisabled,getHeightOption:getHeightOption,getWidthOption:getWidthOption,getMinWidthOption:getMinWidthOption,getMinHeightOption:getMinHeightOption,getMaxWidthOption:getMaxWidthOption,getMaxHeightOption:getMaxHeightOption,getUserStyleFormats:getUserStyleFormats,shouldMergeStyleFormats:shouldMergeStyleFormats,shouldAutoHideStyleFormats:shouldAutoHideStyleFormats,getLineHeightFormats:getLineHeightFormats,getContentLanguages:getContentLanguages,getRemovedMenuItems:getRemovedMenuItems,isMenubarEnabled:isMenubarEnabled,isMultipleToolbars:isMultipleToolbars,isToolbarEnabled:isToolbarEnabled,isToolbarPersist:isToolbarPersist,getMultipleToolbarsOption:getMultipleToolbarsOption,getUiContainer:getUiContainer,useFixedContainer:useFixedContainer,isSplitUiMode:isSplitUiMode,getToolbarMode:getToolbarMode,isDraggableModal:isDraggableModal$1,isDistractionFree:isDistractionFree,isStickyToolbar:isStickyToolbar,getStickyToolbarOffset:getStickyToolbarOffset,getToolbarLocation:getToolbarLocation,isToolbarLocationBottom:isToolbarLocationBottom,getToolbarGroups:getToolbarGroups,getMenus:getMenus,getMenubar:getMenubar,getToolbar:getToolbar,getFilePickerCallback:getFilePickerCallback,getFilePickerTypes:getFilePickerTypes,useTypeaheadUrls:useTypeaheadUrls,getAnchorTop:getAnchorTop,getAnchorBottom:getAnchorBottom,getFilePickerValidatorHandler:getFilePickerValidatorHandler,getFontSizeInputDefaultUnit:getFontSizeInputDefaultUnit,useStatusBar:useStatusBar,useElementPath:useElementPath,promotionEnabled:promotionEnabled,useBranding:useBranding,getResize:getResize,getPasteAsText:getPasteAsText,getSidebarShow:getSidebarShow,useHelpAccessibility:useHelpAccessibility,getDefaultFontStack:getDefaultFontStack});const detect$1=elm=>closest$1(elm,"[data-mce-autocompleter]"),AutocompleterEditorEvents_setup=(api,editor)=>{const redirectKeyToItem=(item,e)=>{emitWith(item,keydown(),{raw:e})},getItem=()=>api.getMenu().bind(Highlighting.getHighlighted);editor.on("keydown",(e=>{const keyCode=e.which;api.isActive()&&(api.isMenuOpen()?13===keyCode?(getItem().each(emitExecute),e.preventDefault()):40===keyCode?(getItem().fold((()=>{api.getMenu().each(Highlighting.highlightFirst)}),(item=>{redirectKeyToItem(item,e)})),e.preventDefault(),e.stopImmediatePropagation()):37!==keyCode&&38!==keyCode&&39!==keyCode||getItem().each((item=>{redirectKeyToItem(item,e),e.preventDefault(),e.stopImmediatePropagation()})):13!==keyCode&&38!==keyCode&&40!==keyCode||api.cancelIfNecessary())})),editor.on("NodeChange",(e=>{api.isActive()&&!api.isProcessingAction()&&detect$1(SugarElement.fromDom(e.element)).isNone()&&api.cancelIfNecessary()}))};var ItemResponse;!function(ItemResponse){ItemResponse[ItemResponse.CLOSE_ON_EXECUTE=0]="CLOSE_ON_EXECUTE",ItemResponse[ItemResponse.BUBBLE_TO_SANDBOX=1]="BUBBLE_TO_SANDBOX"}(ItemResponse||(ItemResponse={}));var ItemResponse$1=ItemResponse;const navClass="tox-menu-nav__js",presetClasses={normal:navClass,color:"tox-swatch"},textClass="tox-collection__item-label",activeClass="tox-collection__item--active",classForPreset=presets=>get$g(presetClasses,presets).getOr(navClass),forMenu=presets=>"color"===presets?"tox-swatches":"tox-menu",classes=presets=>({backgroundMenu:"tox-background-menu",selectedMenu:"tox-selected-menu",selectedItem:"tox-collection__item--active",hasIcons:"tox-menu--has-icons",menu:forMenu(presets),tieredMenu:"tox-tiered-menu"}),markers=presets=>{const menuClasses=classes(presets);return{backgroundMenu:menuClasses.backgroundMenu,selectedMenu:menuClasses.selectedMenu,menu:menuClasses.menu,selectedItem:menuClasses.selectedItem,item:classForPreset(presets)}},dom$1=(hasIcons,columns,presets)=>{const menuClasses=classes(presets);return{tag:"div",classes:flatten([[menuClasses.menu,`tox-menu-${columns}-column`],hasIcons?[menuClasses.hasIcons]:[]])}},components=[Menu.parts.items({})],part=(hasIcons,columns,presets)=>{const menuClasses=classes(presets);return{dom:{tag:"div",classes:flatten([[menuClasses.tieredMenu]])},markers:markers(presets)}},schema$l=constant$1([option$3("data"),defaulted("inputAttributes",{}),defaulted("inputStyles",{}),defaulted("tag","input"),defaulted("inputClasses",[]),onHandler("onSetValue"),defaulted("styles",{}),defaulted("eventOrder",{}),field("inputBehaviours",[Representing,Focusing]),defaulted("selectOnFocus",!0)]),focusBehaviours=detail=>derive$1([Focusing.config({onFocus:detail.selectOnFocus?component=>{const input=component.element,value=get$6(input);input.dom.setSelectionRange(0,value.length)}:noop})]),behaviours=detail=>({...focusBehaviours(detail),...augment(detail.inputBehaviours,[Representing.config({store:{mode:"manual",...detail.data.map((data=>({initialValue:data}))).getOr({}),getValue:input=>get$6(input.element),setValue:(input,data)=>{get$6(input.element)!==data&&set$5(input.element,data)}},onSetValue:detail.onSetValue})])}),dom=detail=>({tag:detail.tag,attributes:{type:"text",...detail.inputAttributes},styles:detail.inputStyles,classes:detail.inputClasses}),Input=single({name:"Input",configFields:schema$l(),factory:(detail,_spec)=>({uid:detail.uid,dom:dom(detail),components:[],behaviours:behaviours(detail),eventOrder:detail.eventOrder})}),refetchTriggerEvent=generate$6("refetch-trigger-event"),redirectMenuItemInteractionEvent=generate$6("redirect-menu-item-interaction"),findWithinSandbox=sandboxComp=>descendant(sandboxComp.element,".tox-menu__searcher").bind((inputElem=>sandboxComp.getSystem().getByDom(inputElem).toOptional())),findWithinMenu=findWithinSandbox,saveState=inputComp=>({fetchPattern:Representing.getValue(inputComp),selectionStart:inputComp.element.dom.selectionStart,selectionEnd:inputComp.element.dom.selectionEnd}),renderMenuSearcher=spec=>{const handleByBrowser=(comp,se)=>(se.cut(),Optional.none()),handleByHighlightedItem=(comp,se)=>{const eventData={interactionEvent:se.event,eventType:se.event.raw.type};return emitWith(comp,redirectMenuItemInteractionEvent,eventData),Optional.some(!0)};return{dom:{tag:"div",classes:["tox-collection__item"]},components:[Input.sketch({inputClasses:["tox-menu__searcher","tox-textfield"],inputAttributes:{...spec.placeholder.map((placeholder=>({placeholder:spec.i18n(placeholder)}))).getOr({}),type:"search","aria-autocomplete":"list"},inputBehaviours:derive$1([config("searcher-events",[run$1(input(),(inputComp=>{emit(inputComp,refetchTriggerEvent)})),run$1(keydown(),((inputComp,se)=>{"Escape"===se.event.raw.key&&se.stop()}))]),Keying.config({mode:"special",onLeft:handleByBrowser,onRight:handleByBrowser,onSpace:handleByBrowser,onEnter:handleByHighlightedItem,onEscape:handleByHighlightedItem,onUp:handleByHighlightedItem,onDown:handleByHighlightedItem})]),eventOrder:{keydown:["searcher-events",Keying.name()]}})]}},searchResultsClass="tox-collection--results__js",augmentWithAria=item=>{var _a;return item.dom?{...item,dom:{...item.dom,attributes:{...null!==(_a=item.dom.attributes)&&void 0!==_a?_a:{},id:generate$6("aria-item-search-result-id"),"aria-selected":"false"}}}:item},chunk=(rowDom,numColumns)=>items=>{const chunks=chunk$1(items,numColumns);return map$2(chunks,(c=>({dom:rowDom,components:c})))},preprocessCollection=(items,isSeparator)=>{const allSplits=[];let currentSplit=[];return each$1(items,((item,i)=>{isSeparator(item,i)?(currentSplit.length>0&&allSplits.push(currentSplit),currentSplit=[],(has$2(item.dom,"innerHtml")||item.components&&item.components.length>0)&&currentSplit.push(item)):currentSplit.push(item)})),currentSplit.length>0&&allSplits.push(currentSplit),map$2(allSplits,(s=>({dom:{tag:"div",classes:["tox-collection__group"]},components:s})))},insertItemsPlaceholder=(columns,initItems,onItem)=>Menu.parts.items({preprocess:rawItems=>{const enrichedItems=map$2(rawItems,onItem);return"auto"!==columns&&columns>1?chunk({tag:"div",classes:["tox-collection__group"]},columns)(enrichedItems):preprocessCollection(enrichedItems,((_item,i)=>"separator"===initItems[i].type))}}),forCollection=(columns,initItems,_hasIcons=!0)=>({dom:{tag:"div",classes:["tox-menu","tox-collection"].concat(1===columns?["tox-collection--list"]:["tox-collection--grid"])},components:[insertItemsPlaceholder(columns,initItems,identity)]}),menuHasIcons=xs=>exists(xs,(item=>"icon"in item&&void 0!==item.icon)),handleError=error=>(console.error(formatError(error)),console.log(error),Optional.none()),createHorizontalPartialMenuWithAlloyItems=(value,_hasIcons,items,_columns,_menuLayout)=>{const structure=(initItems=items,{dom:{tag:"div",classes:["tox-collection","tox-collection--horizontal"]},components:[Menu.parts.items({preprocess:items=>preprocessCollection(items,((_item,i)=>"separator"===initItems[i].type))})]});var initItems;return{value:value,dom:structure.dom,components:structure.components,items:items}},createPartialMenuWithAlloyItems=(value,hasIcons,items,columns,menuLayout)=>{const getNormalStructure=()=>"searchable"!==menuLayout.menuType?forCollection(columns,items):"search-with-field"===menuLayout.searchMode.searchMode?((columns,initItems,searchField)=>{const ariaControlsSearchResults=generate$6("aria-controls-search-results");return{dom:{tag:"div",classes:["tox-menu","tox-collection"].concat(1===columns?["tox-collection--list"]:["tox-collection--grid"])},components:[renderMenuSearcher({i18n:global$8.translate,placeholder:searchField.placeholder}),{dom:{tag:"div",classes:[...1===columns?["tox-collection--list"]:["tox-collection--grid"],searchResultsClass],attributes:{id:ariaControlsSearchResults}},components:[insertItemsPlaceholder(columns,initItems,augmentWithAria)]}]}})(columns,items,menuLayout.searchMode):((columns,initItems,_hasIcons=!0)=>{const ariaControlsSearchResults=generate$6("aria-controls-search-results");return{dom:{tag:"div",classes:["tox-menu","tox-collection",searchResultsClass].concat(1===columns?["tox-collection--list"]:["tox-collection--grid"]),attributes:{id:ariaControlsSearchResults}},components:[insertItemsPlaceholder(columns,initItems,augmentWithAria)]}})(columns,items);if("color"===menuLayout.menuType){const structure=(columns=>({dom:{tag:"div",classes:["tox-menu","tox-swatches-menu"]},components:[{dom:{tag:"div",classes:["tox-swatches"]},components:[Menu.parts.items({preprocess:"auto"!==columns?chunk({tag:"div",classes:["tox-swatches__row"]},columns):identity})]}]}))(columns);return{value:value,dom:structure.dom,components:structure.components,items:items}}if("normal"===menuLayout.menuType&&"auto"===columns){const structure=forCollection(columns,items);return{value:value,dom:structure.dom,components:structure.components,items:items}}if("normal"===menuLayout.menuType||"searchable"===menuLayout.menuType){const structure=getNormalStructure();return{value:value,dom:structure.dom,components:structure.components,items:items}}if("listpreview"===menuLayout.menuType&&"auto"!==columns){const structure=(columns=>({dom:{tag:"div",classes:["tox-menu","tox-collection","tox-collection--toolbar","tox-collection--toolbar-lg"]},components:[Menu.parts.items({preprocess:chunk({tag:"div",classes:["tox-collection__group"]},columns)})]}))(columns);return{value:value,dom:structure.dom,components:structure.components,items:items}}return{value:value,dom:dom$1(hasIcons,columns,menuLayout.menuType),components:components,items:items}},type=requiredString("type"),name$1=requiredString("name"),label=requiredString("label"),text=requiredString("text"),title=requiredString("title"),icon=requiredString("icon"),value$1=requiredString("value"),fetch$1=requiredFunction("fetch"),getSubmenuItems=requiredFunction("getSubmenuItems"),onAction=requiredFunction("onAction"),onItemAction=requiredFunction("onItemAction"),onSetup=defaultedFunction("onSetup",(()=>noop)),optionalName=optionString("name"),optionalText=optionString("text"),optionalIcon=optionString("icon"),optionalTooltip=optionString("tooltip"),optionalLabel=optionString("label"),optionalShortcut=optionString("shortcut"),optionalSelect=optionFunction("select"),active=defaultedBoolean("active",!1),borderless=defaultedBoolean("borderless",!1),enabled=defaultedBoolean("enabled",!0),primary=defaultedBoolean("primary",!1),defaultedColumns=num=>defaulted("columns",num),defaultedMeta=defaulted("meta",{}),defaultedOnAction=defaultedFunction("onAction",noop),defaultedType=type=>defaultedString("type",type),generatedName=namePrefix=>field$1("name","name",defaultedThunk((()=>generate$6(`${namePrefix}-name`))),string),separatorMenuItemSchema=objOf([type,optionalText]),autocompleterItemSchema=objOf([defaultedType("autocompleteitem"),active,enabled,defaultedMeta,value$1,optionalText,optionalIcon]),baseToolbarButtonFields=[enabled,optionalTooltip,optionalIcon,optionalText,onSetup],toolbarButtonSchema=objOf([type,onAction].concat(baseToolbarButtonFields)),createToolbarButton=spec=>asRaw("toolbarbutton",toolbarButtonSchema,spec),baseToolbarToggleButtonFields=[active].concat(baseToolbarButtonFields),toggleButtonSchema=objOf(baseToolbarToggleButtonFields.concat([type,onAction])),createToggleButton=spec=>asRaw("ToggleButton",toggleButtonSchema,spec),contextBarFields=[defaultedFunction("predicate",never),defaultedStringEnum("scope","node",["node","editor"]),defaultedStringEnum("position","selection",["node","selection","line"])],contextButtonFields=baseToolbarButtonFields.concat([defaultedType("contextformbutton"),primary,onAction,customField("original",identity)]),contextToggleButtonFields=baseToolbarToggleButtonFields.concat([defaultedType("contextformbutton"),primary,onAction,customField("original",identity)]),launchButtonFields=baseToolbarButtonFields.concat([defaultedType("contextformbutton")]),launchToggleButtonFields=baseToolbarToggleButtonFields.concat([defaultedType("contextformtogglebutton")]),toggleOrNormal=choose$1("type",{contextformbutton:contextButtonFields,contextformtogglebutton:contextToggleButtonFields}),contextFormSchema=objOf([defaultedType("contextform"),defaultedFunction("initValue",constant$1("")),optionalLabel,requiredArrayOf("commands",toggleOrNormal),optionOf("launch",choose$1("type",{contextformbutton:launchButtonFields,contextformtogglebutton:launchToggleButtonFields}))].concat(contextBarFields)),contextToolbarSchema=objOf([defaultedType("contexttoolbar"),requiredString("items")].concat(contextBarFields)),cardImageFields=[type,requiredString("src"),optionString("alt"),defaultedArrayOf("classes",[],string)],cardImageSchema=objOf(cardImageFields),cardTextFields=[type,text,optionalName,defaultedArrayOf("classes",["tox-collection__item-label"],string)],cardTextSchema=objOf(cardTextFields),itemSchema$1=valueThunk((()=>choose$2("type",{cardimage:cardImageSchema,cardtext:cardTextSchema,cardcontainer:cardContainerSchema}))),cardContainerSchema=objOf([type,defaultedString("direction","horizontal"),defaultedString("align","left"),defaultedString("valign","middle"),requiredArrayOf("items",itemSchema$1)]),commonMenuItemFields=[enabled,optionalText,optionalShortcut,(valuePrefix="menuitem",field$1("value","value",defaultedThunk((()=>generate$6(`${valuePrefix}-value`))),anyValue())),defaultedMeta];var valuePrefix;const cardMenuItemSchema=objOf([type,optionalLabel,requiredArrayOf("items",itemSchema$1),onSetup,defaultedOnAction].concat(commonMenuItemFields)),choiceMenuItemSchema=objOf([type,active,optionalIcon].concat(commonMenuItemFields)),baseFields=[type,requiredString("fancytype"),defaultedOnAction],insertTableFields=[defaulted("initData",{})].concat(baseFields),colorSwatchFields=[optionFunction("select"),defaultedObjOf("initData",{},[defaultedBoolean("allowCustomColors",!0),defaultedString("storageKey","default"),optionArrayOf("colors",anyValue())])].concat(baseFields),fancyMenuItemSchema=choose$1("fancytype",{inserttable:insertTableFields,colorswatch:colorSwatchFields}),menuItemSchema=objOf([type,onSetup,defaultedOnAction,optionalIcon].concat(commonMenuItemFields)),nestedMenuItemSchema=objOf([type,getSubmenuItems,onSetup,optionalIcon].concat(commonMenuItemFields)),toggleMenuItemSchema=objOf([type,optionalIcon,active,onSetup,onAction].concat(commonMenuItemFields)),detectSize=(comp,margin,selectorClass)=>{const descendants$1=descendants(comp.element,"."+selectorClass);if(descendants$1.length>0){const columnLength=findIndex$1(descendants$1,(c=>{const thisTop=c.dom.getBoundingClientRect().top,cTop=descendants$1[0].dom.getBoundingClientRect().top;return Math.abs(thisTop-cTop)>margin})).getOr(descendants$1.length);return Optional.some({numColumns:columnLength,numRows:Math.ceil(descendants$1.length/columnLength)})}return Optional.none()},namedEvents=(name,handlers)=>derive$1([config(name,handlers)]),SimpleBehaviours_unnamedEvents=handlers=>namedEvents(generate$6("unnamed-events"),handlers),ExclusivityChannel=generate$6("tooltip.exclusive"),ShowTooltipEvent=generate$6("tooltip.show"),HideTooltipEvent=generate$6("tooltip.hide"),hideAllExclusive=(component,_tConfig,_tState)=>{component.getSystem().broadcastOn([ExclusivityChannel],{})};var TooltippingApis=Object.freeze({__proto__:null,hideAllExclusive:hideAllExclusive,setComponents:(component,tConfig,tState,specs)=>{tState.getTooltip().each((tooltip=>{tooltip.getSystem().isConnected()&&Replacing.set(tooltip,specs)}))}});var ActiveTooltipping=Object.freeze({__proto__:null,events:(tooltipConfig,state)=>{const hide=comp=>{state.getTooltip().each((p=>{detach(p),tooltipConfig.onHide(comp,p),state.clearTooltip()})),state.clearTimer()};return derive$2(flatten([[run$1(ShowTooltipEvent,(comp=>{state.resetTimer((()=>{(comp=>{if(!state.isShowing()){hideAllExclusive(comp);const sink=tooltipConfig.lazySink(comp).getOrDie(),popup=comp.getSystem().build({dom:tooltipConfig.tooltipDom,components:tooltipConfig.tooltipComponents,events:derive$2("normal"===tooltipConfig.mode?[run$1(mouseover(),(_=>{emit(comp,ShowTooltipEvent)})),run$1(mouseout(),(_=>{emit(comp,HideTooltipEvent)}))]:[]),behaviours:derive$1([Replacing.config({})])});state.setTooltip(popup),attach(sink,popup),tooltipConfig.onShow(comp,popup),Positioning.position(sink,popup,{anchor:tooltipConfig.anchor(comp)})}})(comp)}),tooltipConfig.delay)})),run$1(HideTooltipEvent,(comp=>{state.resetTimer((()=>{hide(comp)}),tooltipConfig.delay)})),run$1(receive(),((comp,message)=>{const receivingData=message;receivingData.universal||contains$2(receivingData.channels,ExclusivityChannel)&&hide(comp)})),runOnDetached((comp=>{hide(comp)}))],"normal"===tooltipConfig.mode?[run$1(focusin(),(comp=>{emit(comp,ShowTooltipEvent)})),run$1(postBlur(),(comp=>{emit(comp,HideTooltipEvent)})),run$1(mouseover(),(comp=>{emit(comp,ShowTooltipEvent)})),run$1(mouseout(),(comp=>{emit(comp,HideTooltipEvent)}))]:[run$1(highlight$1(),((comp,_se)=>{emit(comp,ShowTooltipEvent)})),run$1(dehighlight$1(),(comp=>{emit(comp,HideTooltipEvent)}))]]))}}),TooltippingSchema=[required$1("lazySink"),required$1("tooltipDom"),defaulted("exclusive",!0),defaulted("tooltipComponents",[]),defaulted("delay",300),defaultedStringEnum("mode","normal",["normal","follow-highlight"]),defaulted("anchor",(comp=>({type:"hotspot",hotspot:comp,layouts:{onLtr:constant$1([south$2,north$2,southeast$2,northeast$2,southwest$2,northwest$2]),onRtl:constant$1([south$2,north$2,southeast$2,northeast$2,southwest$2,northwest$2])}}))),onHandler("onHide"),onHandler("onShow")];var TooltippingState=Object.freeze({__proto__:null,init:()=>{const timer=value$2(),popup=value$2(),clearTimer=()=>{timer.on(clearTimeout)},readState=constant$1("not-implemented");return nu$8({getTooltip:popup.get,isShowing:popup.isSet,setTooltip:popup.set,clearTooltip:popup.clear,clearTimer:clearTimer,resetTimer:(f,delay)=>{clearTimer(),timer.set(setTimeout(f,delay))},readState:readState})}});const Tooltipping=create$4({fields:TooltippingSchema,name:"tooltipping",active:ActiveTooltipping,state:TooltippingState,apis:TooltippingApis}),ReadOnlyDataSchema=objOf([(key="readonly",requiredOf(key,boolean))]);var key;const broadcastReadonly=(uiRefs,readonly)=>{const target=uiRefs.mainUi.outerContainer.element,motherships=[uiRefs.mainUi.mothership,...uiRefs.uiMotherships];readonly&&each$1(motherships,(m=>{m.broadcastOn([dismissPopups()],{target:target})})),each$1(motherships,(m=>{m.broadcastOn(["silver.readonly"],{readonly:readonly})}))},setupReadonlyModeSwitch=(editor,uiRefs)=>{editor.on("init",(()=>{editor.mode.isReadOnly()&&broadcastReadonly(uiRefs,!0)})),editor.on("SwitchMode",(()=>broadcastReadonly(uiRefs,editor.mode.isReadOnly()))),isReadOnly(editor)&&editor.mode.set("readonly")},receivingConfig=()=>Receiving.config({channels:{"silver.readonly":{schema:ReadOnlyDataSchema,onReceive:(comp,data)=>{Disabling.set(comp,data.readonly)}}}}),DisablingConfigs_item=disabled=>Disabling.config({disabled:disabled,disableClass:"tox-collection__item--state-disabled"}),DisablingConfigs_button=disabled=>Disabling.config({disabled:disabled}),DisablingConfigs_splitButton=disabled=>Disabling.config({disabled:disabled,disableClass:"tox-tbtn--disabled"}),DisablingConfigs_toolbarButton=disabled=>Disabling.config({disabled:disabled,disableClass:"tox-tbtn--disabled",useNative:!1}),runWithApi=(info,comp)=>{const api=info.getApi(comp);return f=>{f(api)}},onControlAttached=(info,editorOffCell)=>runOnAttached((comp=>{runWithApi(info,comp)((api=>{const onDestroy=info.onSetup(api);isFunction(onDestroy)&&editorOffCell.set(onDestroy)}))})),onControlDetached=(getApi,editorOffCell)=>runOnDetached((comp=>runWithApi(getApi,comp)(editorOffCell.get()))),onMenuItemExecute=(info,itemResponse)=>runOnExecute$1(((comp,simulatedEvent)=>{runWithApi(info,comp)(info.onAction),info.triggersSubmenu||itemResponse!==ItemResponse$1.CLOSE_ON_EXECUTE||(comp.getSystem().isConnected()&&emit(comp,sandboxClose()),simulatedEvent.stop())})),menuItemEventOrder={[execute$5()]:["disabling","alloy.base.behaviour","toggling","item-events"]},componentRenderPipeline=cat,renderCommonItem=(spec,structure,itemResponse,providersBackstage)=>{const editorOffCell=Cell(noop);return{type:"item",dom:structure.dom,components:componentRenderPipeline(structure.optComponents),data:spec.data,eventOrder:menuItemEventOrder,hasSubmenu:spec.triggersSubmenu,itemBehaviours:derive$1([config("item-events",[onMenuItemExecute(spec,itemResponse),onControlAttached(spec,editorOffCell),onControlDetached(spec,editorOffCell)]),DisablingConfigs_item((()=>!spec.enabled||providersBackstage.isDisabled())),receivingConfig(),Replacing.config({})].concat(spec.itemBehaviours))}},buildData=source=>({value:source.value,meta:{text:source.text.getOr(""),...source.meta}}),convertText=source=>{const isMac=global$5.os.isMacOS()||global$5.os.isiOS(),replace=isMac?{alt:"⌥",ctrl:"⌃",shift:"⇧",meta:"⌘",access:"⌃⌥"}:{meta:"Ctrl",access:"Shift+Alt"},shortcut=source.split("+"),updated=map$2(shortcut,(segment=>{const search=segment.toLowerCase().trim();return has$2(replace,search)?replace[search]:segment}));return isMac?updated.join(""):updated.join("+")},renderIcon$2=(name,icons,classes=["tox-collection__item-icon"])=>render$3(name,{tag:"div",classes:classes},icons),renderText=text=>({dom:{tag:"div",classes:[textClass]},components:[text$2(global$8.translate(text))]}),renderHtml=(html,classes)=>({dom:{tag:"div",classes:classes,innerHtml:html}}),renderStyledText=(style,text)=>({dom:{tag:"div",classes:[textClass]},components:[{dom:{tag:style.tag,styles:style.styles},components:[text$2(global$8.translate(text))]}]}),renderShortcut=shortcut=>({dom:{tag:"div",classes:["tox-collection__item-accessory"]},components:[text$2(convertText(shortcut))]}),renderCheckmark=icons=>renderIcon$2("checkmark",icons,["tox-collection__item-checkmark"]),renderColorStructure=(item,providerBackstage,fallbackIcon)=>{const itemText=item.ariaLabel,itemValue=item.value,iconSvg=item.iconContent.map((name=>((name,iconProvider,fallbackIcon)=>{const icons=iconProvider();return lookupIcon(name,icons).or(fallbackIcon).getOrThunk(defaultIcon(icons))})(name,providerBackstage.icons,fallbackIcon)));return{dom:(()=>{const icon=iconSvg.getOr(""),attributes=itemText.map((text=>({title:providerBackstage.translate(text)}))).getOr({}),baseDom={tag:"div",attributes:attributes,classes:["tox-swatch"]};return"custom"===itemValue?{...baseDom,tag:"button",classes:[...baseDom.classes,"tox-swatches__picker-btn"],innerHtml:icon}:"remove"===itemValue?{...baseDom,classes:[...baseDom.classes,"tox-swatch--remove"],innerHtml:icon}:isNonNullable(itemValue)?{...baseDom,attributes:{...baseDom.attributes,"data-mce-color":itemValue},styles:{"background-color":itemValue},innerHtml:icon}:baseDom})(),optComponents:[]}},renderItemDomStructure=ariaLabel=>{const domTitle=ariaLabel.map((label=>({attributes:{title:global$8.translate(label),id:generate$6("menu-item")}}))).getOr({});return{tag:"div",classes:[navClass,"tox-collection__item"],...domTitle}},renderItemStructure=(info,providersBackstage,renderIcons,fallbackIcon=Optional.none())=>"color"===info.presets?renderColorStructure(info,providersBackstage,fallbackIcon):((info,providersBackstage,renderIcons,fallbackIcon)=>{const iconSpec={tag:"div",classes:["tox-collection__item-icon"]},leftIcon=renderIcons?info.iconContent.map((iconName=>render$3(iconName,iconSpec,providersBackstage.icons,fallbackIcon))).orThunk((()=>Optional.some({dom:iconSpec}))):Optional.none(),checkmark=info.checkMark,textRender=Optional.from(info.meta).fold((()=>renderText),(meta=>has$2(meta,"style")?curry(renderStyledText,meta.style):renderText)),content=info.htmlContent.fold((()=>info.textContent.map(textRender)),(html=>Optional.some(renderHtml(html,[textClass]))));return{dom:renderItemDomStructure(info.ariaLabel),optComponents:[leftIcon,content,info.shortcutContent.map(renderShortcut),checkmark,info.caret]}})(info,providersBackstage,renderIcons,fallbackIcon),tooltipBehaviour=(meta,sharedBackstage)=>get$g(meta,"tooltipWorker").map((tooltipWorker=>[Tooltipping.config({lazySink:sharedBackstage.getSink,tooltipDom:{tag:"div",classes:["tox-tooltip-worker-container"]},tooltipComponents:[],anchor:comp=>({type:"submenu",item:comp,overrides:{maxHeightFunction:expandable$1}}),mode:"follow-highlight",onShow:(component,_tooltip)=>{tooltipWorker((elm=>{Tooltipping.setComponents(component,[external$1({element:SugarElement.fromDom(elm)})])}))}})])).getOr([]),replaceText=(text,matchText)=>{const encoded=(text=>global$7.DOM.encode(text))(global$8.translate(text));if(matchText.length>0){const escapedMatchRegex=new RegExp((text=>text.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"))(matchText),"gi");return encoded.replace(escapedMatchRegex,(match=>`<span class="tox-autocompleter-highlight">${match}</span>`))}return encoded},render$2=(items,extras)=>map$2(items,(item=>{switch(item.type){case"cardcontainer":return((container,components)=>({dom:{tag:"div",classes:["tox-collection__item-container","vertical"===container.direction?"tox-collection__item-container--column":"tox-collection__item-container--row","left"===container.align?"tox-collection__item-container--align-left":"tox-collection__item-container--align-right",(()=>{switch(container.valign){case"top":return"tox-collection__item-container--valign-top";case"middle":return"tox-collection__item-container--valign-middle";case"bottom":return"tox-collection__item-container--valign-bottom"}})()]},components:components}))(item,render$2(item.items,extras));case"cardimage":return((src,classes,alt)=>({dom:{tag:"img",classes:classes,attributes:{src:src,alt:alt.getOr("")}}}))(item.src,item.classes,item.alt);case"cardtext":const shouldHighlight=item.name.exists((name=>contains$2(extras.cardText.highlightOn,name))),matchText=shouldHighlight?Optional.from(extras.cardText.matchText).getOr(""):"";return renderHtml(replaceText(item.text,matchText),item.classes)}})),parts$f=generate$3(owner$2(),parts$h()),hexColour=value=>({value:normalizeHex(value)}),shorthandRegex=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,longformRegex=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,isHexString=hex=>shorthandRegex.test(hex)||longformRegex.test(hex),normalizeHex=hex=>removeLeading(hex,"#").toUpperCase(),extractValues=hex=>{const longForm=(hex=>{const hexString=hex.value.replace(shorthandRegex,((m,r,g,b)=>r+r+g+g+b+b));return{value:hexString}})(hex),splitForm=longformRegex.exec(longForm.value);return null===splitForm?["FFFFFF","FF","FF","FF"]:splitForm},toHex=component=>{const hex=component.toString(16);return(1===hex.length?"0"+hex:hex).toUpperCase()},fromRgba=rgbaColour=>{const value=toHex(rgbaColour.red)+toHex(rgbaColour.green)+toHex(rgbaColour.blue);return hexColour(value)},min=Math.min,max=Math.max,round$1=Math.round,rgbRegex=/^\s*rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)\s*$/i,rgbaRegex=/^\s*rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?(?:\.\d+)?)\s*\)\s*$/i,rgbaColour=(red,green,blue,alpha)=>({red:red,green:green,blue:blue,alpha:alpha}),isRgbaComponent=value=>{const num=parseInt(value,10);return num.toString()===value&&num>=0&&num<=255},fromHsv=hsv=>{let r,g,b;const hue=(hsv.hue||0)%360;let saturation=hsv.saturation/100,brightness=hsv.value/100;if(saturation=max(0,min(saturation,1)),brightness=max(0,min(brightness,1)),0===saturation)return r=g=b=round$1(255*brightness),rgbaColour(r,g,b,1);const side=hue/60,chroma=brightness*saturation,x=chroma*(1-Math.abs(side%2-1)),match=brightness-chroma;switch(Math.floor(side)){case 0:r=chroma,g=x,b=0;break;case 1:r=x,g=chroma,b=0;break;case 2:r=0,g=chroma,b=x;break;case 3:r=0,g=x,b=chroma;break;case 4:r=x,g=0,b=chroma;break;case 5:r=chroma,g=0,b=x;break;default:r=g=b=0}return r=round$1(255*(r+match)),g=round$1(255*(g+match)),b=round$1(255*(b+match)),rgbaColour(r,g,b,1)},fromHex=hexColour=>{const result=extractValues(hexColour),red=parseInt(result[1],16),green=parseInt(result[2],16),blue=parseInt(result[3],16);return rgbaColour(red,green,blue,1)},fromStringValues=(red,green,blue,alpha)=>{const r=parseInt(red,10),g=parseInt(green,10),b=parseInt(blue,10),a=parseFloat(alpha);return rgbaColour(r,g,b,a)},fromString=rgbaString=>{if("transparent"===rgbaString)return Optional.some(rgbaColour(0,0,0,0));const rgbMatch=rgbRegex.exec(rgbaString);if(null!==rgbMatch)return Optional.some(fromStringValues(rgbMatch[1],rgbMatch[2],rgbMatch[3],"1"));const rgbaMatch=rgbaRegex.exec(rgbaString);return null!==rgbaMatch?Optional.some(fromStringValues(rgbaMatch[1],rgbaMatch[2],rgbaMatch[3],rgbaMatch[4])):Optional.none()},toString=rgba=>`rgba(${rgba.red},${rgba.green},${rgba.blue},${rgba.alpha})`,red=rgbaColour(255,0,0,1),fireResizeContent=(editor,e)=>{editor.dispatch("ResizeContent",e)},fireTextColorChange=(editor,data)=>{editor.dispatch("TextColorChange",data)},fireResolveName=(editor,node)=>editor.dispatch("ResolveName",{name:node.nodeName.toLowerCase(),target:node}),composeUnbinders=(f,g)=>()=>{f(),g()},onSetupEditableToggle=editor=>onSetupEvent(editor,"NodeChange",(api=>{api.setEnabled(editor.selection.isEditable())})),onSetupStateToggle=(editor,name)=>api=>{const unbindEditableToogle=onSetupEditableToggle(editor)(api),unbindFormatToggle=((editor,name)=>api=>{const boundFormatChangeCallback=unbindable(),init=()=>{api.setActive(editor.formatter.match(name));const binding=editor.formatter.formatChanged(name,api.setActive);boundFormatChangeCallback.set(binding)};return editor.initialized?init():editor.once("init",init),()=>{editor.off("init",init),boundFormatChangeCallback.clear()}})(editor,name)(api);return()=>{unbindEditableToogle(),unbindFormatToggle()}},onSetupEvent=(editor,event,f)=>api=>{const handleEvent=()=>f(api),init=()=>{f(api),editor.on(event,handleEvent)};return editor.initialized?init():editor.once("init",init),()=>{editor.off("init",init),editor.off(event,handleEvent)}},onActionToggleFormat$1=editor=>rawItem=>()=>{editor.undoManager.transact((()=>{editor.focus(),editor.execCommand("mceToggleFormat",!1,rawItem.format)}))},onActionExecCommand=(editor,command)=>()=>editor.execCommand(command);var global$4=tinymce.util.Tools.resolve("tinymce.util.LocalStorage");const cacheStorage={},getCacheForId=id=>get$g(cacheStorage,id).getOrThunk((()=>{const storageId=`tinymce-custom-colors-${id}`,currentData=global$4.getItem(storageId);if(isNullable(currentData)){const legacyDefault=global$4.getItem("tinymce-custom-colors");global$4.setItem(storageId,isNonNullable(legacyDefault)?legacyDefault:"[]")}const storage=((storageId,max=10)=>{const storageString=global$4.getItem(storageId),localstorage=isString(storageString)?JSON.parse(storageString):[],cache=max-(list=localstorage).length<0?list.slice(0,max):list;var list;const remove=idx=>{cache.splice(idx,1)};return{add:key=>{indexOf(cache,key).each(remove),cache.unshift(key),cache.length>max&&cache.pop(),global$4.setItem(storageId,JSON.stringify(cache))},state:()=>cache.slice(0)}})(storageId,10);return cacheStorage[id]=storage,storage})),addColor=(id,color)=>{getCacheForId(id).add(color)},hsvColour=(hue,saturation,value)=>({hue:hue,saturation:saturation,value:value}),fromRgb=rgbaColour=>{let h=0,s=0,v=0;const r=rgbaColour.red/255,g=rgbaColour.green/255,b=rgbaColour.blue/255,minRGB=Math.min(r,Math.min(g,b)),maxRGB=Math.max(r,Math.max(g,b));if(minRGB===maxRGB)return v=minRGB,hsvColour(0,0,100*v);return h=r===minRGB?3:b===minRGB?1:5,h=60*(h-(r===minRGB?g-b:b===minRGB?r-g:b-r)/(maxRGB-minRGB)),s=(maxRGB-minRGB)/maxRGB,v=maxRGB,hsvColour(Math.round(h),Math.round(100*s),Math.round(100*v))},hsvToHex=hsv=>fromRgba(fromHsv(hsv)),anyToHex=color=>{return(hex=color,isHexString(hex)?Optional.some({value:normalizeHex(hex)}):Optional.none()).orThunk((()=>fromString(color).map(fromRgba))).getOrThunk((()=>{const canvas=document.createElement("canvas");canvas.height=1,canvas.width=1;const canvasContext=canvas.getContext("2d");canvasContext.clearRect(0,0,canvas.width,canvas.height),canvasContext.fillStyle="#FFFFFF",canvasContext.fillStyle=color,canvasContext.fillRect(0,0,1,1);const rgba=canvasContext.getImageData(0,0,1,1).data,r=rgba[0],g=rgba[1],b=rgba[2],a=rgba[3];return fromRgba(rgbaColour(r,g,b,a))}));var hex},mapColors=colorMap=>{const colors=[];for(let i=0;i<colorMap.length;i+=2)colors.push({text:colorMap[i+1],value:"#"+anyToHex(colorMap[i]).value,icon:"checkmark",type:"choiceitem"});return colors},option$1=name=>editor=>editor.options.get(name),getColors$2=(editor,id)=>"forecolor"===id&&editor.options.isSet("color_map_foreground")?option$1("color_map_foreground")(editor):"hilitecolor"===id&&editor.options.isSet("color_map_background")?option$1("color_map_background")(editor):option$1("color_map")(editor),calcCols=(editor,id="default")=>Math.max(5,Math.ceil(Math.sqrt(getColors$2(editor,id).length))),defaultCols=(editor,id)=>{const defaultCols=option$1("color_cols")(editor),calculatedCols=calcCols(editor,id);return defaultCols===calcCols(editor)?calculatedCols:defaultCols},getColorCols$1=(editor,id="default")=>Math.round("forecolor"===id?option$1("color_cols_foreground")(editor):"hilitecolor"===id?option$1("color_cols_background")(editor):option$1("color_cols")(editor)),hasCustomColors$1=option$1("custom_colors"),getDefaultForegroundColor=option$1("color_default_foreground"),getDefaultBackgroundColor=option$1("color_default_background"),getClosestCssBackgroundColorValue=scope=>closest$4(scope,(node=>{if(isElement$1(node)){const color=get$e(node,"background-color");return someIf((value=>fromString(value).exists((c=>0!==c.alpha)))(color),color)}return Optional.none()})).getOr("rgba(0, 0, 0, 0)"),getCurrentColor=(editor,format)=>{const node=SugarElement.fromDom(editor.selection.getStart()),cssRgbValue="hilitecolor"===format?getClosestCssBackgroundColorValue(node):get$e(node,"color");return fromString(cssRgbValue).map((rgba=>"#"+fromRgba(rgba).value))},getAdditionalColors=hasCustom=>{const remove={type:"choiceitem",text:"Remove color",icon:"color-swatch-remove-color",value:"remove"};return hasCustom?[remove,{type:"choiceitem",text:"Custom color",icon:"color-picker",value:"custom"}]:[remove]},applyColor=(editor,format,value,onChoice)=>{if("custom"===value){colorPickerDialog(editor)((colorOpt=>{colorOpt.each((color=>{addColor(format,color),editor.execCommand("mceApplyTextcolor",format,color),onChoice(color)}))}),getCurrentColor(editor,format).getOr("#000000"))}else"remove"===value?(onChoice(""),editor.execCommand("mceRemoveTextcolor",format)):(onChoice(value),editor.execCommand("mceApplyTextcolor",format,value))},getColors$1=(colors,id,hasCustom)=>colors.concat((id=>map$2(getCacheForId(id).state(),(color=>({type:"choiceitem",text:color,icon:"checkmark",value:color}))))(id).concat(getAdditionalColors(hasCustom))),getFetch$1=(colors,id,hasCustom)=>callback=>{callback(getColors$1(colors,id,hasCustom))},setIconColor=(splitButtonApi,name,newColor)=>{const id="forecolor"===name?"tox-icon-text-color__color":"tox-icon-highlight-bg-color__color";splitButtonApi.setIconFill(id,newColor)},setTooltip=(buttonApi,tooltip)=>{buttonApi.setTooltip(tooltip)},select$1=(editor,format)=>value=>{const optCurrentHex=getCurrentColor(editor,format);return is$1(optCurrentHex,value.toUpperCase())},getToolTipText=(editor,format,lastColor)=>{if(isEmpty(lastColor))return"forecolor"===format?"Text color":"Background color";const tooltipPrefix="forecolor"===format?"Text color {0}":"Background color {0}",colors=getColors$1(getColors$2(editor,format),format,!1),colorText=find$5(colors,(c=>c.value===lastColor)).getOr({text:""}).text;return editor.translate([tooltipPrefix,editor.translate(colorText)])},registerTextColorButton=(editor,name,format,lastColor)=>{editor.ui.registry.addSplitButton(name,{tooltip:getToolTipText(editor,format,lastColor.get()),presets:"color",icon:"forecolor"===name?"text-color":"highlight-bg-color",select:select$1(editor,format),columns:getColorCols$1(editor,format),fetch:getFetch$1(getColors$2(editor,format),format,hasCustomColors$1(editor)),onAction:_splitButtonApi=>{applyColor(editor,format,lastColor.get(),noop)},onItemAction:(_splitButtonApi,value)=>{applyColor(editor,format,value,(newColor=>{lastColor.set(newColor),fireTextColorChange(editor,{name:name,color:newColor})}))},onSetup:splitButtonApi=>{setIconColor(splitButtonApi,name,lastColor.get());const handler=e=>{e.name===name&&(setIconColor(splitButtonApi,e.name,e.color),setTooltip(splitButtonApi,getToolTipText(editor,format,e.color)))};return editor.on("TextColorChange",handler),composeUnbinders(onSetupEditableToggle(editor)(splitButtonApi),(()=>{editor.off("TextColorChange",handler)}))}})},registerTextColorMenuItem=(editor,name,format,text,lastColor)=>{editor.ui.registry.addNestedMenuItem(name,{text:text,icon:"forecolor"===name?"text-color":"highlight-bg-color",onSetup:api=>(setTooltip(api,getToolTipText(editor,format,lastColor.get())),setIconColor(api,name,lastColor.get()),onSetupEditableToggle(editor)(api)),getSubmenuItems:()=>[{type:"fancymenuitem",fancytype:"colorswatch",select:select$1(editor,format),initData:{storageKey:format},onAction:data=>{applyColor(editor,format,data.value,(newColor=>{lastColor.set(newColor),fireTextColorChange(editor,{name:name,color:newColor})}))}}]})},colorPickerDialog=editor=>(callback,value)=>{let isValid=!1;const initialData={colorpicker:value};editor.windowManager.open({title:"Color Picker",size:"normal",body:{type:"panel",items:[{type:"colorpicker",name:"colorpicker",label:"Color"}]},buttons:[{type:"cancel",name:"cancel",text:"Cancel"},{type:"submit",name:"save",text:"Save",primary:!0}],initialData:initialData,onAction:(_api,details)=>{"hex-valid"===details.name&&(isValid=details.value)},onSubmit:api=>{const hex=api.getData().colorpicker;isValid?(callback(Optional.from(hex)),api.close()):editor.windowManager.alert(editor.translate(["Invalid hex color code: {0}",hex]))},onClose:noop,onCancel:()=>{callback(Optional.none())}})},createPartialChoiceMenu=(value,items,onItemValueHandler,columns,presets,itemResponse,select,providersBackstage)=>{const hasIcons=menuHasIcons(items),alloyItems=createChoiceItems(items,onItemValueHandler,columns,"color"!==presets?"normal":"color",itemResponse,select,providersBackstage);return createPartialMenuWithAlloyItems(value,hasIcons,alloyItems,columns,{menuType:presets})},createChoiceItems=(items,onItemValueHandler,columns,itemPresets,itemResponse,select,providersBackstage)=>cat(map$2(items,(item=>{return"choiceitem"===item.type?(spec=item,asRaw("choicemenuitem",choiceMenuItemSchema,spec)).fold(handleError,(d=>Optional.some(((spec,useText,presets,onItemValueHandler,isSelected,itemResponse,providersBackstage,renderIcons=!0)=>{const structure=renderItemStructure({presets:presets,textContent:useText?spec.text:Optional.none(),htmlContent:Optional.none(),ariaLabel:spec.text,iconContent:spec.icon,shortcutContent:useText?spec.shortcut:Optional.none(),checkMark:useText?Optional.some(renderCheckmark(providersBackstage.icons)):Optional.none(),caret:Optional.none(),value:spec.value},providersBackstage,renderIcons);return deepMerge(renderCommonItem({data:buildData(spec),enabled:spec.enabled,getApi:component=>({setActive:state=>{Toggling.set(component,state)},isActive:()=>Toggling.isOn(component),isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state)}),onAction:_api=>onItemValueHandler(spec.value),onSetup:api=>(api.setActive(isSelected),noop),triggersSubmenu:!1,itemBehaviours:[]},structure,itemResponse,providersBackstage),{toggling:{toggleClass:"tox-collection__item--enabled",toggleOnExecute:!1,selected:spec.active,exclusive:!0}})})(d,1===columns,itemPresets,onItemValueHandler,select(d.value),itemResponse,providersBackstage,menuHasIcons(items))))):Optional.none();var spec}))),deriveMenuMovement=(columns,presets)=>{const menuMarkers=markers(presets);if(1===columns)return{mode:"menu",moveOnTab:!0};if("auto"===columns)return{mode:"grid",selector:"."+menuMarkers.item,initSize:{numColumns:1,numRows:1}};return{mode:"matrix",rowSelector:"."+("color"===presets?"tox-swatches__row":"tox-collection__group"),previousSelector:menu=>"color"===presets?descendant(menu.element,"[aria-checked=true]"):Optional.none()}},getColorItems=(spec,backstage)=>{const useCustomColors=spec.initData.allowCustomColors&&backstage.colorinput.hasCustomColors();return spec.initData.colors.fold((()=>getColors$1(backstage.colorinput.getColors(spec.initData.storageKey),spec.initData.storageKey,useCustomColors)),(colors=>colors.concat(getAdditionalColors(useCustomColors))))},cellOverEvent=generate$6("cell-over"),cellExecuteEvent=generate$6("cell-execute"),makeCell=(row,col,label)=>{const emitExecute=c=>emitWith(c,cellExecuteEvent,{row:row,col:col}),onClick=(c,se)=>{se.stop(),emitExecute(c)};return build$1({dom:{tag:"div",attributes:{role:"button","aria-label":label}},behaviours:derive$1([config("insert-table-picker-cell",[run$1(mouseover(),Focusing.focus),run$1(execute$5(),emitExecute),run$1(click(),onClick),run$1(tap(),onClick)]),Toggling.config({toggleClass:"tox-insert-table-picker__selected",toggleOnExecute:!1}),Focusing.config({onFocus:c=>emitWith(c,cellOverEvent,{row:row,col:col})})])})},makeComponents=cells=>bind$3(cells,(cellRow=>map$2(cellRow,premade))),makeLabelText=(row,col)=>text$2(`${col}x${row}`),fancyMenuItems={inserttable:(spec,backstage)=>{const getCellLabel=(backstage=>(row,col)=>backstage.shared.providers.translate(["{0} columns, {1} rows",col,row]))(backstage),cells=((getCellLabel,numRows,numCols)=>{const cells=[];for(let i=0;i<numRows;i++){const row=[];for(let j=0;j<numCols;j++){const label=getCellLabel(i+1,j+1);row.push(makeCell(i,j,label))}cells.push(row)}return cells})(getCellLabel,10,10),emptyLabelText=makeLabelText(0,0),memLabel=record({dom:{tag:"span",classes:["tox-insert-table-picker__label"]},components:[emptyLabelText],behaviours:derive$1([Replacing.config({})])});return{type:"widget",data:{value:generate$6("widget-id")},dom:{tag:"div",classes:["tox-fancymenuitem"]},autofocus:!0,components:[parts$f.widget({dom:{tag:"div",classes:["tox-insert-table-picker"]},components:makeComponents(cells).concat(memLabel.asSpec()),behaviours:derive$1([config("insert-table-picker",[runOnAttached((c=>{Replacing.set(memLabel.get(c),[emptyLabelText])})),runWithTarget(cellOverEvent,((c,t,e)=>{const{row:row,col:col}=e.event;((cells,selectedRow,selectedColumn,numRows,numColumns)=>{for(let i=0;i<numRows;i++)for(let j=0;j<numColumns;j++)Toggling.set(cells[i][j],i<=selectedRow&&j<=selectedColumn)})(cells,row,col,10,10),Replacing.set(memLabel.get(c),[makeLabelText(row+1,col+1)])})),runWithTarget(cellExecuteEvent,((c,_,e)=>{const{row:row,col:col}=e.event;spec.onAction({numRows:row+1,numColumns:col+1}),emit(c,sandboxClose())}))]),Keying.config({initSize:{numRows:10,numColumns:10},mode:"flatgrid",selector:'[role="button"]'})])})]}},colorswatch:(spec,backstage)=>{const items=getColorItems(spec,backstage),columns=backstage.colorinput.getColorCols(spec.initData.storageKey),menuSpec=createPartialChoiceMenu(generate$6("menu-value"),items,(value=>{spec.onAction({value:value})}),columns,"color",ItemResponse$1.CLOSE_ON_EXECUTE,spec.select.getOr(never),backstage.shared.providers),widgetSpec={...menuSpec,markers:markers("color"),movement:deriveMenuMovement(columns,"color")};return{type:"widget",data:{value:generate$6("widget-id")},dom:{tag:"div",classes:["tox-fancymenuitem"]},autofocus:!0,components:[parts$f.widget(Menu.sketch(widgetSpec))]}}},autocomplete=(spec,matchText,useText,presets,onItemValueHandler,itemResponse,sharedBackstage,renderIcons=!0)=>{const structure=renderItemStructure({presets:presets,textContent:Optional.none(),htmlContent:useText?spec.text.map((text=>replaceText(text,matchText))):Optional.none(),ariaLabel:spec.text,iconContent:spec.icon,shortcutContent:Optional.none(),checkMark:Optional.none(),caret:Optional.none(),value:spec.value},sharedBackstage.providers,renderIcons,spec.icon);return renderCommonItem({data:buildData(spec),enabled:spec.enabled,getApi:constant$1({}),onAction:_api=>onItemValueHandler(spec.value,spec.meta),onSetup:constant$1(noop),triggersSubmenu:!1,itemBehaviours:tooltipBehaviour(spec.meta,sharedBackstage)},structure,itemResponse,sharedBackstage.providers)},separator$3=spec=>({type:"separator",dom:{tag:"div",classes:["tox-collection__item","tox-collection__group-heading"]},components:spec.text.map(text$2).toArray()}),normal=(spec,itemResponse,providersBackstage,renderIcons=!0)=>{const structure=renderItemStructure({presets:"normal",iconContent:spec.icon,textContent:spec.text,htmlContent:Optional.none(),ariaLabel:spec.text,caret:Optional.none(),checkMark:Optional.none(),shortcutContent:spec.shortcut},providersBackstage,renderIcons);return renderCommonItem({data:buildData(spec),getApi:component=>({isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state)}),enabled:spec.enabled,onAction:spec.onAction,onSetup:spec.onSetup,triggersSubmenu:!1,itemBehaviours:[]},structure,itemResponse,providersBackstage)},nested=(spec,itemResponse,providersBackstage,renderIcons=!0,downwardsCaret=!1)=>{const caret=downwardsCaret?(icons=providersBackstage.icons,renderIcon$2("chevron-down",icons,["tox-collection__item-caret"])):(icons=>renderIcon$2("chevron-right",icons,["tox-collection__item-caret"]))(providersBackstage.icons);var icons;const structure=renderItemStructure({presets:"normal",iconContent:spec.icon,textContent:spec.text,htmlContent:Optional.none(),ariaLabel:spec.text,caret:Optional.some(caret),checkMark:Optional.none(),shortcutContent:spec.shortcut},providersBackstage,renderIcons);return renderCommonItem({data:buildData(spec),getApi:component=>({isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state),setIconFill:(id,value)=>{descendant(component.element,`svg path[class="${id}"], rect[class="${id}"]`).each((underlinePath=>{set$9(underlinePath,"fill",value)}))},setTooltip:tooltip=>{const translatedTooltip=providersBackstage.translate(tooltip);setAll$1(component.element,{"aria-label":translatedTooltip,title:translatedTooltip})}}),enabled:spec.enabled,onAction:noop,onSetup:spec.onSetup,triggersSubmenu:!0,itemBehaviours:[]},structure,itemResponse,providersBackstage)},toggle$1=(spec,itemResponse,providersBackstage,renderIcons=!0)=>{const structure=renderItemStructure({iconContent:spec.icon,textContent:spec.text,htmlContent:Optional.none(),ariaLabel:spec.text,checkMark:Optional.some(renderCheckmark(providersBackstage.icons)),caret:Optional.none(),shortcutContent:spec.shortcut,presets:"normal",meta:spec.meta},providersBackstage,renderIcons);return deepMerge(renderCommonItem({data:buildData(spec),enabled:spec.enabled,getApi:component=>({setActive:state=>{Toggling.set(component,state)},isActive:()=>Toggling.isOn(component),isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state)}),onAction:spec.onAction,onSetup:spec.onSetup,triggersSubmenu:!1,itemBehaviours:[]},structure,itemResponse,providersBackstage),{toggling:{toggleClass:"tox-collection__item--enabled",toggleOnExecute:!1,selected:spec.active}})},fancy=(spec,backstage)=>get$g(fancyMenuItems,spec.fancytype).map((render=>render(spec,backstage))),card=(spec,itemResponse,sharedBackstage,extras)=>{const structure={dom:renderItemDomStructure(spec.label),optComponents:[Optional.some({dom:{tag:"div",classes:["tox-collection__item-container","tox-collection__item-container--row"]},components:render$2(spec.items,extras)})]};return renderCommonItem({data:buildData({text:Optional.none(),...spec}),enabled:spec.enabled,getApi:component=>({isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>{Disabling.set(component,!state),each$1(descendants(component.element,"*"),(elm=>{component.getSystem().getByDom(elm).each((comp=>{comp.hasConfigured(Disabling)&&Disabling.set(comp,!state)}))}))}}),onAction:spec.onAction,onSetup:spec.onSetup,triggersSubmenu:!1,itemBehaviours:Optional.from(extras.itemBehaviours).getOr([])},structure,itemResponse,sharedBackstage.providers)};var CouplingApis=Object.freeze({__proto__:null,getCoupled:(component,coupleConfig,coupleState,name)=>coupleState.getOrCreate(component,coupleConfig,name),getExistingCoupled:(component,coupleConfig,coupleState,name)=>coupleState.getExisting(component,coupleConfig,name)}),CouplingSchema=[requiredOf("others",setOf(Result.value,anyValue()))];var CouplingState=Object.freeze({__proto__:null,init:()=>{const coupled={},lookupCoupled=(coupleConfig,coupledName)=>{if(0===keys(coupleConfig.others).length)throw new Error("Cannot find any known coupled components");return get$g(coupled,coupledName)},readState=constant$1({});return nu$8({readState:readState,getExisting:(component,coupleConfig,name)=>lookupCoupled(coupleConfig,name).orThunk((()=>(get$g(coupleConfig.others,name).getOrDie("No information found for coupled component: "+name),Optional.none()))),getOrCreate:(component,coupleConfig,name)=>lookupCoupled(coupleConfig,name).getOrThunk((()=>{const spec=get$g(coupleConfig.others,name).getOrDie("No information found for coupled component: "+name)(component),built=component.getSystem().build(spec);return coupled[name]=built,built}))})}});const Coupling=create$4({fields:CouplingSchema,name:"coupling",apis:CouplingApis,state:CouplingState}),nu$3=baseFn=>{let data=Optional.none(),callbacks=[];const get=nCallback=>{isReady()?call(nCallback):callbacks.push(nCallback)},isReady=()=>data.isSome(),run=cbs=>{each$1(cbs,call)},call=cb=>{data.each((x=>{setTimeout((()=>{cb(x)}),0)}))};return baseFn((x=>{isReady()||(data=Optional.some(x),run(callbacks),callbacks=[])})),{get:get,map:f=>nu$3((nCallback=>{get((data=>{nCallback(f(data))}))})),isReady:isReady}},LazyValue={nu:nu$3,pure:a=>nu$3((callback=>{callback(a)}))},errorReporter=err=>{setTimeout((()=>{throw err}),0)},make$5=run=>{const get=callback=>{run().then(callback,errorReporter)};return{map:fab=>make$5((()=>run().then(fab))),bind:aFutureB=>make$5((()=>run().then((v=>aFutureB(v).toPromise())))),anonBind:futureB=>make$5((()=>run().then((()=>futureB.toPromise())))),toLazy:()=>LazyValue.nu(get),toCached:()=>{let cache=null;return make$5((()=>(null===cache&&(cache=run()),cache)))},toPromise:run,get:get}},Future_nu=baseFn=>make$5((()=>new Promise(baseFn))),Future_pure=a=>make$5((()=>Promise.resolve(a))),suffix=constant$1("sink"),partType$1=constant$1(optional({name:suffix(),overrides:constant$1({dom:{tag:"div"},behaviours:derive$1([Positioning.config({useFixed:always})]),events:derive$2([cutter(keydown()),cutter(mousedown()),cutter(click())])})})),getAnchor=(detail,component)=>{const hotspot=detail.getHotspot(component).getOr(component),overrides=detail.getAnchorOverrides();return detail.layouts.fold((()=>({type:"hotspot",hotspot:hotspot,overrides:overrides})),(layouts=>({type:"hotspot",hotspot:hotspot,overrides:overrides,layouts:layouts})))},open=(detail,mapFetch,hotspot,sandbox,externals,onOpenSync,highlightOnOpen)=>{const processed=((detail,mapFetch,anchor,component,sandbox,externals,highlightOnOpen)=>{const futureData=((detail,mapFetch,component)=>(0,detail.fetch)(component).map(mapFetch))(detail,mapFetch,component),getLazySink=getSink(component,detail);return futureData.map((tdata=>tdata.bind((data=>Optional.from(tieredMenu.sketch({...externals.menu(),uid:generate$5(""),data:data,highlightOnOpen:highlightOnOpen,onOpenMenu:(tmenu,menu)=>{const sink=getLazySink().getOrDie();Positioning.position(sink,menu,{anchor:anchor}),Sandboxing.decloak(sandbox)},onOpenSubmenu:(tmenu,item,submenu)=>{const sink=getLazySink().getOrDie();Positioning.position(sink,submenu,{anchor:{type:"submenu",item:item}}),Sandboxing.decloak(sandbox)},onRepositionMenu:(tmenu,primaryMenu,submenuTriggers)=>{const sink=getLazySink().getOrDie();Positioning.position(sink,primaryMenu,{anchor:anchor}),each$1(submenuTriggers,(st=>{Positioning.position(sink,st.triggeredMenu,{anchor:{type:"submenu",item:st.triggeringItem}})}))},onEscape:()=>(Focusing.focus(component),Sandboxing.close(sandbox),Optional.some(!0))}))))))})(detail,mapFetch,getAnchor(detail,hotspot),hotspot,sandbox,externals,highlightOnOpen);return processed.map((tdata=>(tdata.fold((()=>{Sandboxing.isOpen(sandbox)&&Sandboxing.close(sandbox)}),(data=>{Sandboxing.cloak(sandbox),Sandboxing.open(sandbox,data),onOpenSync(sandbox)})),sandbox)))},close=(detail,mapFetch,component,sandbox,_externals,_onOpenSync,_highlightOnOpen)=>(Sandboxing.close(sandbox),Future_pure(sandbox)),togglePopup=(detail,mapFetch,hotspot,externals,onOpenSync,highlightOnOpen)=>{const sandbox=Coupling.getCoupled(hotspot,"sandbox");return(Sandboxing.isOpen(sandbox)?close:open)(detail,mapFetch,hotspot,sandbox,externals,onOpenSync,highlightOnOpen)},matchWidth=(hotspot,container,useMinWidth)=>{const menu=Composing.getCurrent(container).getOr(container),buttonWidth=get$c(hotspot.element);useMinWidth?set$8(menu.element,"min-width",buttonWidth+"px"):((element,h)=>{api$1.set(element,h)})(menu.element,buttonWidth)},getSink=(anyInSystem,sinkDetail)=>anyInSystem.getSystem().getByUid(sinkDetail.uid+"-"+suffix()).map((internalSink=>()=>Result.value(internalSink))).getOrThunk((()=>sinkDetail.lazySink.fold((()=>()=>Result.error(new Error("No internal sink is specified, nor could an external sink be found"))),(lazySinkFn=>()=>lazySinkFn(anyInSystem))))),doRepositionMenus=sandbox=>{Sandboxing.getState(sandbox).each((tmenu=>{tieredMenu.repositionMenus(tmenu)}))},makeSandbox$1=(detail,hotspot,extras)=>{const ariaControls=manager(),lazySink=getSink(hotspot,detail);return{dom:{tag:"div",classes:detail.sandboxClasses,attributes:{id:ariaControls.id,role:"listbox"}},behaviours:SketchBehaviours_augment(detail.sandboxBehaviours,[Representing.config({store:{mode:"memory",initialValue:hotspot}}),Sandboxing.config({onOpen:(component,menu)=>{const anchor=getAnchor(detail,hotspot);ariaControls.link(hotspot.element),detail.matchWidth&&matchWidth(anchor.hotspot,menu,detail.useMinWidth),detail.onOpen(anchor,component,menu),void 0!==extras&&void 0!==extras.onOpen&&extras.onOpen(component,menu)},onClose:(component,menu)=>{ariaControls.unlink(hotspot.element),void 0!==extras&&void 0!==extras.onClose&&extras.onClose(component,menu)},isPartOf:(container,data,queryElem)=>isPartOf$1(data,queryElem)||isPartOf$1(hotspot,queryElem),getAttachPoint:()=>lazySink().getOrDie()}),Composing.config({find:sandbox=>Sandboxing.getState(sandbox).bind((menu=>Composing.getCurrent(menu)))}),Receiving.config({channels:{...receivingChannel$1({isExtraPart:never}),...receivingChannel({doReposition:doRepositionMenus})}})])}},repositionMenus=comp=>{const sandbox=Coupling.getCoupled(comp,"sandbox");doRepositionMenus(sandbox)},sandboxFields=()=>[defaulted("sandboxClasses",[]),SketchBehaviours_field("sandboxBehaviours",[Composing,Receiving,Sandboxing,Representing])],schema$k=constant$1([required$1("dom"),required$1("fetch"),onHandler("onOpen"),onKeyboardHandler("onExecute"),defaulted("getHotspot",Optional.some),defaulted("getAnchorOverrides",constant$1({})),schema$y(),field("dropdownBehaviours",[Toggling,Coupling,Keying,Focusing]),required$1("toggleClass"),defaulted("eventOrder",{}),option$3("lazySink"),defaulted("matchWidth",!1),defaulted("useMinWidth",!1),option$3("role")].concat(sandboxFields())),parts$e=constant$1([external({schema:[tieredMenuMarkers(),defaulted("fakeFocus",!1)],name:"menu",defaults:detail=>({onExecute:detail.onExecute})}),partType$1()]),Dropdown=composite({name:"Dropdown",configFields:schema$k(),partFields:parts$e(),factory:(detail,components,_spec,externals)=>{const switchToMenu=sandbox=>{Sandboxing.getState(sandbox).each((tmenu=>{tieredMenu.highlightPrimary(tmenu)}))},togglePopup$1=(dropdownComp,onOpenSync,highlightOnOpen)=>togglePopup(detail,identity,dropdownComp,externals,onOpenSync,highlightOnOpen),apis={expand:comp=>{Toggling.isOn(comp)||togglePopup$1(comp,noop,HighlightOnOpen.HighlightNone).get(noop)},open:comp=>{Toggling.isOn(comp)||togglePopup$1(comp,noop,HighlightOnOpen.HighlightMenuAndItem).get(noop)},refetch:comp=>Coupling.getExistingCoupled(comp,"sandbox").fold((()=>togglePopup$1(comp,noop,HighlightOnOpen.HighlightMenuAndItem).map(noop)),(sandboxComp=>open(detail,identity,comp,sandboxComp,externals,noop,HighlightOnOpen.HighlightMenuAndItem).map(noop))),isOpen:Toggling.isOn,close:comp=>{Toggling.isOn(comp)&&togglePopup$1(comp,noop,HighlightOnOpen.HighlightMenuAndItem).get(noop)},repositionMenus:comp=>{Toggling.isOn(comp)&&repositionMenus(comp)}},triggerExecute=(comp,_se)=>(emitExecute(comp),Optional.some(!0));return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.dropdownBehaviours,[Toggling.config({toggleClass:detail.toggleClass,aria:{mode:"expanded"}}),Coupling.config({others:{sandbox:hotspot=>makeSandbox$1(detail,hotspot,{onOpen:()=>Toggling.on(hotspot),onClose:()=>Toggling.off(hotspot)})}}),Keying.config({mode:"special",onSpace:triggerExecute,onEnter:triggerExecute,onDown:(comp,_se)=>{if(Dropdown.isOpen(comp)){const sandbox=Coupling.getCoupled(comp,"sandbox");switchToMenu(sandbox)}else Dropdown.open(comp);return Optional.some(!0)},onEscape:(comp,_se)=>Dropdown.isOpen(comp)?(Dropdown.close(comp),Optional.some(!0)):Optional.none()}),Focusing.config({})]),events:events$a(Optional.some((component=>{togglePopup$1(component,switchToMenu,HighlightOnOpen.HighlightMenuAndItem).get(noop)}))),eventOrder:{...detail.eventOrder,[execute$5()]:["disabling","toggling","alloy.base.behaviour"]},apis:apis,domModification:{attributes:{"aria-haspopup":"true",...detail.role.fold((()=>({})),(role=>({role:role}))),..."button"===detail.dom.tag?{type:(attr="type",get$g(detail.dom,"attributes").bind((attrs=>get$g(attrs,attr)))).getOr("button")}:{}}}};var attr},apis:{open:(apis,comp)=>apis.open(comp),refetch:(apis,comp)=>apis.refetch(comp),expand:(apis,comp)=>apis.expand(comp),close:(apis,comp)=>apis.close(comp),isOpen:(apis,comp)=>apis.isOpen(comp),repositionMenus:(apis,comp)=>apis.repositionMenus(comp)}}),handleRefetchTrigger=originalSandboxComp=>{const dropdown=Representing.getValue(originalSandboxComp),optSearcherState=findWithinSandbox(originalSandboxComp).map(saveState);Dropdown.refetch(dropdown).get((()=>{const newSandboxComp=Coupling.getCoupled(dropdown,"sandbox");optSearcherState.each((searcherState=>findWithinSandbox(newSandboxComp).each((inputComp=>((inputComp,searcherState)=>{Representing.setValue(inputComp,searcherState.fetchPattern),inputComp.element.dom.selectionStart=searcherState.selectionStart,inputComp.element.dom.selectionEnd=searcherState.selectionEnd})(inputComp,searcherState)))))}))},getActiveMenuItemFrom=sandboxComp=>Sandboxing.getState(sandboxComp).bind(Highlighting.getHighlighted).bind(Highlighting.getHighlighted),updateAriaOnHighlight=(tmenuComp,menuComp,itemComp)=>{findWithinMenu(tmenuComp).each((inputComp=>{((inputComp,active)=>{getOpt(active.element,"id").each((id=>set$9(inputComp.element,"aria-activedescendant",id)))})(inputComp,itemComp);var activeMenuComp;(has((activeMenuComp=menuComp).element,searchResultsClass)?Optional.some(activeMenuComp.element):descendant(activeMenuComp.element,"."+searchResultsClass)).each((resultsElem=>{getOpt(resultsElem,"id").each((controlledId=>set$9(inputComp.element,"aria-controls",controlledId)))}))})),set$9(itemComp.element,"aria-selected","true")},updateAriaOnDehighlight=(tmenuComp,menuComp,itemComp)=>{set$9(itemComp.element,"aria-selected","false")},getSearchPattern=dropdownComp=>Coupling.getExistingCoupled(dropdownComp,"sandbox").bind(findWithinSandbox).map(saveState).map((state=>state.fetchPattern)).getOr("");var FocusMode;!function(FocusMode){FocusMode[FocusMode.ContentFocus=0]="ContentFocus",FocusMode[FocusMode.UiFocus=1]="UiFocus"}(FocusMode||(FocusMode={}));const createMenuItemFromBridge=(item,itemResponse,backstage,menuHasIcons,isHorizontalMenu)=>{const providersBackstage=backstage.shared.providers,parseForHorizontalMenu=menuitem=>isHorizontalMenu?{...menuitem,shortcut:Optional.none(),icon:menuitem.text.isSome()?Optional.none():menuitem.icon}:menuitem;switch(item.type){case"menuitem":return(spec=item,asRaw("menuitem",menuItemSchema,spec)).fold(handleError,(d=>Optional.some(normal(parseForHorizontalMenu(d),itemResponse,providersBackstage,menuHasIcons))));case"nestedmenuitem":return(spec=>asRaw("nestedmenuitem",nestedMenuItemSchema,spec))(item).fold(handleError,(d=>Optional.some(nested(parseForHorizontalMenu(d),itemResponse,providersBackstage,menuHasIcons,isHorizontalMenu))));case"togglemenuitem":return(spec=>asRaw("togglemenuitem",toggleMenuItemSchema,spec))(item).fold(handleError,(d=>Optional.some(toggle$1(parseForHorizontalMenu(d),itemResponse,providersBackstage,menuHasIcons))));case"separator":return(spec=>asRaw("separatormenuitem",separatorMenuItemSchema,spec))(item).fold(handleError,(d=>Optional.some(separator$3(d))));case"fancymenuitem":return(spec=>asRaw("fancymenuitem",fancyMenuItemSchema,spec))(item).fold(handleError,(d=>fancy(d,backstage)));default:return console.error("Unknown item in general menu",item),Optional.none()}var spec},createAutocompleteItems=(items,matchText,onItemValueHandler,columns,itemResponse,sharedBackstage,highlightOn)=>{const renderText=1===columns,renderIcons=!renderText||menuHasIcons(items);return cat(map$2(items,(item=>{switch(item.type){case"separator":return(spec=item,asRaw("Autocompleter.Separator",separatorMenuItemSchema,spec)).fold(handleError,(d=>Optional.some(separator$3(d))));case"cardmenuitem":return(spec=>asRaw("cardmenuitem",cardMenuItemSchema,spec))(item).fold(handleError,(d=>Optional.some(card({...d,onAction:api=>{d.onAction(api),onItemValueHandler(d.value,d.meta)}},itemResponse,sharedBackstage,{itemBehaviours:tooltipBehaviour(d.meta,sharedBackstage),cardText:{matchText:matchText,highlightOn:highlightOn}}))));default:return(spec=>asRaw("Autocompleter.Item",autocompleterItemSchema,spec))(item).fold(handleError,(d=>Optional.some(autocomplete(d,matchText,renderText,"normal",onItemValueHandler,itemResponse,sharedBackstage,renderIcons))))}var spec})))},createPartialMenu=(value,items,itemResponse,backstage,isHorizontalMenu,searchMode)=>{const hasIcons=menuHasIcons(items),alloyItems=cat(map$2(items,(item=>{const createItem=i=>createMenuItemFromBridge(i,itemResponse,backstage,(i=>isHorizontalMenu?!has$2(i,"text"):hasIcons)(i),isHorizontalMenu);return"nestedmenuitem"===item.type&&item.getSubmenuItems().length<=0?createItem({...item,enabled:!1}):createItem(item)}))),menuLayout=(searchMode=>"no-search"===searchMode.searchMode?{menuType:"normal"}:{menuType:"searchable",searchMode:searchMode})(searchMode);return(isHorizontalMenu?createHorizontalPartialMenuWithAlloyItems:createPartialMenuWithAlloyItems)(value,hasIcons,alloyItems,1,menuLayout)},createTieredDataFrom=partialMenu=>tieredMenu.singleData(partialMenu.value,partialMenu),Autocompleter_register=(editor,sharedBackstage)=>{const autocompleterId=generate$6("autocompleter"),processingAction=Cell(!1),activeState=Cell(!1),autocompleter=build$1(InlineView.sketch({dom:{tag:"div",classes:["tox-autocompleter"],attributes:{id:autocompleterId}},components:[],fireDismissalEventInstead:{},inlineBehaviours:derive$1([config("dismissAutocompleter",[run$1(dismissRequested(),(()=>cancelIfNecessary())),run$1(highlight$1(),((_,se)=>{getOpt(se.event.target,"id").each((id=>set$9(SugarElement.fromDom(editor.getBody()),"aria-activedescendant",id)))}))])]),lazySink:sharedBackstage.getSink})),isMenuOpen=()=>InlineView.isOpen(autocompleter),isActive=activeState.get,hideIfNecessary=()=>{if(isMenuOpen()){InlineView.hide(autocompleter),editor.dom.remove(autocompleterId,!1);const editorBody=SugarElement.fromDom(editor.getBody());getOpt(editorBody,"aria-owns").filter((ariaOwnsAttr=>ariaOwnsAttr===autocompleterId)).each((()=>{remove$7(editorBody,"aria-owns"),remove$7(editorBody,"aria-activedescendant")}))}},getMenu=()=>InlineView.getContent(autocompleter).bind((tmenu=>get$h(tmenu.components(),0))),cancelIfNecessary=()=>editor.execCommand("mceAutocompleterClose"),getCombinedItems=matches=>{const columns=findMap(matches,(m=>Optional.from(m.columns))).getOr(1);return bind$3(matches,(match=>{const choices=match.items;return createAutocompleteItems(choices,match.matchText,((itemValue,itemMeta)=>{const nr=editor.selection.getRng();((dom,initRange)=>detect$1(SugarElement.fromDom(initRange.startContainer)).map((elm=>{const range=dom.createRng();return range.selectNode(elm.dom),range})))(editor.dom,nr).each((range=>{const autocompleterApi={hide:()=>cancelIfNecessary(),reload:fetchOptions=>{hideIfNecessary(),editor.execCommand("mceAutocompleterReload",!1,{fetchOptions:fetchOptions})}};processingAction.set(!0),match.onAction(autocompleterApi,range,itemValue,itemMeta),processingAction.set(!1)}))}),columns,ItemResponse$1.BUBBLE_TO_SANDBOX,sharedBackstage,match.highlightOn)}))},display=(lookupData,items)=>{var elm;(elm=SugarElement.fromDom(editor.getBody()),descendant(elm,"[data-mce-autocompleter]")).each((element=>{const columns=findMap(lookupData,(ld=>Optional.from(ld.columns))).getOr(1);InlineView.showMenuAt(autocompleter,{anchor:{type:"node",root:SugarElement.fromDom(editor.getBody()),node:Optional.from(element)}},((partialMenu,columns,focusMode,presets)=>{const movement=deriveMenuMovement(columns,presets),menuMarkers=markers(presets);return{data:createTieredDataFrom({...partialMenu,movement:movement,menuBehaviours:SimpleBehaviours_unnamedEvents("auto"!==columns?[]:[runOnAttached(((comp,_se)=>{detectSize(comp,4,menuMarkers.item).each((({numColumns:numColumns,numRows:numRows})=>{Keying.setGridSize(comp,numRows,numColumns)}))}))])}),menu:{markers:markers(presets),fakeFocus:focusMode===FocusMode.ContentFocus}}})(createPartialMenuWithAlloyItems("autocompleter-value",!0,items,columns,{menuType:"normal"}),columns,FocusMode.ContentFocus,"normal"))})),getMenu().each(Highlighting.highlightFirst)},updateDisplay=lookupData=>{const combinedItems=getCombinedItems(lookupData);combinedItems.length>0?(display(lookupData,combinedItems),set$9(SugarElement.fromDom(editor.getBody()),"aria-owns",autocompleterId),editor.inline||cloneAutocompleterToEditorDoc()):hideIfNecessary()},cloneAutocompleterToEditorDoc=()=>{editor.dom.get(autocompleterId)&&editor.dom.remove(autocompleterId,!1);const docElm=editor.getDoc().documentElement,selection=editor.selection.getNode(),newElm=(original=>clone$1(original,!0))(autocompleter.element);setAll(newElm,{border:"0",clip:"rect(0 0 0 0)",height:"1px",margin:"-1px",overflow:"hidden",padding:"0",position:"absolute",width:"1px",top:`${selection.offsetTop}px`,left:`${selection.offsetLeft}px`}),editor.dom.add(docElm,newElm.dom),descendant(newElm,'[role="menu"]').each((child=>{remove$6(child,"position"),remove$6(child,"max-height")}))};editor.on("AutocompleterStart",(({lookupData:lookupData})=>{activeState.set(!0),processingAction.set(!1),updateDisplay(lookupData)})),editor.on("AutocompleterUpdate",(({lookupData:lookupData})=>updateDisplay(lookupData))),editor.on("AutocompleterEnd",(()=>{hideIfNecessary(),activeState.set(!1),processingAction.set(!1)}));const autocompleterUiApi={cancelIfNecessary:cancelIfNecessary,isMenuOpen:isMenuOpen,isActive:isActive,isProcessingAction:processingAction.get,getMenu:getMenu};AutocompleterEditorEvents_setup(autocompleterUiApi,editor)},nonScrollingOverflows=["visible","hidden","clip"],isScrollingOverflowValue=value=>trim$1(value).length>0&&!contains$2(nonScrollingOverflows,value),isScroller=elem=>{if(isHTMLElement(elem)){const overflowX=get$e(elem,"overflow-x"),overflowY=get$e(elem,"overflow-y");return isScrollingOverflowValue(overflowX)||isScrollingOverflowValue(overflowY)}return!1},detectWhenSplitUiMode=(editor,popupSinkElem)=>isSplitUiMode(editor)?(popupSinkElem=>{const ancestorsScrollers=ancestors(popupSinkElem,isScroller),scrollers=0===ancestorsScrollers.length?getShadowRoot(popupSinkElem).map(getShadowHost).map((x=>ancestors(x,isScroller))).getOr([]):ancestorsScrollers;return head(scrollers).map((element=>({element:element,others:scrollers.slice(1)})))})(popupSinkElem):Optional.none(),getBoundsFrom=sc=>{const scrollableBoxes=[...map$2(sc.others,box$1),win()];return((original,constraints)=>foldl(constraints,((acc,c)=>constrain(acc,c)),original))(box$1(sc.element),scrollableBoxes)},closest=(scope,selector,isRoot)=>closest$1(scope,selector,isRoot).isSome(),DelayedFunction=(fun,delay)=>{let ref=null;return{cancel:()=>{null!==ref&&(clearTimeout(ref),ref=null)},schedule:(...args)=>{ref=setTimeout((()=>{fun.apply(null,args),ref=null}),delay)}}},getTouch=event=>{const raw=event.raw;return void 0===raw.touches||1!==raw.touches.length?Optional.none():Optional.some(raw.touches[0])},monitor=settings=>{const startData=value$2(),longpressFired=Cell(!1),longpress$1=DelayedFunction((event=>{settings.triggerEvent(longpress(),event),longpressFired.set(!0)}),400),handlers=wrapAll([{key:touchstart(),value:event=>(getTouch(event).each((touch=>{longpress$1.cancel();const data={x:touch.clientX,y:touch.clientY,target:event.target};longpress$1.schedule(event),longpressFired.set(!1),startData.set(data)})),Optional.none())},{key:touchmove(),value:event=>(longpress$1.cancel(),getTouch(event).each((touch=>{startData.on((data=>{((touch,data)=>{const distX=Math.abs(touch.clientX-data.x),distY=Math.abs(touch.clientY-data.y);return distX>5||distY>5})(touch,data)&&startData.clear()}))})),Optional.none())},{key:touchend(),value:event=>{longpress$1.cancel();return startData.get().filter((data=>eq(data.target,event.target))).map((_data=>longpressFired.get()?(event.prevent(),!1):settings.triggerEvent(tap(),event)))}}]);return{fireIfReady:(event,type)=>get$g(handlers,type).bind((handler=>handler(event)))}},setup$d=(container,rawSettings)=>{const settings={stopBackspace:!0,...rawSettings},tapEvent=monitor(settings),simpleEvents=map$2(["touchstart","touchmove","touchend","touchcancel","gesturestart","mousedown","mouseup","mouseover","mousemove","mouseout","click"].concat(["selectstart","input","contextmenu","change","transitionend","transitioncancel","drag","dragstart","dragend","dragenter","dragleave","dragover","drop","keyup"]),(type=>bind(container,type,(event=>{tapEvent.fireIfReady(event,type).each((tapStopped=>{tapStopped&&event.kill()}));settings.triggerEvent(type,event)&&event.kill()})))),pasteTimeout=value$2(),onPaste=bind(container,"paste",(event=>{tapEvent.fireIfReady(event,"paste").each((tapStopped=>{tapStopped&&event.kill()}));settings.triggerEvent("paste",event)&&event.kill(),pasteTimeout.set(setTimeout((()=>{settings.triggerEvent(postPaste(),event)}),0))})),onKeydown=bind(container,"keydown",(event=>{settings.triggerEvent("keydown",event)?event.kill():settings.stopBackspace&&(event=>event.raw.which===BACKSPACE[0]&&!contains$2(["input","textarea"],name$3(event.target))&&!closest(event.target,'[contenteditable="true"]'))(event)&&event.prevent()})),onFocusIn=bind(container,"focusin",(event=>{settings.triggerEvent("focusin",event)&&event.kill()})),focusoutTimeout=value$2(),onFocusOut=bind(container,"focusout",(event=>{settings.triggerEvent("focusout",event)&&event.kill(),focusoutTimeout.set(setTimeout((()=>{settings.triggerEvent(postBlur(),event)}),0))}));return{unbind:()=>{each$1(simpleEvents,(e=>{e.unbind()})),onKeydown.unbind(),onFocusIn.unbind(),onFocusOut.unbind(),onPaste.unbind(),pasteTimeout.on(clearTimeout),focusoutTimeout.on(clearTimeout)}}},derive=(rawEvent,rawTarget)=>{const source=get$g(rawEvent,"target").getOr(rawTarget);return Cell(source)},adt$1=Adt_generate([{stopped:[]},{resume:["element"]},{complete:[]}]),doTriggerHandler=(lookup,eventType,rawEvent,target,source,logger)=>{const handler=lookup(eventType,target),simulatedEvent=((event,source)=>{const stopper=Cell(!1),cutter=Cell(!1);return{stop:()=>{stopper.set(!0)},cut:()=>{cutter.set(!0)},isStopped:stopper.get,isCut:cutter.get,event:event,setSource:source.set,getSource:source.get}})(rawEvent,source);return handler.fold((()=>(logger.logEventNoHandlers(eventType,target),adt$1.complete())),(handlerInfo=>{const descHandler=handlerInfo.descHandler;return getCurried(descHandler)(simulatedEvent),simulatedEvent.isStopped()?(logger.logEventStopped(eventType,handlerInfo.element,descHandler.purpose),adt$1.stopped()):simulatedEvent.isCut()?(logger.logEventCut(eventType,handlerInfo.element,descHandler.purpose),adt$1.complete()):parent(handlerInfo.element).fold((()=>(logger.logNoParent(eventType,handlerInfo.element,descHandler.purpose),adt$1.complete())),(parent=>(logger.logEventResponse(eventType,handlerInfo.element,descHandler.purpose),adt$1.resume(parent))))}))},doTriggerOnUntilStopped=(lookup,eventType,rawEvent,rawTarget,source,logger)=>doTriggerHandler(lookup,eventType,rawEvent,rawTarget,source,logger).fold(always,(parent=>doTriggerOnUntilStopped(lookup,eventType,rawEvent,parent,source,logger)),never),broadcast=(listeners,rawEvent,_logger)=>{const simulatedEvent=(event=>{const stopper=Cell(!1);return{stop:()=>{stopper.set(!0)},cut:noop,isStopped:stopper.get,isCut:never,event:event,setSource:die("Cannot set source of a broadcasted event"),getSource:die("Cannot get source of a broadcasted event")}})(rawEvent);return each$1(listeners,(listener=>{const descHandler=listener.descHandler;getCurried(descHandler)(simulatedEvent)})),simulatedEvent.isStopped()},triggerOnUntilStopped=(lookup,eventType,rawEvent,rawTarget,logger)=>{const source=derive(rawEvent,rawTarget);return doTriggerOnUntilStopped(lookup,eventType,rawEvent,rawTarget,source,logger)},EventRegistry=()=>{const registry={};return{registerId:(extraArgs,id,events)=>{each(events,((v,k)=>{const handlers=void 0!==registry[k]?registry[k]:{};handlers[id]=((descHandler,extraArgs)=>{return handler=curry.apply(void 0,[descHandler.handler].concat(extraArgs)),purpose=descHandler.purpose,{cHandler:handler,purpose:purpose};var handler,purpose})(v,extraArgs),registry[k]=handlers}))},unregisterId:id=>{each(registry,((handlersById,_eventName)=>{has$2(handlersById,id)&&delete handlersById[id]}))},filterByType:type=>get$g(registry,type).map((handlers=>mapToArray(handlers,((f,id)=>((id,handler)=>({id:id,descHandler:handler}))(id,f))))).getOr([]),find:(isAboveRoot,type,target)=>get$g(registry,type).bind((handlers=>closest$4(target,(elem=>((handlers,elem)=>read$1(elem).bind((id=>get$g(handlers,id))).map((descHandler=>((element,descHandler)=>({element:element,descHandler:descHandler}))(elem,descHandler))))(handlers,elem)),isAboveRoot)))}},Registry=()=>{const events=EventRegistry(),components={},readOrTag=component=>{const elem=component.element;return read$1(elem).getOrThunk((()=>((label,elem)=>{const id=generate$6(prefix+label);return writeOnly(elem,id),id})("uid-",component.element)))},unregister=component=>{read$1(component.element).each((tagId=>{delete components[tagId],events.unregisterId(tagId)}))};return{find:(isAboveRoot,type,target)=>events.find(isAboveRoot,type,target),filter:type=>events.filterByType(type),register:component=>{const tagId=readOrTag(component);hasNonNullableKey(components,tagId)&&((component,tagId)=>{const conflict=components[tagId];if(conflict!==component)throw new Error('The tagId "'+tagId+'" is already used by: '+element(conflict.element)+"\nCannot use it for: "+element(component.element)+"\nThe conflicting element is"+(inBody(conflict.element)?" ":" not ")+"already in the DOM");unregister(component)})(component,tagId);const extraArgs=[component];events.registerId(extraArgs,tagId,component.events),components[tagId]=component},unregister:unregister,getById:id=>get$g(components,id)}},Container=single({name:"Container",factory:detail=>{const{attributes:attributes,...domWithoutAttributes}=detail.dom;return{uid:detail.uid,dom:{tag:"div",attributes:{role:"presentation",...attributes},...domWithoutAttributes},components:detail.components,behaviours:get$3(detail.containerBehaviours),events:detail.events,domModification:detail.domModification,eventOrder:detail.eventOrder}},configFields:[defaulted("components",[]),field("containerBehaviours",[]),defaulted("events",{}),defaulted("domModification",{}),defaulted("eventOrder",{})]}),takeover=root=>{const isAboveRoot=el=>parent(root.element).fold(always,(parent=>eq(el,parent))),registry=Registry(),lookup=(eventName,target)=>registry.find(isAboveRoot,eventName,target),domEvents=setup$d(root.element,{triggerEvent:(eventName,event)=>monitorEvent(eventName,event.target,(logger=>((lookup,eventType,rawEvent,logger)=>triggerOnUntilStopped(lookup,eventType,rawEvent,rawEvent.target,logger))(lookup,eventName,event,logger)))}),systemApi={debugInfo:constant$1("real"),triggerEvent:(eventName,target,data)=>{monitorEvent(eventName,target,(logger=>triggerOnUntilStopped(lookup,eventName,data,target,logger)))},triggerFocus:(target,originator)=>{read$1(target).fold((()=>{focus$3(target)}),(_alloyId=>{monitorEvent(focus$4(),target,(logger=>(((lookup,eventType,rawEvent,target,logger)=>{const source=derive(rawEvent,target);doTriggerHandler(lookup,eventType,rawEvent,target,source,logger)})(lookup,focus$4(),{originator:originator,kill:noop,prevent:noop,target:target},target,logger),!1)))}))},triggerEscape:(comp,simulatedEvent)=>{systemApi.triggerEvent("keydown",comp.element,simulatedEvent.event)},getByUid:uid=>getByUid(uid),getByDom:elem=>getByDom(elem),build:build$1,buildOrPatch:buildOrPatch,addToGui:c=>{add(c)},removeFromGui:c=>{remove(c)},addToWorld:c=>{addToWorld(c)},removeFromWorld:c=>{removeFromWorld(c)},broadcast:message=>{broadcast$1(message)},broadcastOn:(channels,message)=>{broadcastOn(channels,message)},broadcastEvent:(eventName,event)=>{broadcastEvent(eventName,event)},isConnected:always},addToWorld=component=>{component.connect(systemApi),isText(component.element)||(registry.register(component),each$1(component.components(),addToWorld),systemApi.triggerEvent(systemInit(),component.element,{target:component.element}))},removeFromWorld=component=>{isText(component.element)||(each$1(component.components(),removeFromWorld),registry.unregister(component)),component.disconnect()},add=component=>{attach(root,component)},remove=component=>{detach(component)},broadcastData=data=>{const receivers=registry.filter(receive());each$1(receivers,(receiver=>{const descHandler=receiver.descHandler;getCurried(descHandler)(data)}))},broadcast$1=message=>{broadcastData({universal:!0,data:message})},broadcastOn=(channels,message)=>{broadcastData({universal:!1,channels:channels,data:message})},broadcastEvent=(eventName,event)=>{const listeners=registry.filter(eventName);return broadcast(listeners,event)},getByUid=uid=>registry.getById(uid).fold((()=>Result.error(new Error('Could not find component with uid: "'+uid+'" in system.'))),Result.value),getByDom=elem=>{const uid=read$1(elem).getOr("not found");return getByUid(uid)};return addToWorld(root),{root:root,element:root.element,destroy:()=>{domEvents.unbind(),remove$5(root.element)},add:add,remove:remove,getByUid:getByUid,getByDom:getByDom,addToWorld:addToWorld,removeFromWorld:removeFromWorld,broadcast:broadcast$1,broadcastOn:broadcastOn,broadcastEvent:broadcastEvent}},schema$j=constant$1([defaulted("prefix","form-field"),field("fieldBehaviours",[Composing,Representing])]),parts$d=constant$1([optional({schema:[required$1("dom")],name:"label"}),optional({factory:{sketch:spec=>({uid:spec.uid,dom:{tag:"span",styles:{display:"none"},attributes:{"aria-hidden":"true"},innerHtml:spec.text}})},schema:[required$1("text")],name:"aria-descriptor"}),required({factory:{sketch:spec=>{const excludeFactory=exclude(spec,["factory"]);return spec.factory.sketch(excludeFactory)}},schema:[required$1("factory")],name:"field"})]),FormField=composite({name:"FormField",configFields:schema$j(),partFields:parts$d(),factory:(detail,components,_spec,_externals)=>{const behaviours=augment(detail.fieldBehaviours,[Composing.config({find:container=>getPart(container,detail,"field")}),Representing.config({store:{mode:"manual",getValue:field=>Composing.getCurrent(field).bind(Representing.getValue),setValue:(field,value)=>{Composing.getCurrent(field).each((current=>{Representing.setValue(current,value)}))}}})]),events=derive$2([runOnAttached(((component,_simulatedEvent)=>{const ps=getParts(component,detail,["label","field","aria-descriptor"]);ps.field().each((field=>{const id=generate$6(detail.prefix);ps.label().each((label=>{set$9(label.element,"for",id),set$9(field.element,"id",id)})),ps["aria-descriptor"]().each((descriptor=>{const descriptorId=generate$6(detail.prefix);set$9(descriptor.element,"id",descriptorId),set$9(field.element,"aria-describedby",descriptorId)}))}))}))]),apis={getField:container=>getPart(container,detail,"field"),getLabel:container=>getPart(container,detail,"label")};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:behaviours,events:events,apis:apis}},apis:{getField:(apis,comp)=>apis.getField(comp),getLabel:(apis,comp)=>apis.getLabel(comp)}});var ActiveTabstopping=Object.freeze({__proto__:null,exhibit:(base,tabConfig)=>nu$7({attributes:wrapAll([{key:tabConfig.tabAttr,value:"true"}])})}),TabstopSchema=[defaulted("tabAttr","data-alloy-tabstop")];const Tabstopping=create$4({fields:TabstopSchema,name:"tabstopping",active:ActiveTabstopping});var global$3=tinymce.util.Tools.resolve("tinymce.html.Entities");const renderFormFieldWith=(pLabel,pField,extraClasses,extraBehaviours)=>{const spec=renderFormFieldSpecWith(pLabel,pField,extraClasses,extraBehaviours);return FormField.sketch(spec)},renderFormFieldSpecWith=(pLabel,pField,extraClasses,extraBehaviours)=>({dom:renderFormFieldDomWith(extraClasses),components:pLabel.toArray().concat([pField]),fieldBehaviours:derive$1(extraBehaviours)}),renderFormFieldDomWith=extraClasses=>({tag:"div",classes:["tox-form__group"].concat(extraClasses)}),renderLabel$3=(label,providersBackstage)=>FormField.parts.label({dom:{tag:"label",classes:["tox-label"]},components:[text$2(providersBackstage.translate(label))]}),formChangeEvent=generate$6("form-component-change"),formCloseEvent=generate$6("form-close"),formCancelEvent=generate$6("form-cancel"),formActionEvent=generate$6("form-action"),formSubmitEvent=generate$6("form-submit"),formBlockEvent=generate$6("form-block"),formUnblockEvent=generate$6("form-unblock"),formTabChangeEvent=generate$6("form-tabchange"),formResizeEvent=generate$6("form-resize"),renderCollection=(spec,providersBackstage,initialData)=>{const pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),icons=providersBackstage.icons(),runOnItem=f=>(comp,se)=>{closest$1(se.event.target,"[data-collection-item-value]").each((target=>{f(comp,se,target,get$f(target,"data-collection-item-value"))}))},setContents=(comp,items)=>{const htmlLines=map$2(items,(item=>{const itemText=global$8.translate(item.text),textContent=1===spec.columns?`<div class="tox-collection__item-label">${itemText}</div>`:"",iconContent=`<div class="tox-collection__item-icon">${(icon=>{var _a;return null!==(_a=icons[icon])&&void 0!==_a?_a:icon})(item.icon)}</div>`,mapItemName={_:" "," - ":" ","-":" "},ariaLabel=itemText.replace(/\_| \- |\-/g,(match=>mapItemName[match]));return`<div class="tox-collection__item${providersBackstage.isDisabled()?" tox-collection__item--state-disabled":""}" tabindex="-1" data-collection-item-value="${global$3.encodeAllRaw(item.value)}" title="${ariaLabel}" aria-label="${ariaLabel}">${iconContent}${textContent}</div>`})),chunks="auto"!==spec.columns&&spec.columns>1?chunk$1(htmlLines,spec.columns):[htmlLines],html=map$2(chunks,(ch=>`<div class="tox-collection__group">${ch.join("")}</div>`));set$6(comp.element,html.join(""))},onClick=runOnItem(((comp,se,tgt,itemValue)=>{se.stop(),providersBackstage.isDisabled()||emitWith(comp,formActionEvent,{name:spec.name,value:itemValue})})),collectionEvents=[run$1(mouseover(),runOnItem(((comp,se,tgt)=>{focus$3(tgt)}))),run$1(click(),onClick),run$1(tap(),onClick),run$1(focusin(),runOnItem(((comp,se,tgt)=>{descendant(comp.element,"."+activeClass).each((currentActive=>{remove$2(currentActive,activeClass)})),add$2(tgt,activeClass)}))),run$1(focusout(),runOnItem((comp=>{descendant(comp.element,"."+activeClass).each((currentActive=>{remove$2(currentActive,activeClass)}))}))),runOnExecute$1(runOnItem(((comp,se,tgt,itemValue)=>{emitWith(comp,formActionEvent,{name:spec.name,value:itemValue})})))],iterCollectionItems=(comp,applyAttributes)=>map$2(descendants(comp.element,".tox-collection__item"),applyAttributes),pField=FormField.parts.field({dom:{tag:"div",classes:["tox-collection"].concat(1!==spec.columns?["tox-collection--grid"]:["tox-collection--list"])},components:[],factory:{sketch:identity},behaviours:derive$1([Disabling.config({disabled:providersBackstage.isDisabled,onDisabled:comp=>{iterCollectionItems(comp,(childElm=>{add$2(childElm,"tox-collection__item--state-disabled"),set$9(childElm,"aria-disabled",!0)}))},onEnabled:comp=>{iterCollectionItems(comp,(childElm=>{remove$2(childElm,"tox-collection__item--state-disabled"),remove$7(childElm,"aria-disabled")}))}}),receivingConfig(),Replacing.config({}),Representing.config({store:{mode:"memory",initialValue:initialData.getOr([])},onSetValue:(comp,items)=>{setContents(comp,items),"auto"===spec.columns&&detectSize(comp,5,"tox-collection__item").each((({numRows:numRows,numColumns:numColumns})=>{Keying.setGridSize(comp,numRows,numColumns)})),emit(comp,formResizeEvent)}}),Tabstopping.config({}),Keying.config((columns=spec.columns,presets="normal",1===columns?{mode:"menu",moveOnTab:!1,selector:".tox-collection__item"}:"auto"===columns?{mode:"flatgrid",selector:".tox-collection__item",initSize:{numColumns:1,numRows:1}}:{mode:"matrix",selectors:{row:"color"===presets?".tox-swatches__row":".tox-collection__group",cell:"color"===presets?".tox-swatch":".tox-collection__item"}})),config("collection-events",collectionEvents)]),eventOrder:{[execute$5()]:["disabling","alloy.base.behaviour","collection-events"]}});var columns,presets;return renderFormFieldWith(pLabel,pField,["tox-form__group--collection"],[])},ariaElements=["input","textarea"],isAriaElement=elem=>{const name=name$3(elem);return contains$2(ariaElements,name)},markValid=(component,invalidConfig)=>{const elem=invalidConfig.getRoot(component).getOr(component.element);remove$2(elem,invalidConfig.invalidClass),invalidConfig.notify.each((notifyInfo=>{isAriaElement(component.element)&&set$9(component.element,"aria-invalid",!1),notifyInfo.getContainer(component).each((container=>{set$6(container,notifyInfo.validHtml)})),notifyInfo.onValid(component)}))},markInvalid=(component,invalidConfig,invalidState,text)=>{const elem=invalidConfig.getRoot(component).getOr(component.element);add$2(elem,invalidConfig.invalidClass),invalidConfig.notify.each((notifyInfo=>{isAriaElement(component.element)&&set$9(component.element,"aria-invalid",!0),notifyInfo.getContainer(component).each((container=>{set$6(container,text)})),notifyInfo.onInvalid(component,text)}))},query=(component,invalidConfig,_invalidState)=>invalidConfig.validator.fold((()=>Future_pure(Result.value(!0))),(validatorInfo=>validatorInfo.validate(component))),run=(component,invalidConfig,invalidState)=>(invalidConfig.notify.each((notifyInfo=>{notifyInfo.onValidate(component)})),query(component,invalidConfig).map((valid=>component.getSystem().isConnected()?valid.fold((err=>(markInvalid(component,invalidConfig,0,err),Result.error(err))),(v=>(markValid(component,invalidConfig),Result.value(v)))):Result.error("No longer in system"))));var InvalidateApis=Object.freeze({__proto__:null,markValid:markValid,markInvalid:markInvalid,query:query,run:run,isInvalid:(component,invalidConfig)=>{const elem=invalidConfig.getRoot(component).getOr(component.element);return has(elem,invalidConfig.invalidClass)}});var ActiveInvalidate=Object.freeze({__proto__:null,events:(invalidConfig,invalidState)=>invalidConfig.validator.map((validatorInfo=>derive$2([run$1(validatorInfo.onEvent,(component=>{run(component,invalidConfig).get(identity)}))].concat(validatorInfo.validateOnLoad?[runOnAttached((component=>{run(component,invalidConfig).get(noop)}))]:[])))).getOr({})}),InvalidateSchema=[required$1("invalidClass"),defaulted("getRoot",Optional.none),optionObjOf("notify",[defaulted("aria","alert"),defaulted("getContainer",Optional.none),defaulted("validHtml",""),onHandler("onValid"),onHandler("onInvalid"),onHandler("onValidate")]),optionObjOf("validator",[required$1("validate"),defaulted("onEvent","input"),defaulted("validateOnLoad",!0)])];const Invalidating=create$4({fields:InvalidateSchema,name:"invalidating",active:ActiveInvalidate,apis:InvalidateApis,extra:{validation:validator=>component=>{const v=Representing.getValue(component);return Future_pure(validator(v))}}});const Unselecting=create$4({fields:[],name:"unselecting",active:Object.freeze({__proto__:null,events:()=>derive$2([abort(selectstart(),always)]),exhibit:()=>nu$7({styles:{"-webkit-user-select":"none","user-select":"none","-ms-user-select":"none","-moz-user-select":"-moz-none"},attributes:{unselectable:"on"}})})}),colorInputChangeEvent=generate$6("color-input-change"),colorSwatchChangeEvent=generate$6("color-swatch-change"),colorPickerCancelEvent=generate$6("color-picker-cancel"),renderColorInput=(spec,sharedBackstage,colorInputBackstage,initialData)=>{const pField=FormField.parts.field({factory:Input,inputClasses:["tox-textfield"],data:initialData,onSetValue:c=>Invalidating.run(c).get(noop),inputBehaviours:derive$1([Disabling.config({disabled:sharedBackstage.providers.isDisabled}),receivingConfig(),Tabstopping.config({}),Invalidating.config({invalidClass:"tox-textbox-field-invalid",getRoot:comp=>parentElement(comp.element),notify:{onValid:comp=>{const val=Representing.getValue(comp);emitWith(comp,colorInputChangeEvent,{color:val})}},validator:{validateOnLoad:!1,validate:input=>{const inputValue=Representing.getValue(input);if(0===inputValue.length)return Future_pure(Result.value(!0));{const span=SugarElement.fromTag("span");set$8(span,"background-color",inputValue);const res=getRaw(span,"background-color").fold((()=>Result.error("blah")),(_=>Result.value(inputValue)));return Future_pure(res)}}}})]),selectOnFocus:!1}),pLabel=spec.label.map((label=>renderLabel$3(label,sharedBackstage.providers))),emitSwatchChange=(colorBit,value)=>{emitWith(colorBit,colorSwatchChangeEvent,{value:value})},memColorButton=record(((spec,sharedBackstage)=>Dropdown.sketch({dom:spec.dom,components:spec.components,toggleClass:"mce-active",dropdownBehaviours:derive$1([DisablingConfigs_button(sharedBackstage.providers.isDisabled),receivingConfig(),Unselecting.config({}),Tabstopping.config({})]),layouts:spec.layouts,sandboxClasses:["tox-dialog__popups"],lazySink:sharedBackstage.getSink,fetch:comp=>Future_nu((callback=>spec.fetch(callback))).map((items=>Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6("menu-value"),items,(value=>{spec.onItemAction(comp,value)}),spec.columns,spec.presets,ItemResponse$1.CLOSE_ON_EXECUTE,never,sharedBackstage.providers),{movement:deriveMenuMovement(spec.columns,spec.presets)}))))),parts:{menu:part(0,0,spec.presets)}}))({dom:{tag:"span",attributes:{"aria-label":sharedBackstage.providers.translate("Color swatch")}},layouts:{onRtl:()=>[southwest$2,southeast$2,south$2],onLtr:()=>[southeast$2,southwest$2,south$2]},components:[],fetch:getFetch$1(colorInputBackstage.getColors(spec.storageKey),spec.storageKey,colorInputBackstage.hasCustomColors()),columns:colorInputBackstage.getColorCols(spec.storageKey),presets:"color",onItemAction:(comp,value)=>{memColorButton.getOpt(comp).each((colorBit=>{"custom"===value?colorInputBackstage.colorPicker((valueOpt=>{valueOpt.fold((()=>emit(colorBit,colorPickerCancelEvent)),(value=>{emitSwatchChange(colorBit,value),addColor(spec.storageKey,value)}))}),"#ffffff"):emitSwatchChange(colorBit,"remove"===value?"":value)}))}},sharedBackstage));return FormField.sketch({dom:{tag:"div",classes:["tox-form__group"]},components:pLabel.toArray().concat([{dom:{tag:"div",classes:["tox-color-input"]},components:[pField,memColorButton.asSpec()]}]),fieldBehaviours:derive$1([config("form-field-events",[run$1(colorInputChangeEvent,((comp,se)=>{memColorButton.getOpt(comp).each((colorButton=>{set$8(colorButton.element,"background-color",se.event.color)})),emitWith(comp,formChangeEvent,{name:spec.name})})),run$1(colorSwatchChangeEvent,((comp,se)=>{FormField.getField(comp).each((field=>{Representing.setValue(field,se.event.value),Composing.getCurrent(comp).each(Focusing.focus)}))})),run$1(colorPickerCancelEvent,((comp,_se)=>{FormField.getField(comp).each((_field=>{Composing.getCurrent(comp).each(Focusing.focus)}))}))])])})},labelPart=optional({schema:[required$1("dom")],name:"label"}),edgePart=name=>optional({name:name+"-edge",overrides:detail=>detail.model.manager.edgeActions[name].fold((()=>({})),(a=>({events:derive$2([runActionExtra(touchstart(),((comp,se,d)=>a(comp,d)),[detail]),runActionExtra(mousedown(),((comp,se,d)=>a(comp,d)),[detail]),runActionExtra(mousemove(),((comp,se,det)=>{det.mouseIsDown.get()&&a(comp,det)}),[detail])])})))}),tlEdgePart=edgePart("top-left"),tedgePart=edgePart("top"),trEdgePart=edgePart("top-right"),redgePart=edgePart("right"),brEdgePart=edgePart("bottom-right"),bedgePart=edgePart("bottom"),blEdgePart=edgePart("bottom-left"),ledgePart=edgePart("left"),thumbPart=required({name:"thumb",defaults:constant$1({dom:{styles:{position:"absolute"}}}),overrides:detail=>({events:derive$2([redirectToPart(touchstart(),detail,"spectrum"),redirectToPart(touchmove(),detail,"spectrum"),redirectToPart(touchend(),detail,"spectrum"),redirectToPart(mousedown(),detail,"spectrum"),redirectToPart(mousemove(),detail,"spectrum"),redirectToPart(mouseup(),detail,"spectrum")])})}),isShift=event=>isShift$1(event.event),spectrumPart=required({schema:[customField("mouseIsDown",(()=>Cell(!1)))],name:"spectrum",overrides:detail=>{const model=detail.model.manager,setValueFrom=(component,simulatedEvent)=>model.getValueFromEvent(simulatedEvent).map((value=>model.setValueFrom(component,detail,value)));return{behaviours:derive$1([Keying.config({mode:"special",onLeft:(spectrum,event)=>model.onLeft(spectrum,detail,isShift(event)),onRight:(spectrum,event)=>model.onRight(spectrum,detail,isShift(event)),onUp:(spectrum,event)=>model.onUp(spectrum,detail,isShift(event)),onDown:(spectrum,event)=>model.onDown(spectrum,detail,isShift(event))}),Tabstopping.config({}),Focusing.config({})]),events:derive$2([run$1(touchstart(),setValueFrom),run$1(touchmove(),setValueFrom),run$1(mousedown(),setValueFrom),run$1(mousemove(),((spectrum,se)=>{detail.mouseIsDown.get()&&setValueFrom(spectrum,se)}))])}}});var SliderParts=[labelPart,ledgePart,redgePart,tedgePart,bedgePart,tlEdgePart,trEdgePart,blEdgePart,brEdgePart,thumbPart,spectrumPart];const sliderChangeEvent=constant$1("slider.change.value"),getEventSource=simulatedEvent=>{const evt=simulatedEvent.event.raw;if((evt=>-1!==evt.type.indexOf("touch"))(evt)){const touchEvent=evt;return void 0!==touchEvent.touches&&1===touchEvent.touches.length?Optional.some(touchEvent.touches[0]).map((t=>SugarPosition(t.clientX,t.clientY))):Optional.none()}{const mouseEvent=evt;return void 0!==mouseEvent.clientX?Optional.some(mouseEvent).map((me=>SugarPosition(me.clientX,me.clientY))):Optional.none()}},minX=detail=>detail.model.minX,minY=detail=>detail.model.minY,min1X=detail=>detail.model.minX-1,min1Y=detail=>detail.model.minY-1,maxX=detail=>detail.model.maxX,maxY=detail=>detail.model.maxY,max1X=detail=>detail.model.maxX+1,max1Y=detail=>detail.model.maxY+1,range=(detail,max,min)=>max(detail)-min(detail),xRange=detail=>range(detail,maxX,minX),yRange=detail=>range(detail,maxY,minY),halfX=detail=>xRange(detail)/2,halfY=detail=>yRange(detail)/2,step=(detail,useMultiplier)=>useMultiplier?detail.stepSize*detail.speedMultiplier:detail.stepSize,snap=detail=>detail.snapToGrid,snapStart=detail=>detail.snapStart,rounded=detail=>detail.rounded,hasEdge=(detail,edgeName)=>void 0!==detail[edgeName+"-edge"],hasLEdge=detail=>hasEdge(detail,"left"),hasREdge=detail=>hasEdge(detail,"right"),hasTEdge=detail=>hasEdge(detail,"top"),hasBEdge=detail=>hasEdge(detail,"bottom"),currentValue=detail=>detail.model.value.get(),xyValue=(x,y)=>({x:x,y:y}),fireSliderChange$3=(component,value)=>{emitWith(component,sliderChangeEvent(),{value:value})},reduceBy=(value,min,max,step)=>value<min?value:value>max?max:value===min?min-1:Math.max(min,value-step),increaseBy=(value,min,max,step)=>value>max?value:value<min?min:value===max?max+1:Math.min(max,value+step),capValue=(value,min,max)=>Math.max(min,Math.min(max,value)),findValueOf=args=>{const{min:min,max:max,range:range,value:value,step:step,snap:snap,snapStart:snapStart,rounded:rounded,hasMinEdge:hasMinEdge,hasMaxEdge:hasMaxEdge,minBound:minBound,maxBound:maxBound,screenRange:screenRange}=args,capMin=hasMinEdge?min-1:min,capMax=hasMaxEdge?max+1:max;if(value<minBound)return capMin;if(value>maxBound)return capMax;{const offset=((value,min,max)=>Math.min(max,Math.max(value,min))-min)(value,minBound,maxBound),newValue=capValue(offset/screenRange*range+min,capMin,capMax);return snap&&newValue>=min&&newValue<=max?((value,min,max,step,snapStart)=>snapStart.fold((()=>{const initValue=value-min,extraValue=Math.round(initValue/step)*step;return capValue(min+extraValue,min-1,max+1)}),(start=>{const remainder=(value-start)%step,adjustment=Math.round(remainder/step),rawSteps=Math.floor((value-start)/step),maxSteps=Math.floor((max-start)/step),r=start+Math.min(maxSteps,rawSteps+adjustment)*step;return Math.max(start,r)})))(newValue,min,max,step,snapStart):rounded?Math.round(newValue):newValue}},findOffsetOfValue$2=args=>{const{min:min,max:max,range:range,value:value,hasMinEdge:hasMinEdge,hasMaxEdge:hasMaxEdge,maxBound:maxBound,maxOffset:maxOffset,centerMinEdge:centerMinEdge,centerMaxEdge:centerMaxEdge}=args;return value<min?hasMinEdge?0:centerMinEdge:value>max?hasMaxEdge?maxBound:centerMaxEdge:(value-min)/range*maxOffset},getBounds=component=>component.element.dom.getBoundingClientRect(),getBoundsProperty=(bounds,property)=>bounds[property],getMinXBounds=component=>{const bounds=getBounds(component);return getBoundsProperty(bounds,"left")},getMaxXBounds=component=>{const bounds=getBounds(component);return getBoundsProperty(bounds,"right")},getMinYBounds=component=>{const bounds=getBounds(component);return getBoundsProperty(bounds,"top")},getMaxYBounds=component=>{const bounds=getBounds(component);return getBoundsProperty(bounds,"bottom")},getXScreenRange=component=>{const bounds=getBounds(component);return getBoundsProperty(bounds,"width")},getYScreenRange=component=>{const bounds=getBounds(component);return getBoundsProperty(bounds,"height")},getCenterOffsetOf=(componentMinEdge,componentMaxEdge,spectrumMinEdge)=>(componentMinEdge+componentMaxEdge)/2-spectrumMinEdge,getXCenterOffSetOf=(component,spectrum)=>{const componentBounds=getBounds(component),spectrumBounds=getBounds(spectrum),componentMinEdge=getBoundsProperty(componentBounds,"left"),componentMaxEdge=getBoundsProperty(componentBounds,"right"),spectrumMinEdge=getBoundsProperty(spectrumBounds,"left");return getCenterOffsetOf(componentMinEdge,componentMaxEdge,spectrumMinEdge)},getYCenterOffSetOf=(component,spectrum)=>{const componentBounds=getBounds(component),spectrumBounds=getBounds(spectrum),componentMinEdge=getBoundsProperty(componentBounds,"top"),componentMaxEdge=getBoundsProperty(componentBounds,"bottom"),spectrumMinEdge=getBoundsProperty(spectrumBounds,"top");return getCenterOffsetOf(componentMinEdge,componentMaxEdge,spectrumMinEdge)},fireSliderChange$2=(spectrum,value)=>{emitWith(spectrum,sliderChangeEvent(),{value:value})},findValueOfOffset$1=(spectrum,detail,left)=>{const args={min:minX(detail),max:maxX(detail),range:xRange(detail),value:left,step:step(detail),snap:snap(detail),snapStart:snapStart(detail),rounded:rounded(detail),hasMinEdge:hasLEdge(detail),hasMaxEdge:hasREdge(detail),minBound:getMinXBounds(spectrum),maxBound:getMaxXBounds(spectrum),screenRange:getXScreenRange(spectrum)};return findValueOf(args)},handleMovement$2=direction=>(spectrum,detail,useMultiplier)=>((direction,spectrum,detail,useMultiplier)=>{const xValue=(direction>0?increaseBy:reduceBy)(currentValue(detail),minX(detail),maxX(detail),step(detail,useMultiplier));return fireSliderChange$2(spectrum,xValue),Optional.some(xValue)})(direction,spectrum,detail,useMultiplier).map(always),findPositionOfValue$1=(slider,spectrum,value,minEdge,maxEdge,detail)=>{const offset=((spectrum,detail,value,minEdge,maxEdge)=>{const maxOffset=getXScreenRange(spectrum),centerMinEdge=minEdge.bind((edge=>Optional.some(getXCenterOffSetOf(edge,spectrum)))).getOr(0),centerMaxEdge=maxEdge.bind((edge=>Optional.some(getXCenterOffSetOf(edge,spectrum)))).getOr(maxOffset),args={min:minX(detail),max:maxX(detail),range:xRange(detail),value:value,hasMinEdge:hasLEdge(detail),hasMaxEdge:hasREdge(detail),minBound:getMinXBounds(spectrum),minOffset:0,maxBound:getMaxXBounds(spectrum),maxOffset:maxOffset,centerMinEdge:centerMinEdge,centerMaxEdge:centerMaxEdge};return findOffsetOfValue$2(args)})(spectrum,detail,value,minEdge,maxEdge);return getMinXBounds(spectrum)-getMinXBounds(slider)+offset},onLeft$2=handleMovement$2(-1),onRight$2=handleMovement$2(1),onUp$2=Optional.none,onDown$2=Optional.none,edgeActions$2={"top-left":Optional.none(),top:Optional.none(),"top-right":Optional.none(),right:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,max1X(detail))})),"bottom-right":Optional.none(),bottom:Optional.none(),"bottom-left":Optional.none(),left:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,min1X(detail))}))};var HorizontalModel=Object.freeze({__proto__:null,setValueFrom:(spectrum,detail,value)=>{const xValue=findValueOfOffset$1(spectrum,detail,value);return fireSliderChange$2(spectrum,xValue),xValue},setToMin:(spectrum,detail)=>{const min=minX(detail);fireSliderChange$2(spectrum,min)},setToMax:(spectrum,detail)=>{const max=maxX(detail);fireSliderChange$2(spectrum,max)},findValueOfOffset:findValueOfOffset$1,getValueFromEvent:simulatedEvent=>getEventSource(simulatedEvent).map((p=>p.left)),findPositionOfValue:findPositionOfValue$1,setPositionFromValue:(slider,thumb,detail,edges)=>{const value=currentValue(detail),pos=findPositionOfValue$1(slider,edges.getSpectrum(slider),value,edges.getLeftEdge(slider),edges.getRightEdge(slider),detail),thumbRadius=get$c(thumb.element)/2;set$8(thumb.element,"left",pos-thumbRadius+"px")},onLeft:onLeft$2,onRight:onRight$2,onUp:onUp$2,onDown:onDown$2,edgeActions:edgeActions$2});const fireSliderChange$1=(spectrum,value)=>{emitWith(spectrum,sliderChangeEvent(),{value:value})},findValueOfOffset=(spectrum,detail,top)=>{const args={min:minY(detail),max:maxY(detail),range:yRange(detail),value:top,step:step(detail),snap:snap(detail),snapStart:snapStart(detail),rounded:rounded(detail),hasMinEdge:hasTEdge(detail),hasMaxEdge:hasBEdge(detail),minBound:getMinYBounds(spectrum),maxBound:getMaxYBounds(spectrum),screenRange:getYScreenRange(spectrum)};return findValueOf(args)},handleMovement$1=direction=>(spectrum,detail,useMultiplier)=>((direction,spectrum,detail,useMultiplier)=>{const yValue=(direction>0?increaseBy:reduceBy)(currentValue(detail),minY(detail),maxY(detail),step(detail,useMultiplier));return fireSliderChange$1(spectrum,yValue),Optional.some(yValue)})(direction,spectrum,detail,useMultiplier).map(always),findPositionOfValue=(slider,spectrum,value,minEdge,maxEdge,detail)=>{const offset=((spectrum,detail,value,minEdge,maxEdge)=>{const maxOffset=getYScreenRange(spectrum),centerMinEdge=minEdge.bind((edge=>Optional.some(getYCenterOffSetOf(edge,spectrum)))).getOr(0),centerMaxEdge=maxEdge.bind((edge=>Optional.some(getYCenterOffSetOf(edge,spectrum)))).getOr(maxOffset),args={min:minY(detail),max:maxY(detail),range:yRange(detail),value:value,hasMinEdge:hasTEdge(detail),hasMaxEdge:hasBEdge(detail),minBound:getMinYBounds(spectrum),minOffset:0,maxBound:getMaxYBounds(spectrum),maxOffset:maxOffset,centerMinEdge:centerMinEdge,centerMaxEdge:centerMaxEdge};return findOffsetOfValue$2(args)})(spectrum,detail,value,minEdge,maxEdge);return getMinYBounds(spectrum)-getMinYBounds(slider)+offset},onLeft$1=Optional.none,onRight$1=Optional.none,onUp$1=handleMovement$1(-1),onDown$1=handleMovement$1(1),edgeActions$1={"top-left":Optional.none(),top:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,min1Y(detail))})),"top-right":Optional.none(),right:Optional.none(),"bottom-right":Optional.none(),bottom:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,max1Y(detail))})),"bottom-left":Optional.none(),left:Optional.none()};var VerticalModel=Object.freeze({__proto__:null,setValueFrom:(spectrum,detail,value)=>{const yValue=findValueOfOffset(spectrum,detail,value);return fireSliderChange$1(spectrum,yValue),yValue},setToMin:(spectrum,detail)=>{const min=minY(detail);fireSliderChange$1(spectrum,min)},setToMax:(spectrum,detail)=>{const max=maxY(detail);fireSliderChange$1(spectrum,max)},findValueOfOffset:findValueOfOffset,getValueFromEvent:simulatedEvent=>getEventSource(simulatedEvent).map((p=>p.top)),findPositionOfValue:findPositionOfValue,setPositionFromValue:(slider,thumb,detail,edges)=>{const value=currentValue(detail),pos=findPositionOfValue(slider,edges.getSpectrum(slider),value,edges.getTopEdge(slider),edges.getBottomEdge(slider),detail),thumbRadius=get$d(thumb.element)/2;set$8(thumb.element,"top",pos-thumbRadius+"px")},onLeft:onLeft$1,onRight:onRight$1,onUp:onUp$1,onDown:onDown$1,edgeActions:edgeActions$1});const fireSliderChange=(spectrum,value)=>{emitWith(spectrum,sliderChangeEvent(),{value:value})},sliderValue=(x,y)=>({x:x,y:y}),handleMovement=(direction,isVerticalMovement)=>(spectrum,detail,useMultiplier)=>((direction,isVerticalMovement,spectrum,detail,useMultiplier)=>{const f=direction>0?increaseBy:reduceBy,xValue=isVerticalMovement?currentValue(detail).x:f(currentValue(detail).x,minX(detail),maxX(detail),step(detail,useMultiplier)),yValue=isVerticalMovement?f(currentValue(detail).y,minY(detail),maxY(detail),step(detail,useMultiplier)):currentValue(detail).y;return fireSliderChange(spectrum,sliderValue(xValue,yValue)),Optional.some(xValue)})(direction,isVerticalMovement,spectrum,detail,useMultiplier).map(always),onLeft=handleMovement(-1,!1),onRight=handleMovement(1,!1),onUp=handleMovement(-1,!0),onDown=handleMovement(1,!0),edgeActions={"top-left":Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(min1X(detail),min1Y(detail)))})),top:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(halfX(detail),min1Y(detail)))})),"top-right":Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(max1X(detail),min1Y(detail)))})),right:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(max1X(detail),halfY(detail)))})),"bottom-right":Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(max1X(detail),max1Y(detail)))})),bottom:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(halfX(detail),max1Y(detail)))})),"bottom-left":Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(min1X(detail),max1Y(detail)))})),left:Optional.some(((edge,detail)=>{fireSliderChange$3(edge,xyValue(min1X(detail),halfY(detail)))}))};var TwoDModel=Object.freeze({__proto__:null,setValueFrom:(spectrum,detail,value)=>{const xValue=findValueOfOffset$1(spectrum,detail,value.left),yValue=findValueOfOffset(spectrum,detail,value.top),val=sliderValue(xValue,yValue);return fireSliderChange(spectrum,val),val},setToMin:(spectrum,detail)=>{const mX=minX(detail),mY=minY(detail);fireSliderChange(spectrum,sliderValue(mX,mY))},setToMax:(spectrum,detail)=>{const mX=maxX(detail),mY=maxY(detail);fireSliderChange(spectrum,sliderValue(mX,mY))},getValueFromEvent:simulatedEvent=>getEventSource(simulatedEvent),setPositionFromValue:(slider,thumb,detail,edges)=>{const value=currentValue(detail),xPos=findPositionOfValue$1(slider,edges.getSpectrum(slider),value.x,edges.getLeftEdge(slider),edges.getRightEdge(slider),detail),yPos=findPositionOfValue(slider,edges.getSpectrum(slider),value.y,edges.getTopEdge(slider),edges.getBottomEdge(slider),detail),thumbXRadius=get$c(thumb.element)/2,thumbYRadius=get$d(thumb.element)/2;set$8(thumb.element,"left",xPos-thumbXRadius+"px"),set$8(thumb.element,"top",yPos-thumbYRadius+"px")},onLeft:onLeft,onRight:onRight,onUp:onUp,onDown:onDown,edgeActions:edgeActions});const Slider=composite({name:"Slider",configFields:[defaulted("stepSize",1),defaulted("speedMultiplier",10),defaulted("onChange",noop),defaulted("onChoose",noop),defaulted("onInit",noop),defaulted("onDragStart",noop),defaulted("onDragEnd",noop),defaulted("snapToGrid",!1),defaulted("rounded",!0),option$3("snapStart"),requiredOf("model",choose$1("mode",{x:[defaulted("minX",0),defaulted("maxX",100),customField("value",(spec=>Cell(spec.mode.minX))),required$1("getInitialValue"),output$1("manager",HorizontalModel)],y:[defaulted("minY",0),defaulted("maxY",100),customField("value",(spec=>Cell(spec.mode.minY))),required$1("getInitialValue"),output$1("manager",VerticalModel)],xy:[defaulted("minX",0),defaulted("maxX",100),defaulted("minY",0),defaulted("maxY",100),customField("value",(spec=>Cell({x:spec.mode.minX,y:spec.mode.minY}))),required$1("getInitialValue"),output$1("manager",TwoDModel)]})),field("sliderBehaviours",[Keying,Representing]),customField("mouseIsDown",(()=>Cell(!1)))],partFields:SliderParts,factory:(detail,components,_spec,_externals)=>{const getThumb=component=>getPartOrDie(component,detail,"thumb"),getSpectrum=component=>getPartOrDie(component,detail,"spectrum"),getLeftEdge=component=>getPart(component,detail,"left-edge"),getRightEdge=component=>getPart(component,detail,"right-edge"),getTopEdge=component=>getPart(component,detail,"top-edge"),getBottomEdge=component=>getPart(component,detail,"bottom-edge"),modelDetail=detail.model,model=modelDetail.manager,refresh=(slider,thumb)=>{model.setPositionFromValue(slider,thumb,detail,{getLeftEdge:getLeftEdge,getRightEdge:getRightEdge,getTopEdge:getTopEdge,getBottomEdge:getBottomEdge,getSpectrum:getSpectrum})},setValue=(slider,newValue)=>{modelDetail.value.set(newValue);const thumb=getThumb(slider);refresh(slider,thumb)},choose=slider=>{const wasDown=detail.mouseIsDown.get();detail.mouseIsDown.set(!1),wasDown&&getPart(slider,detail,"thumb").each((thumb=>{const value=modelDetail.value.get();detail.onChoose(slider,thumb,value)}))},onDragStart=(slider,simulatedEvent)=>{simulatedEvent.stop(),detail.mouseIsDown.set(!0),detail.onDragStart(slider,getThumb(slider))},onDragEnd=(slider,simulatedEvent)=>{simulatedEvent.stop(),detail.onDragEnd(slider,getThumb(slider)),choose(slider)},focusWidget=component=>{getPart(component,detail,"spectrum").map(Keying.focusIn)};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.sliderBehaviours,[Keying.config({mode:"special",focusIn:focusWidget}),Representing.config({store:{mode:"manual",getValue:_=>modelDetail.value.get(),setValue:setValue}}),Receiving.config({channels:{[mouseReleased()]:{onReceive:choose}}})]),events:derive$2([run$1(sliderChangeEvent(),((slider,simulatedEvent)=>{((slider,newValue)=>{setValue(slider,newValue);const thumb=getThumb(slider);detail.onChange(slider,thumb,newValue),Optional.some(!0)})(slider,simulatedEvent.event.value)})),runOnAttached(((slider,_simulatedEvent)=>{const getInitial=modelDetail.getInitialValue();modelDetail.value.set(getInitial);const thumb=getThumb(slider);refresh(slider,thumb);const spectrum=getSpectrum(slider);detail.onInit(slider,thumb,spectrum,modelDetail.value.get())})),run$1(touchstart(),onDragStart),run$1(touchend(),onDragEnd),run$1(mousedown(),((component,event)=>{focusWidget(component),onDragStart(component,event)})),run$1(mouseup(),onDragEnd)]),apis:{resetToMin:slider=>{model.setToMin(slider,detail)},resetToMax:slider=>{model.setToMax(slider,detail)},setValue:setValue,refresh:refresh},domModification:{styles:{position:"relative"}}}},apis:{setValue:(apis,slider,value)=>{apis.setValue(slider,value)},resetToMin:(apis,slider)=>{apis.resetToMin(slider)},resetToMax:(apis,slider)=>{apis.resetToMax(slider)},refresh:(apis,slider)=>{apis.refresh(slider)}}}),fieldsUpdate=generate$6("rgb-hex-update"),sliderUpdate=generate$6("slider-update"),paletteUpdate=generate$6("palette-update"),schema$i=[field("formBehaviours",[Representing])],getPartName$1=name=>"<alloy.field."+name+">",make$4=(detail,components)=>({uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.formBehaviours,[Representing.config({store:{mode:"manual",getValue:form=>{const resPs=getAllParts(form,detail);return map$1(resPs,((resPThunk,pName)=>resPThunk().bind((v=>{const opt=Composing.getCurrent(v);return o=opt,e=new Error(`Cannot find a current component to extract the value from for form part '${pName}': `+element(v.element)),o.fold((()=>Result.error(e)),Result.value);var o,e})).map(Representing.getValue)))},setValue:(form,values)=>{each(values,((newValue,key)=>{getPart(form,detail,key).each((wrapper=>{Composing.getCurrent(wrapper).each((field=>{Representing.setValue(field,newValue)}))}))}))}}})]),apis:{getField:(form,key)=>getPart(form,detail,key).bind(Composing.getCurrent)}}),Form={getField:makeApi(((apis,component,key)=>apis.getField(component,key))),sketch:fSpec=>{const parts=(()=>{const record=[];return{field:(name,config)=>(record.push(name),generateOne$1("form",getPartName$1(name),config)),record:constant$1(record)}})(),spec=fSpec(parts),partNames=parts.record(),fieldParts=map$2(partNames,(n=>required({name:n,pname:getPartName$1(n)})));return composite$1("form",schema$i,fieldParts,make$4,spec)}},validInput=generate$6("valid-input"),invalidInput=generate$6("invalid-input"),validatingInput=generate$6("validating-input"),rgbFormFactory=(translate,getClass,onValidHexx,onInvalidHexx)=>{const invalidation=(label,isValid)=>Invalidating.config({invalidClass:getClass("invalid"),notify:{onValidate:comp=>{emitWith(comp,validatingInput,{type:label})},onValid:comp=>{emitWith(comp,validInput,{type:label,value:Representing.getValue(comp)})},onInvalid:comp=>{emitWith(comp,invalidInput,{type:label,value:Representing.getValue(comp)})}},validator:{validate:comp=>{const value=Representing.getValue(comp),res=isValid(value)?Result.value(!0):Result.error(translate("aria.input.invalid"));return Future_pure(res)},validateOnLoad:!1}}),renderTextField=(isValid,name,label,description,data)=>{const helptext=translate("colorcustom.rgb.range"),pLabel=FormField.parts.label({dom:{tag:"label",attributes:{"aria-label":description}},components:[text$2(label)]}),pField=FormField.parts.field({data:data,factory:Input,inputAttributes:{type:"text",..."hex"===name?{"aria-live":"polite"}:{}},inputClasses:[getClass("textfield")],inputBehaviours:derive$1([invalidation(name,isValid),Tabstopping.config({})]),onSetValue:input=>{if(Invalidating.isInvalid(input)){Invalidating.run(input).get(noop)}}}),comps=[pLabel,pField],concats="hex"!==name?[FormField.parts["aria-descriptor"]({text:helptext})]:[];return{dom:{tag:"div",attributes:{role:"presentation"}},components:comps.concat(concats)}},copyRgbToForm=(form,rgb)=>{const red=rgb.red,green=rgb.green,blue=rgb.blue;Representing.setValue(form,{red:red,green:green,blue:blue})},memPreview=record({dom:{tag:"div",classes:[getClass("rgba-preview")],styles:{"background-color":"white"},attributes:{role:"presentation"}}}),updatePreview=(anyInSystem,hex)=>{memPreview.getOpt(anyInSystem).each((preview=>{set$8(preview.element,"background-color","#"+hex.value)}))},rgbFormSketcher=single({factory:()=>{const state={red:Cell(Optional.some(255)),green:Cell(Optional.some(255)),blue:Cell(Optional.some(255)),hex:Cell(Optional.some("ffffff"))},get=prop=>state[prop].get(),set=(prop,value)=>{state[prop].set(value)},setValueRgb=rgb=>{const red=rgb.red,green=rgb.green,blue=rgb.blue;set("red",Optional.some(red)),set("green",Optional.some(green)),set("blue",Optional.some(blue))},onInvalidInput=(form,simulatedEvent)=>{const data=simulatedEvent.event;"hex"!==data.type?set(data.type,Optional.none()):onInvalidHexx(form)},onValidRgb=(form,prop,value)=>{const val=parseInt(value,10);set(prop,Optional.some(val)),get("red").bind((red=>get("green").bind((green=>get("blue").map((blue=>rgbaColour(red,green,blue,1))))))).each((rgb=>{const hex=((form,rgba)=>{const hex=fromRgba(rgba);return Form.getField(form,"hex").each((hexField=>{Focusing.isFocused(hexField)||Representing.setValue(form,{hex:hex.value})})),hex})(form,rgb);emitWith(form,fieldsUpdate,{hex:hex}),updatePreview(form,hex)}))},onValidInput=(form,simulatedEvent)=>{const data=simulatedEvent.event;(data=>"hex"===data.type)(data)?((form,value)=>{onValidHexx(form);const hex=hexColour(value);set("hex",Optional.some(hex.value));const rgb=fromHex(hex);copyRgbToForm(form,rgb),setValueRgb(rgb),emitWith(form,fieldsUpdate,{hex:hex}),updatePreview(form,hex)})(form,data.value):onValidRgb(form,data.type,data.value)},formPartStrings=key=>({label:translate("colorcustom.rgb."+key+".label"),description:translate("colorcustom.rgb."+key+".description")}),redStrings=formPartStrings("red"),greenStrings=formPartStrings("green"),blueStrings=formPartStrings("blue"),hexStrings=formPartStrings("hex");return deepMerge(Form.sketch((parts=>({dom:{tag:"form",classes:[getClass("rgb-form")],attributes:{"aria-label":translate("aria.color.picker")}},components:[parts.field("red",FormField.sketch(renderTextField(isRgbaComponent,"red",redStrings.label,redStrings.description,255))),parts.field("green",FormField.sketch(renderTextField(isRgbaComponent,"green",greenStrings.label,greenStrings.description,255))),parts.field("blue",FormField.sketch(renderTextField(isRgbaComponent,"blue",blueStrings.label,blueStrings.description,255))),parts.field("hex",FormField.sketch(renderTextField(isHexString,"hex",hexStrings.label,hexStrings.description,"ffffff"))),memPreview.asSpec()],formBehaviours:derive$1([Invalidating.config({invalidClass:getClass("form-invalid")}),config("rgb-form-events",[run$1(validInput,onValidInput),run$1(invalidInput,onInvalidInput),run$1(validatingInput,onInvalidInput)])])}))),{apis:{updateHex:(form,hex)=>{Representing.setValue(form,{hex:hex.value}),((form,hex)=>{const rgb=fromHex(hex);copyRgbToForm(form,rgb),setValueRgb(rgb)})(form,hex),updatePreview(form,hex)}}})},name:"RgbForm",configFields:[],apis:{updateHex:(apis,form,hex)=>{apis.updateHex(form,hex)}},extraApis:{}});return rgbFormSketcher},paletteFactory=(translate,getClass)=>{const spectrumPart=Slider.parts.spectrum({dom:{tag:"canvas",attributes:{role:"presentation"},classes:[getClass("sv-palette-spectrum")]}}),thumbPart=Slider.parts.thumb({dom:{tag:"div",attributes:{role:"presentation"},classes:[getClass("sv-palette-thumb")],innerHtml:`<div class=${getClass("sv-palette-inner-thumb")} role="presentation"></div>`}}),setColour=(canvas,rgba)=>{const{width:width,height:height}=canvas,ctx=canvas.getContext("2d");if(null===ctx)return;ctx.fillStyle=rgba,ctx.fillRect(0,0,width,height);const grdWhite=ctx.createLinearGradient(0,0,width,0);grdWhite.addColorStop(0,"rgba(255,255,255,1)"),grdWhite.addColorStop(1,"rgba(255,255,255,0)"),ctx.fillStyle=grdWhite,ctx.fillRect(0,0,width,height);const grdBlack=ctx.createLinearGradient(0,0,0,height);grdBlack.addColorStop(0,"rgba(0,0,0,0)"),grdBlack.addColorStop(1,"rgba(0,0,0,1)"),ctx.fillStyle=grdBlack,ctx.fillRect(0,0,width,height)},saturationBrightnessPaletteSketcher=single({factory:_detail=>{const getInitialValue=constant$1({x:0,y:0}),sliderBehaviours=derive$1([Composing.config({find:Optional.some}),Focusing.config({})]);return Slider.sketch({dom:{tag:"div",attributes:{role:"slider","aria-valuetext":translate(["Saturation {0}%, Brightness {1}%",0,0])},classes:[getClass("sv-palette")]},model:{mode:"xy",getInitialValue:getInitialValue},rounded:!1,components:[spectrumPart,thumbPart],onChange:(slider,_thumb,value)=>{isNumber(value)||set$9(slider.element,"aria-valuetext",translate(["Saturation {0}%, Brightness {1}%",Math.floor(value.x),Math.floor(100-value.y)])),emitWith(slider,paletteUpdate,{value:value})},onInit:(_slider,_thumb,spectrum,_value)=>{setColour(spectrum.element.dom,toString(red))},sliderBehaviours:sliderBehaviours})},name:"SaturationBrightnessPalette",configFields:[],apis:{setHue:(_apis,slider,hue)=>{((slider,hue)=>{const canvas=slider.components()[0].element.dom,hsv=hsvColour(hue,100,100),rgba=fromHsv(hsv);setColour(canvas,toString(rgba))})(slider,hue)},setThumb:(_apis,slider,hex)=>{((slider,hex)=>{const hsv=fromRgb(fromHex(hex));Slider.setValue(slider,{x:hsv.saturation,y:100-hsv.value}),set$9(slider.element,"aria-valuetext",translate(["Saturation {0}%, Brightness {1}%",hsv.saturation,hsv.value]))})(slider,hex)}},extraApis:{}});return saturationBrightnessPaletteSketcher},makeFactory=(translate,getClass)=>{const colourPickerSketcher=single({name:"ColourPicker",configFields:[required$1("dom"),defaulted("onValidHex",noop),defaulted("onInvalidHex",noop)],factory:detail=>{const rgbForm=rgbFormFactory(translate,getClass,detail.onValidHex,detail.onInvalidHex),sbPalette=paletteFactory(translate,getClass),state={paletteRgba:Cell(red),paletteHue:Cell(0)},memSlider=record(((translate,getClass)=>{const spectrum=Slider.parts.spectrum({dom:{tag:"div",classes:[getClass("hue-slider-spectrum")],attributes:{role:"presentation"}}}),thumb=Slider.parts.thumb({dom:{tag:"div",classes:[getClass("hue-slider-thumb")],attributes:{role:"presentation"}}});return Slider.sketch({dom:{tag:"div",classes:[getClass("hue-slider")],attributes:{role:"slider","aria-valuemin":0,"aria-valuemax":360,"aria-valuenow":120}},rounded:!1,model:{mode:"y",getInitialValue:constant$1(0)},components:[spectrum,thumb],sliderBehaviours:derive$1([Focusing.config({})]),onChange:(slider,_thumb,value)=>{set$9(slider.element,"aria-valuenow",Math.floor(360-3.6*value)),emitWith(slider,sliderUpdate,{value:value})}})})(0,getClass)),memPalette=record(sbPalette.sketch({})),memRgb=record(rgbForm.sketch({})),updatePalette=(anyInSystem,_hex,hue)=>{memPalette.getOpt(anyInSystem).each((palette=>{sbPalette.setHue(palette,hue)}))},updateFields=(anyInSystem,hex)=>{memRgb.getOpt(anyInSystem).each((form=>{rgbForm.updateHex(form,hex)}))},updateSlider=(anyInSystem,_hex,hue)=>{memSlider.getOpt(anyInSystem).each((slider=>{Slider.setValue(slider,(hue=>100-hue/360*100)(hue))}))},updatePaletteThumb=(anyInSystem,hex)=>{memPalette.getOpt(anyInSystem).each((palette=>{sbPalette.setThumb(palette,hex)}))},runUpdates=(anyInSystem,hex,hue,updates)=>{((hex,hue)=>{const rgba=fromHex(hex);state.paletteRgba.set(rgba),state.paletteHue.set(hue)})(hex,hue),each$1(updates,(update=>{update(anyInSystem,hex,hue)}))};return{uid:detail.uid,dom:detail.dom,components:[memPalette.asSpec(),memSlider.asSpec(),memRgb.asSpec()],behaviours:derive$1([config("colour-picker-events",[run$1(fieldsUpdate,(()=>{const updates=[updatePalette,updateSlider,updatePaletteThumb];return(form,simulatedEvent)=>{const hex=simulatedEvent.event.hex,hsv=(hex=>fromRgb(fromHex(hex)))(hex);runUpdates(form,hex,hsv.hue,updates)}})()),run$1(paletteUpdate,(()=>{const updates=[updateFields];return(form,simulatedEvent)=>{const value=simulatedEvent.event.value,oldHue=state.paletteHue.get(),newHsv=hsvColour(oldHue,value.x,100-value.y),newHex=hsvToHex(newHsv);runUpdates(form,newHex,oldHue,updates)}})()),run$1(sliderUpdate,(()=>{const updates=[updatePalette,updateFields];return(form,simulatedEvent)=>{const hue=(hue=>(100-hue)/100*360)(simulatedEvent.event.value),oldRgb=state.paletteRgba.get(),oldHsv=fromRgb(oldRgb),newHsv=hsvColour(hue,oldHsv.saturation,oldHsv.value),newHex=hsvToHex(newHsv);runUpdates(form,newHex,hue,updates)}})())]),Composing.config({find:comp=>memRgb.getOpt(comp)}),Keying.config({mode:"acyclic"})])}}});return colourPickerSketcher},ComposingConfigs_self=()=>Composing.config({find:Optional.some}),ComposingConfigs_memento=mem=>Composing.config({find:mem.getOpt}),ComposingConfigs_childAt=index=>Composing.config({find:comp=>child$2(comp.element,index).bind((element=>comp.getSystem().getByDom(element).toOptional()))}),processors=objOf([defaulted("preprocess",identity),defaulted("postprocess",identity)]),memento=(mem,rawProcessors)=>{const ps=asRawOrDie$1("RepresentingConfigs.memento processors",processors,rawProcessors);return Representing.config({store:{mode:"manual",getValue:comp=>{const other=mem.get(comp),rawValue=Representing.getValue(other);return ps.postprocess(rawValue)},setValue:(comp,rawValue)=>{const newValue=ps.preprocess(rawValue),other=mem.get(comp);Representing.setValue(other,newValue)}}})},withComp=(optInitialValue,getter,setter)=>Representing.config({store:{mode:"manual",...optInitialValue.map((initialValue=>({initialValue:initialValue}))).getOr({}),getValue:getter,setValue:setter}}),withElement=(initialValue,getter,setter)=>withComp(initialValue,(c=>getter(c.element)),((c,v)=>setter(c.element,v))),memory=initialValue=>Representing.config({store:{mode:"memory",initialValue:initialValue}}),english={"colorcustom.rgb.red.label":"R","colorcustom.rgb.red.description":"Red component","colorcustom.rgb.green.label":"G","colorcustom.rgb.green.description":"Green component","colorcustom.rgb.blue.label":"B","colorcustom.rgb.blue.description":"Blue component","colorcustom.rgb.hex.label":"#","colorcustom.rgb.hex.description":"Hex color code","colorcustom.rgb.range":"Range 0 to 255","aria.color.picker":"Color Picker","aria.input.invalid":"Invalid input"},renderColorPicker=(_spec,providerBackstage,initialData)=>{const getClass=key=>"tox-"+key,colourPickerFactory=makeFactory((providerBackstage=>key=>isString(key)?providerBackstage.translate(english[key]):providerBackstage.translate(key))(providerBackstage),getClass),memPicker=record(colourPickerFactory.sketch({dom:{tag:"div",classes:[getClass("color-picker-container")],attributes:{role:"presentation"}},onValidHex:form=>{emitWith(form,formActionEvent,{name:"hex-valid",value:!0})},onInvalidHex:form=>{emitWith(form,formActionEvent,{name:"hex-valid",value:!1})}}));return{dom:{tag:"div"},components:[memPicker.asSpec()],behaviours:derive$1([withComp(initialData,(comp=>{const picker=memPicker.get(comp);return Composing.getCurrent(picker).bind((rgbForm=>Representing.getValue(rgbForm).hex)).map((hex=>"#"+removeLeading(hex,"#"))).getOr("")}),((comp,newValue)=>{const valOpt=Optional.from(/^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/.exec(newValue)).bind((matches=>get$h(matches,1))),picker=memPicker.get(comp);Composing.getCurrent(picker).fold((()=>{console.log("Can not find form")}),(rgbForm=>{Representing.setValue(rgbForm,{hex:valOpt.getOr("")}),Form.getField(rgbForm,"hex").each((hexField=>{emit(hexField,input())}))}))})),ComposingConfigs_self()])}};var global$2=tinymce.util.Tools.resolve("tinymce.Resource");var global$1=tinymce.util.Tools.resolve("tinymce.util.Tools");const renderDropZone=(spec,providersBackstage,initialData)=>{const stopper=(_,se)=>{se.stop()},sequence=actions=>(comp,se)=>{each$1(actions,(a=>{a(comp,se)}))},onDrop=(comp,se)=>{var _a;if(!Disabling.isDisabled(comp)){const transferEvent=se.event.raw;handleFiles(comp,null===(_a=transferEvent.dataTransfer)||void 0===_a?void 0:_a.files)}},onSelect=(component,simulatedEvent)=>{const input=simulatedEvent.event.raw.target;handleFiles(component,input.files)},handleFiles=(component,files)=>{files&&(Representing.setValue(component,((files,providersBackstage)=>{const allowedImageFileTypes=global$1.explode(providersBackstage.getOption("images_file_types"));return filter$2(from(files),(file=>exists(allowedImageFileTypes,(type=>endsWith(file.name.toLowerCase(),`.${type.toLowerCase()}`)))))})(files,providersBackstage)),emitWith(component,formChangeEvent,{name:spec.name}))},memInput=record({dom:{tag:"input",attributes:{type:"file",accept:"image/*"},styles:{display:"none"}},behaviours:derive$1([config("input-file-events",[cutter(click()),cutter(tap())])])}),pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),pField=FormField.parts.field({factory:{sketch:s=>({uid:s.uid,dom:{tag:"div",classes:["tox-dropzone-container"]},behaviours:derive$1([memory(initialData.getOr([])),ComposingConfigs_self(),Disabling.config({}),Toggling.config({toggleClass:"dragenter",toggleOnExecute:!1}),config("dropzone-events",[run$1("dragenter",sequence([stopper,Toggling.toggle])),run$1("dragleave",sequence([stopper,Toggling.toggle])),run$1("dragover",stopper),run$1("drop",sequence([stopper,onDrop])),run$1(change(),onSelect)])]),components:[{dom:{tag:"div",classes:["tox-dropzone"],styles:{}},components:[{dom:{tag:"p"},components:[text$2(providersBackstage.translate("Drop an image here"))]},Button.sketch({dom:{tag:"button",styles:{position:"relative"},classes:["tox-button","tox-button--secondary"]},components:[text$2(providersBackstage.translate("Browse for an image")),memInput.asSpec()],action:comp=>{memInput.get(comp).element.dom.click()},buttonBehaviours:derive$1([Tabstopping.config({}),DisablingConfigs_button(providersBackstage.isDisabled),receivingConfig()])})]}]})}});return renderFormFieldWith(pLabel,pField,["tox-form__group--stretched"],[])},last=(fn,rate)=>{let timer=null;const cancel=()=>{isNull(timer)||(clearTimeout(timer),timer=null)};return{cancel:cancel,throttle:(...args)=>{cancel(),timer=setTimeout((()=>{timer=null,fn.apply(null,args)}),rate)}}},beforeObject=generate$6("alloy-fake-before-tabstop"),afterObject=generate$6("alloy-fake-after-tabstop"),craftWithClasses=classes=>({dom:{tag:"div",styles:{width:"1px",height:"1px",outline:"none"},attributes:{tabindex:"0"},classes:classes},behaviours:derive$1([Focusing.config({ignore:!0}),Tabstopping.config({})])}),craft=(containerClasses,spec)=>({dom:{tag:"div",classes:["tox-navobj",...containerClasses.getOr([])]},components:[craftWithClasses([beforeObject]),spec,craftWithClasses([afterObject])],behaviours:derive$1([ComposingConfigs_childAt(1)])}),triggerTab=(placeholder,shiftKey)=>{emitWith(placeholder,keydown(),{raw:{which:9,shiftKey:shiftKey}})},onFocus=(container,targetComp)=>{const target=targetComp.element;has(target,beforeObject)?triggerTab(container,!0):has(target,afterObject)&&triggerTab(container,!1)},isPseudoStop=element=>closest(element,["."+beforeObject,"."+afterObject].join(","),never),dialogChannel=generate$6("update-dialog"),titleChannel=generate$6("update-title"),bodyChannel=generate$6("update-body"),footerChannel=generate$6("update-footer"),bodySendMessageChannel=generate$6("body-send-message"),dialogFocusShiftedChannel=generate$6("dialog-focus-shifted"),browser=detect$2().browser,isSafari=browser.isSafari(),isFirefox=browser.isFirefox(),isSafariOrFirefox=isSafari||isFirefox,isChromium=browser.isChromium(),isElementScrollAtBottom=({scrollTop:scrollTop,scrollHeight:scrollHeight,clientHeight:clientHeight})=>Math.ceil(scrollTop)+clientHeight>=scrollHeight,scrollToY=(win,y)=>win.scrollTo(0,"bottom"===y?99999999:y),writeValue=(iframeElement,html,fallbackFn)=>{const iframe=iframeElement.dom;Optional.from(iframe.contentDocument).fold(fallbackFn,(doc=>{let lastScrollTop=0;const isScrollAtBottom=((doc,html)=>{const body=doc.body;return Optional.from(!/^<!DOCTYPE (html|HTML)/.test(html)&&(!isChromium&&!isSafari||isNonNullable(body)&&(0!==body.scrollTop||Math.abs(body.scrollHeight-body.clientHeight)>1))?body:doc.documentElement)})(doc,html).map((el=>(lastScrollTop=el.scrollTop,el))).forall(isElementScrollAtBottom),scrollAfterWrite=()=>{const win=iframe.contentWindow;isNonNullable(win)&&(isScrollAtBottom?scrollToY(win,"bottom"):!isScrollAtBottom&&isSafariOrFirefox&&0!==lastScrollTop&&scrollToY(win,lastScrollTop))};isSafari&&iframe.addEventListener("load",scrollAfterWrite,{once:!0}),doc.open(),doc.write(html),doc.close(),isSafari||scrollAfterWrite()}))},writeValueThrottler=someIf(isSafariOrFirefox,isSafari?500:200).map((interval=>((fn,rate)=>{let timer=null,args=null;return{cancel:()=>{isNull(timer)||(clearTimeout(timer),timer=null,args=null)},throttle:(...newArgs)=>{args=newArgs,isNull(timer)&&(timer=setTimeout((()=>{const tempArgs=args;timer=null,args=null,fn.apply(null,tempArgs)}),rate))}}})(writeValue,interval))),renderIFrame=(spec,providersBackstage,initialData)=>{const opaqueClass=spec.transparent?[]:["tox-dialog__iframe--opaque"],containerBorderedClass=spec.border?["tox-navobj-bordered"]:[],attributes={...spec.label.map((title=>({title:title}))).getOr({}),...initialData.map((html=>({srcdoc:html}))).getOr({}),...spec.sandboxed?{sandbox:"allow-scripts allow-same-origin"}:{}},sourcing=((initialData,stream)=>{const cachedValue=Cell(initialData.getOr(""));return{getValue:_frameComponent=>cachedValue.get(),setValue:(frameComponent,html)=>{if(cachedValue.get()!==html){const iframeElement=frameComponent.element,setSrcdocValue=()=>set$9(iframeElement,"srcdoc",html);stream?writeValueThrottler.fold(constant$1(writeValue),(throttler=>throttler.throttle))(iframeElement,html,setSrcdocValue):setSrcdocValue()}cachedValue.set(html)}}})(initialData,spec.streamContent),pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),pField=FormField.parts.field({factory:{sketch:newSpec=>craft(Optional.from(containerBorderedClass),{uid:newSpec.uid,dom:{tag:"iframe",attributes:attributes,classes:["tox-dialog__iframe",...opaqueClass]},behaviours:derive$1([Tabstopping.config({}),Focusing.config({}),withComp(initialData,sourcing.getValue,sourcing.setValue),Receiving.config({channels:{[dialogFocusShiftedChannel]:{onReceive:(comp,message)=>{message.newFocus.each((newFocus=>{parentElement(comp.element).each((parent=>{(eq(comp.element,newFocus)?add$2:remove$2)(parent,"tox-navobj-bordered-focus")}))}))}}}})])})}});return renderFormFieldWith(pLabel,pField,["tox-form__group--stretched"],[])},renderImagePreview=(spec,initialData)=>{const cachedData=Cell(initialData.getOr({url:""})),memImage=record({dom:{tag:"img",classes:["tox-imagepreview__image"],attributes:initialData.map((data=>({src:data.url}))).getOr({})}}),memContainer=record({dom:{tag:"div",classes:["tox-imagepreview__container"],attributes:{role:"presentation"}},components:[memImage.asSpec()]}),styles={};spec.height.each((h=>styles.height=h));const fakeValidatedData=initialData.map((d=>({url:d.url,zoom:Optional.from(d.zoom),cachedWidth:Optional.from(d.cachedWidth),cachedHeight:Optional.from(d.cachedHeight)})));return{dom:{tag:"div",classes:["tox-imagepreview"],styles:styles,attributes:{role:"presentation"}},components:[memContainer.asSpec()],behaviours:derive$1([ComposingConfigs_self(),withComp(fakeValidatedData,(()=>cachedData.get()),((frameComponent,data)=>{const translatedData={url:data.url};data.zoom.each((z=>translatedData.zoom=z)),data.cachedWidth.each((z=>translatedData.cachedWidth=z)),data.cachedHeight.each((z=>translatedData.cachedHeight=z)),cachedData.set(translatedData);const applyFramePositioning=()=>{const{cachedWidth:cachedWidth,cachedHeight:cachedHeight,zoom:zoom}=translatedData;if(!isUndefined(cachedWidth)&&!isUndefined(cachedHeight)){if(isUndefined(zoom)){const z=((panel,width,height)=>{const panelW=get$c(panel),panelH=get$d(panel);return Math.min(panelW/width,panelH/height,1)})(frameComponent.element,cachedWidth,cachedHeight);translatedData.zoom=z}const position=((panelWidth,panelHeight,imageWidth,imageHeight,zoom)=>{const width=imageWidth*zoom,height=imageHeight*zoom,left=Math.max(0,panelWidth/2-width/2),top=Math.max(0,panelHeight/2-height/2);return{left:left.toString()+"px",top:top.toString()+"px",width:width.toString()+"px",height:height.toString()+"px"}})(get$c(frameComponent.element),get$d(frameComponent.element),cachedWidth,cachedHeight,translatedData.zoom);memContainer.getOpt(frameComponent).each((container=>{setAll(container.element,position)}))}};memImage.getOpt(frameComponent).each((imageComponent=>{const img=imageComponent.element;data.url!==get$f(img,"src")&&(set$9(img,"src",data.url),remove$2(frameComponent.element,"tox-imagepreview__loaded")),applyFramePositioning(),(image=>new Promise(((resolve,reject)=>{const loaded=()=>{destroy(),resolve(image)},listeners=[bind(image,"load",loaded),bind(image,"error",(()=>{destroy(),reject("Unable to load data from image: "+image.dom.src)}))],destroy=()=>each$1(listeners,(l=>l.unbind()));image.dom.complete&&loaded()})))(img).then((img=>{frameComponent.getSystem().isConnected()&&(add$2(frameComponent.element,"tox-imagepreview__loaded"),translatedData.cachedWidth=img.dom.naturalWidth,translatedData.cachedHeight=img.dom.naturalHeight,applyFramePositioning())}))}))}))])}},internalToolbarButtonExecute=generate$6("toolbar.button.execute"),commonButtonDisplayEvent=generate$6("common-button-display-events"),toolbarButtonEventOrder={[execute$5()]:["disabling","alloy.base.behaviour","toggling","toolbar-button-events"],[attachedToDom()]:["toolbar-button-events",commonButtonDisplayEvent],[mousedown()]:["focusing","alloy.base.behaviour",commonButtonDisplayEvent]},forceInitialSize=comp=>set$8(comp.element,"width",get$e(comp.element,"width")),renderIcon$1=(iconName,iconsProvider,behaviours)=>render$3(iconName,{tag:"span",classes:["tox-icon","tox-tbtn__icon-wrap"],behaviours:behaviours},iconsProvider),renderIconFromPack$1=(iconName,iconsProvider)=>renderIcon$1(iconName,iconsProvider,[]),renderReplaceableIconFromPack=(iconName,iconsProvider)=>renderIcon$1(iconName,iconsProvider,[Replacing.config({})]),renderLabel$1=(text,prefix,providersBackstage)=>({dom:{tag:"span",classes:[`${prefix}__select-label`]},components:[text$2(providersBackstage.translate(text))],behaviours:derive$1([Replacing.config({})])}),updateMenuText=generate$6("update-menu-text"),updateMenuIcon=generate$6("update-menu-icon"),renderCommonDropdown=(spec,prefix,sharedBackstage)=>{const editorOffCell=Cell(noop),optMemDisplayText=spec.text.map((text=>record(renderLabel$1(text,prefix,sharedBackstage.providers)))),optMemDisplayIcon=spec.icon.map((iconName=>record(renderReplaceableIconFromPack(iconName,sharedBackstage.providers.icons)))),onLeftOrRightInMenu=(comp,se)=>{const dropdown=Representing.getValue(comp);return Focusing.focus(dropdown),emitWith(dropdown,"keydown",{raw:se.event.raw}),Dropdown.close(dropdown),Optional.some(!0)},role=spec.role.fold((()=>({})),(role=>({role:role}))),tooltipAttributes=spec.tooltip.fold((()=>({})),(tooltip=>{const translatedTooltip=sharedBackstage.providers.translate(tooltip);return{title:translatedTooltip,"aria-label":translatedTooltip}})),iconSpec=render$3("chevron-down",{tag:"div",classes:[`${prefix}__select-chevron`]},sharedBackstage.providers.icons),fixWidthBehaviourName=generate$6("common-button-display-events"),memDropdown=record(Dropdown.sketch({...spec.uid?{uid:spec.uid}:{},...role,dom:{tag:"button",classes:[prefix,`${prefix}--select`].concat(map$2(spec.classes,(c=>`${prefix}--${c}`))),attributes:{...tooltipAttributes}},components:componentRenderPipeline([optMemDisplayIcon.map((mem=>mem.asSpec())),optMemDisplayText.map((mem=>mem.asSpec())),Optional.some(iconSpec)]),matchWidth:!0,useMinWidth:!0,onOpen:(anchor,dropdownComp,tmenuComp)=>{spec.searchable&&(tmenuComp=>{findWithinMenu(tmenuComp).each((searcherComp=>Focusing.focus(searcherComp)))})(tmenuComp)},dropdownBehaviours:derive$1([...spec.dropdownBehaviours,DisablingConfigs_button((()=>spec.disabled||sharedBackstage.providers.isDisabled())),receivingConfig(),Unselecting.config({}),Replacing.config({}),config("dropdown-events",[onControlAttached(spec,editorOffCell),onControlDetached(spec,editorOffCell)]),config(fixWidthBehaviourName,[runOnAttached(((comp,_se)=>forceInitialSize(comp)))]),config("menubutton-update-display-text",[run$1(updateMenuText,((comp,se)=>{optMemDisplayText.bind((mem=>mem.getOpt(comp))).each((displayText=>{Replacing.set(displayText,[text$2(sharedBackstage.providers.translate(se.event.text))])}))})),run$1(updateMenuIcon,((comp,se)=>{optMemDisplayIcon.bind((mem=>mem.getOpt(comp))).each((displayIcon=>{Replacing.set(displayIcon,[renderReplaceableIconFromPack(se.event.icon,sharedBackstage.providers.icons)])}))}))])]),eventOrder:deepMerge(toolbarButtonEventOrder,{mousedown:["focusing","alloy.base.behaviour","item-type-events","normal-dropdown-events"],[attachedToDom()]:["toolbar-button-events","dropdown-events",fixWidthBehaviourName]}),sandboxBehaviours:derive$1([Keying.config({mode:"special",onLeft:onLeftOrRightInMenu,onRight:onLeftOrRightInMenu}),config("dropdown-sandbox-events",[run$1(refetchTriggerEvent,((originalSandboxComp,se)=>{handleRefetchTrigger(originalSandboxComp),se.stop()})),run$1(redirectMenuItemInteractionEvent,((sandboxComp,se)=>{((sandboxComp,se)=>{getActiveMenuItemFrom(sandboxComp).each((activeItem=>{((component,target,eventName,properties)=>{const data={...properties,target:target};component.getSystem().triggerEvent(eventName,target,data)})(sandboxComp,activeItem.element,se.event.eventType,se.event.interactionEvent)}))})(sandboxComp,se),se.stop()}))])]),lazySink:sharedBackstage.getSink,toggleClass:`${prefix}--active`,parts:{menu:{...part(0,spec.columns,spec.presets),fakeFocus:spec.searchable,onHighlightItem:updateAriaOnHighlight,onCollapseMenu:(tmenuComp,itemCompCausingCollapse,nowActiveMenuComp)=>{Highlighting.getHighlighted(nowActiveMenuComp).each((itemComp=>{updateAriaOnHighlight(tmenuComp,nowActiveMenuComp,itemComp)}))},onDehighlightItem:updateAriaOnDehighlight}},getAnchorOverrides:()=>({maxHeightFunction:(element,available)=>{anchored()(element,available-10)}}),fetch:comp=>Future_nu(curry(spec.fetch,comp))}));return memDropdown.asSpec()},isSeparator$2=item=>"separator"===item.type,separator$2={type:"separator"},unwrapReferences=(items,menuItems)=>{const realItems=foldl(items,((acc,item)=>(item=>isString(item))(item)?""===item?acc:"|"===item?acc.length>0&&!isSeparator$2(acc[acc.length-1])?acc.concat([separator$2]):acc:has$2(menuItems,item.toLowerCase())?acc.concat([menuItems[item.toLowerCase()]]):acc:acc.concat([item])),[]);return realItems.length>0&&isSeparator$2(realItems[realItems.length-1])&&realItems.pop(),realItems},expand=(items,menuItems)=>{const realItems=unwrapReferences(isString(items)?items.split(" "):items,menuItems);return foldr(realItems,((acc,item)=>{if((item=>has$2(item,"getSubmenuItems"))(item)){const itemWithValue=(item=>{const itemValue=get$g(item,"value").getOrThunk((()=>generate$6("generated-menu-item")));return deepMerge({value:itemValue},item)})(item),newData=((item,menuItems)=>{const submenuItems=item.getSubmenuItems(),rest=expand(submenuItems,menuItems);return{item:item,menus:deepMerge(rest.menus,{[item.value]:rest.items}),expansions:deepMerge(rest.expansions,{[item.value]:item.value})}})(itemWithValue,menuItems);return{menus:deepMerge(acc.menus,newData.menus),items:[newData.item,...acc.items],expansions:deepMerge(acc.expansions,newData.expansions)}}return{...acc,items:[item,...acc.items]}}),{menus:{},expansions:{},items:[]})},build=(items,itemResponse,backstage,settings)=>{const primary=generate$6("primary-menu"),data=expand(items,backstage.shared.providers.menuItems());if(0===data.items.length)return Optional.none();const mainMenuSearchMode=(settings=>settings.search.fold((()=>({searchMode:"no-search"})),(searchSettings=>({searchMode:"search-with-field",placeholder:searchSettings.placeholder}))))(settings),mainMenu=createPartialMenu(primary,data.items,itemResponse,backstage,settings.isHorizontalMenu,mainMenuSearchMode),submenuSearchMode=(settings=>settings.search.fold((()=>({searchMode:"no-search"})),(_=>({searchMode:"search-with-results"}))))(settings),submenus=map$1(data.menus,((menuItems,menuName)=>createPartialMenu(menuName,menuItems,itemResponse,backstage,!1,submenuSearchMode))),menus=deepMerge(submenus,wrap$1(primary,mainMenu));return Optional.from(tieredMenu.tieredData(primary,menus,data.expansions))},isSingleListItem=item=>!has$2(item,"items"),fetchItems=(dropdownComp,name,items,selectedValue)=>map$2(items,(item=>isSingleListItem(item)?{type:"togglemenuitem",text:item.text,value:item.value,active:item.value===selectedValue,onAction:()=>{Representing.setValue(dropdownComp,item.value),emitWith(dropdownComp,formChangeEvent,{name:name}),Focusing.focus(dropdownComp)}}:{type:"nestedmenuitem",text:item.text,getSubmenuItems:()=>fetchItems(dropdownComp,name,item.items,selectedValue)})),findItemByValue=(items,value)=>findMap(items,(item=>isSingleListItem(item)?someIf(item.value===value,item):findItemByValue(item.items,value))),HtmlSelect=single({name:"HtmlSelect",configFields:[required$1("options"),field("selectBehaviours",[Focusing,Representing]),defaulted("selectClasses",[]),defaulted("selectAttributes",{}),option$3("data")],factory:(detail,_spec)=>{const options=map$2(detail.options,(option=>({dom:{tag:"option",value:option.value,innerHtml:option.text}}))),initialValues=detail.data.map((v=>wrap$1("initialValue",v))).getOr({});return{uid:detail.uid,dom:{tag:"select",classes:detail.selectClasses,attributes:detail.selectAttributes},components:options,behaviours:augment(detail.selectBehaviours,[Focusing.config({}),Representing.config({store:{mode:"manual",getValue:select=>get$6(select.element),setValue:(select,newValue)=>{const firstOption=head(detail.options);find$5(detail.options,(opt=>opt.value===newValue)).isSome()?set$5(select.element,newValue):-1===select.element.dom.selectedIndex&&""===newValue&&firstOption.each((value=>set$5(select.element,value.value)))},...initialValues}})])}}}),schema$h=constant$1([defaulted("field1Name","field1"),defaulted("field2Name","field2"),onStrictHandler("onLockedChange"),markers$1(["lockClass"]),defaulted("locked",!1),SketchBehaviours_field("coupledFieldBehaviours",[Composing,Representing])]),coupledPart=(selfName,otherName)=>required({factory:FormField,name:selfName,overrides:detail=>({fieldBehaviours:derive$1([config("coupled-input-behaviour",[run$1(input(),(me=>{((comp,detail,partName)=>getPart(comp,detail,partName).bind(Composing.getCurrent))(me,detail,otherName).each((other=>{getPart(me,detail,"lock").each((lock=>{Toggling.isOn(lock)&&detail.onLockedChange(me,other,lock)}))}))}))])])})}),parts$c=constant$1([coupledPart("field1","field2"),coupledPart("field2","field1"),required({factory:Button,schema:[required$1("dom")],name:"lock",overrides:detail=>({buttonBehaviours:derive$1([Toggling.config({selected:detail.locked,toggleClass:detail.markers.lockClass,aria:{mode:"pressed"}})])})})]),FormCoupledInputs=composite({name:"FormCoupledInputs",configFields:schema$h(),partFields:parts$c(),factory:(detail,components,_spec,_externals)=>({uid:detail.uid,dom:detail.dom,components:components,behaviours:SketchBehaviours_augment(detail.coupledFieldBehaviours,[Composing.config({find:Optional.some}),Representing.config({store:{mode:"manual",getValue:comp=>{const parts=getPartsOrDie(comp,detail,["field1","field2"]);return{[detail.field1Name]:Representing.getValue(parts.field1()),[detail.field2Name]:Representing.getValue(parts.field2())}},setValue:(comp,value)=>{const parts=getPartsOrDie(comp,detail,["field1","field2"]);hasNonNullableKey(value,detail.field1Name)&&Representing.setValue(parts.field1(),value[detail.field1Name]),hasNonNullableKey(value,detail.field2Name)&&Representing.setValue(parts.field2(),value[detail.field2Name])}}})]),apis:{getField1:component=>getPart(component,detail,"field1"),getField2:component=>getPart(component,detail,"field2"),getLock:component=>getPart(component,detail,"lock")}}),apis:{getField1:(apis,component)=>apis.getField1(component),getField2:(apis,component)=>apis.getField2(component),getLock:(apis,component)=>apis.getLock(component)}}),parseSize=sizeText=>{const match=/^\s*(\d+(?:\.\d+)?)\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\s*$/.exec(sizeText);if(null!==match){const value=parseFloat(match[1]),unit=match[2];return Result.value({value:value,unit:unit})}return Result.error(sizeText)},convertUnit=(size,unit)=>{const inInch={"":96,px:96,pt:72,cm:2.54,pc:12,mm:25.4,in:1},supported=u=>has$2(inInch,u);return size.unit===unit?Optional.some(size.value):supported(size.unit)&&supported(unit)?inInch[size.unit]===inInch[unit]?Optional.some(size.value):Optional.some(size.value/inInch[size.unit]*inInch[unit]):Optional.none()},noSizeConversion=_input=>Optional.none(),makeRatioConverter=(currentFieldText,otherFieldText)=>{const cValue=parseSize(currentFieldText).toOptional(),oValue=parseSize(otherFieldText).toOptional();return lift2(cValue,oValue,((cSize,oSize)=>convertUnit(cSize,oSize.unit).map((val=>oSize.value/val)).map((r=>{return scale=r,unit=oSize.unit,size=>convertUnit(size,unit).map((value=>({value:value*scale,unit:unit})));var scale,unit})).getOr(noSizeConversion))).getOr(noSizeConversion)},renderTextField=(spec,providersBackstage)=>{const pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),baseInputBehaviours=[Disabling.config({disabled:()=>spec.disabled||providersBackstage.isDisabled()}),receivingConfig(),Keying.config({mode:"execution",useEnter:!0!==spec.multiline,useControlEnter:!0===spec.multiline,execute:comp=>(emit(comp,formSubmitEvent),Optional.some(!0))}),config("textfield-change",[run$1(input(),((component,_)=>{emitWith(component,formChangeEvent,{name:spec.name})})),run$1(postPaste(),((component,_)=>{emitWith(component,formChangeEvent,{name:spec.name})}))]),Tabstopping.config({})],validatingBehaviours=spec.validation.map((vl=>Invalidating.config({getRoot:input=>parentElement(input.element),invalidClass:"tox-invalid",validator:{validate:input=>{const v=Representing.getValue(input),result=vl.validator(v);return Future_pure(!0===result?Result.value(v):Result.error(result))},validateOnLoad:vl.validateOnLoad}}))).toArray(),inputAttributes={...spec.placeholder.fold(constant$1({}),(p=>({placeholder:providersBackstage.translate(p)}))),...spec.inputMode.fold(constant$1({}),(mode=>({inputmode:mode})))},pField=FormField.parts.field({tag:!0===spec.multiline?"textarea":"input",...spec.data.map((data=>({data:data}))).getOr({}),inputAttributes:inputAttributes,inputClasses:[spec.classname],inputBehaviours:derive$1(flatten([baseInputBehaviours,validatingBehaviours])),selectOnFocus:!1,factory:Input}),pTextField=spec.multiline?{dom:{tag:"div",classes:["tox-textarea-wrap"]},components:[pField]}:pField,extraClasses2=(spec.flex?["tox-form__group--stretched"]:[]).concat(spec.maximized?["tox-form-group--maximize"]:[]),extraBehaviours=[Disabling.config({disabled:()=>spec.disabled||providersBackstage.isDisabled(),onDisabled:comp=>{FormField.getField(comp).each(Disabling.disable)},onEnabled:comp=>{FormField.getField(comp).each(Disabling.enable)}}),receivingConfig()];return renderFormFieldWith(pLabel,pTextField,extraClasses2,extraBehaviours)},getAnimationRoot=(component,slideConfig)=>slideConfig.getAnimationRoot.fold((()=>component.element),(get=>get(component))),getDimensionProperty=slideConfig=>slideConfig.dimension.property,getDimension=(slideConfig,elem)=>slideConfig.dimension.getDimension(elem),disableTransitions=(component,slideConfig)=>{const root=getAnimationRoot(component,slideConfig);remove$1(root,[slideConfig.shrinkingClass,slideConfig.growingClass])},setShrunk=(component,slideConfig)=>{remove$2(component.element,slideConfig.openClass),add$2(component.element,slideConfig.closedClass),set$8(component.element,getDimensionProperty(slideConfig),"0px"),reflow(component.element)},setGrown=(component,slideConfig)=>{remove$2(component.element,slideConfig.closedClass),add$2(component.element,slideConfig.openClass),remove$6(component.element,getDimensionProperty(slideConfig))},doImmediateShrink=(component,slideConfig,slideState,_calculatedSize)=>{slideState.setCollapsed(),set$8(component.element,getDimensionProperty(slideConfig),getDimension(slideConfig,component.element)),disableTransitions(component,slideConfig),setShrunk(component,slideConfig),slideConfig.onStartShrink(component),slideConfig.onShrunk(component)},doStartShrink=(component,slideConfig,slideState,calculatedSize)=>{const size=calculatedSize.getOrThunk((()=>getDimension(slideConfig,component.element)));slideState.setCollapsed(),set$8(component.element,getDimensionProperty(slideConfig),size),reflow(component.element);const root=getAnimationRoot(component,slideConfig);remove$2(root,slideConfig.growingClass),add$2(root,slideConfig.shrinkingClass),setShrunk(component,slideConfig),slideConfig.onStartShrink(component)},doStartSmartShrink=(component,slideConfig,slideState)=>{const size=getDimension(slideConfig,component.element);("0px"===size?doImmediateShrink:doStartShrink)(component,slideConfig,slideState,Optional.some(size))},doStartGrow=(component,slideConfig,slideState)=>{const root=getAnimationRoot(component,slideConfig),wasShrinking=has(root,slideConfig.shrinkingClass),beforeSize=getDimension(slideConfig,component.element);setGrown(component,slideConfig);const fullSize=getDimension(slideConfig,component.element);(wasShrinking?()=>{set$8(component.element,getDimensionProperty(slideConfig),beforeSize),reflow(component.element)}:()=>{setShrunk(component,slideConfig)})(),remove$2(root,slideConfig.shrinkingClass),add$2(root,slideConfig.growingClass),setGrown(component,slideConfig),set$8(component.element,getDimensionProperty(slideConfig),fullSize),slideState.setExpanded(),slideConfig.onStartGrow(component)},isGrowing=(component,slideConfig,_slideState)=>{const root=getAnimationRoot(component,slideConfig);return!0===has(root,slideConfig.growingClass)},isShrinking=(component,slideConfig,_slideState)=>{const root=getAnimationRoot(component,slideConfig);return!0===has(root,slideConfig.shrinkingClass)};var SlidingApis=Object.freeze({__proto__:null,refresh:(component,slideConfig,slideState)=>{if(slideState.isExpanded()){remove$6(component.element,getDimensionProperty(slideConfig));const fullSize=getDimension(slideConfig,component.element);set$8(component.element,getDimensionProperty(slideConfig),fullSize)}},grow:(component,slideConfig,slideState)=>{slideState.isExpanded()||doStartGrow(component,slideConfig,slideState)},shrink:(component,slideConfig,slideState)=>{slideState.isExpanded()&&doStartSmartShrink(component,slideConfig,slideState)},immediateShrink:(component,slideConfig,slideState)=>{slideState.isExpanded()&&doImmediateShrink(component,slideConfig,slideState)},hasGrown:(component,slideConfig,slideState)=>slideState.isExpanded(),hasShrunk:(component,slideConfig,slideState)=>slideState.isCollapsed(),isGrowing:isGrowing,isShrinking:isShrinking,isTransitioning:(component,slideConfig,slideState)=>isGrowing(component,slideConfig)||isShrinking(component,slideConfig),toggleGrow:(component,slideConfig,slideState)=>{(slideState.isExpanded()?doStartSmartShrink:doStartGrow)(component,slideConfig,slideState)},disableTransitions:disableTransitions,immediateGrow:(component,slideConfig,slideState)=>{slideState.isExpanded()||(setGrown(component,slideConfig),set$8(component.element,getDimensionProperty(slideConfig),getDimension(slideConfig,component.element)),disableTransitions(component,slideConfig),slideState.setExpanded(),slideConfig.onStartGrow(component),slideConfig.onGrown(component))}});var ActiveSliding=Object.freeze({__proto__:null,exhibit:(base,slideConfig,_slideState)=>{const expanded=slideConfig.expanded;return nu$7(expanded?{classes:[slideConfig.openClass],styles:{}}:{classes:[slideConfig.closedClass],styles:wrap$1(slideConfig.dimension.property,"0px")})},events:(slideConfig,slideState)=>derive$2([runOnSource(transitionend(),((component,simulatedEvent)=>{if(simulatedEvent.event.raw.propertyName===slideConfig.dimension.property){disableTransitions(component,slideConfig),slideState.isExpanded()&&remove$6(component.element,slideConfig.dimension.property);(slideState.isExpanded()?slideConfig.onGrown:slideConfig.onShrunk)(component)}}))])}),SlidingSchema=[required$1("closedClass"),required$1("openClass"),required$1("shrinkingClass"),required$1("growingClass"),option$3("getAnimationRoot"),onHandler("onShrunk"),onHandler("onStartShrink"),onHandler("onGrown"),onHandler("onStartGrow"),defaulted("expanded",!1),requiredOf("dimension",choose$1("property",{width:[output$1("property","width"),output$1("getDimension",(elem=>get$c(elem)+"px"))],height:[output$1("property","height"),output$1("getDimension",(elem=>get$d(elem)+"px"))]}))];const Sliding=create$4({fields:SlidingSchema,name:"sliding",active:ActiveSliding,apis:SlidingApis,state:Object.freeze({__proto__:null,init:spec=>{const state=Cell(spec.expanded);return nu$8({isExpanded:()=>!0===state.get(),isCollapsed:()=>!1===state.get(),setCollapsed:curry(state.set,!1),setExpanded:curry(state.set,!0),readState:()=>"expanded: "+state.get()})}})}),getMenuButtonApi=component=>({isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state),setActive:state=>{const elm=component.element;state?(add$2(elm,"tox-tbtn--enabled"),set$9(elm,"aria-pressed",!0)):(remove$2(elm,"tox-tbtn--enabled"),remove$7(elm,"aria-pressed"))},isActive:()=>has(component.element,"tox-tbtn--enabled"),setText:text=>{emitWith(component,updateMenuText,{text:text})},setIcon:icon=>emitWith(component,updateMenuIcon,{icon:icon})}),renderMenuButton=(spec,prefix,backstage,role,tabstopping=!0)=>renderCommonDropdown({text:spec.text,icon:spec.icon,tooltip:spec.tooltip,searchable:spec.search.isSome(),role:role,fetch:(dropdownComp,callback)=>{const fetchContext={pattern:spec.search.isSome()?getSearchPattern(dropdownComp):""};spec.fetch((items=>{callback(build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,{isHorizontalMenu:!1,search:spec.search}))}),fetchContext,getMenuButtonApi(dropdownComp))},onSetup:spec.onSetup,getApi:getMenuButtonApi,columns:1,presets:"normal",classes:[],dropdownBehaviours:[...tabstopping?[Tabstopping.config({})]:[]]},prefix,backstage.shared),getFetch=(items,getButton,backstage)=>{const getMenuItemAction=item=>api=>{const newValue=!api.isActive();api.setActive(newValue),item.storage.set(newValue),backstage.shared.getSink().each((sink=>{getButton().getOpt(sink).each((orig=>{focus$3(orig.element),emitWith(orig,formActionEvent,{name:item.name,value:item.storage.get()})}))}))},getMenuItemSetup=item=>api=>{api.setActive(item.storage.get())};return success=>{success(map$2(items,(item=>{const text=item.text.fold((()=>({})),(text=>({text:text})));return{type:item.type,active:!1,...text,onAction:getMenuItemAction(item),onSetup:getMenuItemSetup(item)}})))}},renderLabel=text=>({dom:{tag:"span",classes:["tox-tree__label"],attributes:{title:text,"aria-label":text}},components:[text$2(text)]}),leafLabelEventsId=generate$6("leaf-label-event-id"),renderLeafLabel=({leaf:leaf,onLeafAction:onLeafAction,visible:visible,treeId:treeId,selectedId:selectedId,backstage:backstage})=>{const internalMenuButton=leaf.menu.map((btn=>renderMenuButton(btn,"tox-mbtn",backstage,Optional.none(),visible))),components=[renderLabel(leaf.title)];return internalMenuButton.each((btn=>components.push(btn))),Button.sketch({dom:{tag:"div",classes:["tox-tree--leaf__label","tox-trbtn"].concat(visible?["tox-tree--leaf__label--visible"]:[])},components:components,role:"treeitem",action:button=>{onLeafAction(leaf.id),button.getSystem().broadcastOn([`update-active-item-${treeId}`],{value:leaf.id})},eventOrder:{[keydown()]:[leafLabelEventsId,"keying"]},buttonBehaviours:derive$1([...visible?[Tabstopping.config({})]:[],Toggling.config({toggleClass:"tox-trbtn--enabled",toggleOnExecute:!1,aria:{mode:"selected"}}),Receiving.config({channels:{[`update-active-item-${treeId}`]:{onReceive:(comp,message)=>{(message.value===leaf.id?Toggling.on:Toggling.off)(comp)}}}}),config(leafLabelEventsId,[runOnAttached(((comp,_se)=>{selectedId.each((id=>{(id===leaf.id?Toggling.on:Toggling.off)(comp)}))})),run$1(keydown(),((comp,se)=>{const isLeftArrowKey="ArrowLeft"===se.event.raw.code,isRightArrowKey="ArrowRight"===se.event.raw.code;isLeftArrowKey?(ancestor(comp.element,".tox-tree--directory").each((dirElement=>{comp.getSystem().getByDom(dirElement).each((dirComp=>{child(dirElement,".tox-tree--directory__label").each((dirLabelElement=>{dirComp.getSystem().getByDom(dirLabelElement).each(Focusing.focus)}))}))})),se.stop()):isRightArrowKey&&se.stop()}))])])})},renderIconFromPack=(iconName,iconsProvider)=>((iconName,iconsProvider,behaviours)=>render$3(iconName,{tag:"span",classes:["tox-tree__icon-wrap","tox-icon"],behaviours:behaviours},iconsProvider))(iconName,iconsProvider,[]),directoryLabelEventsId=generate$6("directory-label-event-id"),renderDirectoryLabel=({directory:directory,visible:visible,noChildren:noChildren,backstage:backstage})=>{const internalMenuButton=directory.menu.map((btn=>renderMenuButton(btn,"tox-mbtn",backstage,Optional.none()))),components=[{dom:{tag:"div",classes:["tox-chevron"]},components:[renderIconFromPack("chevron-right",backstage.shared.providers.icons)]},renderLabel(directory.title)];internalMenuButton.each((btn=>{components.push(btn)}));const toggleExpandChildren=button=>{ancestor(button.element,".tox-tree--directory").each((directoryEle=>{button.getSystem().getByDom(directoryEle).each((directoryComp=>{const willExpand=!Toggling.isOn(directoryComp);Toggling.toggle(directoryComp),emitWith(button,"expand-tree-node",{expanded:willExpand,node:directory.id})}))}))};return Button.sketch({dom:{tag:"div",classes:["tox-tree--directory__label","tox-trbtn"].concat(visible?["tox-tree--directory__label--visible"]:[])},components:components,action:toggleExpandChildren,eventOrder:{[keydown()]:[directoryLabelEventsId,"keying"]},buttonBehaviours:derive$1([...visible?[Tabstopping.config({})]:[],config(directoryLabelEventsId,[run$1(keydown(),((comp,se)=>{const isRightArrowKey="ArrowRight"===se.event.raw.code,isLeftArrowKey="ArrowLeft"===se.event.raw.code;isRightArrowKey&&noChildren&&se.stop(),(isRightArrowKey||isLeftArrowKey)&&ancestor(comp.element,".tox-tree--directory").each((directoryEle=>{comp.getSystem().getByDom(directoryEle).each((directoryComp=>{!Toggling.isOn(directoryComp)&&isRightArrowKey||Toggling.isOn(directoryComp)&&isLeftArrowKey?(toggleExpandChildren(comp),se.stop()):isLeftArrowKey&&!Toggling.isOn(directoryComp)&&(ancestor(directoryComp.element,".tox-tree--directory").each((parentDirElement=>{child(parentDirElement,".tox-tree--directory__label").each((parentDirLabelElement=>{directoryComp.getSystem().getByDom(parentDirLabelElement).each(Focusing.focus)}))})),se.stop())}))}))}))])])})},renderDirectoryChildren=({children:children,onLeafAction:onLeafAction,visible:visible,treeId:treeId,expandedIds:expandedIds,selectedId:selectedId,backstage:backstage})=>({dom:{tag:"div",classes:["tox-tree--directory__children"]},components:children.map((item=>"leaf"===item.type?renderLeafLabel({leaf:item,selectedId:selectedId,onLeafAction:onLeafAction,visible:visible,treeId:treeId,backstage:backstage}):renderDirectory({directory:item,expandedIds:expandedIds,selectedId:selectedId,onLeafAction:onLeafAction,labelTabstopping:visible,treeId:treeId,backstage:backstage}))),behaviours:derive$1([Sliding.config({dimension:{property:"height"},closedClass:"tox-tree--directory__children--closed",openClass:"tox-tree--directory__children--open",growingClass:"tox-tree--directory__children--growing",shrinkingClass:"tox-tree--directory__children--shrinking",expanded:visible}),Replacing.config({})])}),directoryEventsId=generate$6("directory-event-id"),renderDirectory=({directory:directory,onLeafAction:onLeafAction,labelTabstopping:labelTabstopping,treeId:treeId,backstage:backstage,expandedIds:expandedIds,selectedId:selectedId})=>{const{children:children}=directory,expandedIdsCell=Cell(expandedIds),childrenVisible=expandedIds.includes(directory.id);return{dom:{tag:"div",classes:["tox-tree--directory"],attributes:{role:"treeitem"}},components:[renderDirectoryLabel({directory:directory,visible:labelTabstopping,noChildren:0===directory.children.length,backstage:backstage}),renderDirectoryChildren({children:children,expandedIds:expandedIds,selectedId:selectedId,onLeafAction:onLeafAction,visible:childrenVisible,treeId:treeId,backstage:backstage})],behaviours:derive$1([config(directoryEventsId,[runOnAttached(((comp,_se)=>{Toggling.set(comp,childrenVisible)})),run$1("expand-tree-node",((_cmp,se)=>{const{expanded:expanded,node:node}=se.event;expandedIdsCell.set(expanded?[...expandedIdsCell.get(),node]:expandedIdsCell.get().filter((id=>id!==node)))}))]),Toggling.config({...directory.children.length>0?{aria:{mode:"expanded"}}:{},toggleClass:"tox-tree--directory--expanded",onToggled:(comp,childrenVisible)=>{const childrenComp=comp.components()[1],newChildren=(visible=childrenVisible,children.map((item=>"leaf"===item.type?renderLeafLabel({leaf:item,selectedId:selectedId,onLeafAction:onLeafAction,visible:visible,treeId:treeId,backstage:backstage}):renderDirectory({directory:item,expandedIds:expandedIdsCell.get(),selectedId:selectedId,onLeafAction:onLeafAction,labelTabstopping:visible,treeId:treeId,backstage:backstage}))));var visible;childrenVisible?Sliding.grow(childrenComp):Sliding.shrink(childrenComp),Replacing.set(childrenComp,newChildren)}})])}},treeEventsId=generate$6("tree-event-id");var ActiveStreaming=Object.freeze({__proto__:null,events:(streamConfig,streamState)=>{const processor=streamConfig.stream.streams.setup(streamConfig,streamState);return derive$2([run$1(streamConfig.event,processor),runOnDetached((()=>streamState.cancel()))].concat(streamConfig.cancelEvent.map((e=>[run$1(e,(()=>streamState.cancel()))])).getOr([])))}});const throttle=_config=>{const state=Cell(null);return nu$8({readState:()=>({timer:null!==state.get()?"set":"unset"}),setTimer:t=>{state.set(t)},cancel:()=>{const t=state.get();null!==t&&t.cancel()}})};var StreamingState=Object.freeze({__proto__:null,throttle:throttle,init:spec=>spec.stream.streams.state(spec)});var StreamingSchema=[requiredOf("stream",choose$1("mode",{throttle:[required$1("delay"),defaulted("stopEvent",!0),output$1("streams",{setup:(streamInfo,streamState)=>{const sInfo=streamInfo.stream,throttler=last(streamInfo.onStream,sInfo.delay);return streamState.setTimer(throttler),(component,simulatedEvent)=>{throttler.throttle(component,simulatedEvent),sInfo.stopEvent&&simulatedEvent.stop()}},state:throttle})]})),defaulted("event","input"),option$3("cancelEvent"),onStrictHandler("onStream")];const Streaming=create$4({fields:StreamingSchema,name:"streaming",active:ActiveStreaming,state:StreamingState}),setValueFromItem=(model,input,item)=>{const itemData=Representing.getValue(item);Representing.setValue(input,itemData),setCursorAtEnd(input)},setSelectionOn=(input,f)=>{const el=input.element,value=get$6(el),node=el.dom;"number"!==get$f(el,"type")&&f(node,value)},setCursorAtEnd=input=>{setSelectionOn(input,((node,value)=>node.setSelectionRange(value.length,value.length)))},attemptSelectOver=(model,input,item)=>{if(model.selectsOver){const currentValue=Representing.getValue(input),inputDisplay=model.getDisplayText(currentValue),itemValue=Representing.getValue(item);return 0===model.getDisplayText(itemValue).indexOf(inputDisplay)?Optional.some((()=>{setValueFromItem(0,input,item),((input,startOffset)=>{setSelectionOn(input,((node,value)=>node.setSelectionRange(startOffset,value.length)))})(input,inputDisplay.length)})):Optional.none()}return Optional.none()},itemExecute=constant$1("alloy.typeahead.itemexecute"),schema$g=constant$1([option$3("lazySink"),required$1("fetch"),defaulted("minChars",5),defaulted("responseTime",1e3),onHandler("onOpen"),defaulted("getHotspot",Optional.some),defaulted("getAnchorOverrides",constant$1({})),defaulted("layouts",Optional.none()),defaulted("eventOrder",{}),defaultedObjOf("model",{},[defaulted("getDisplayText",(itemData=>void 0!==itemData.meta&&void 0!==itemData.meta.text?itemData.meta.text:itemData.value)),defaulted("selectsOver",!0),defaulted("populateFromBrowse",!0)]),onHandler("onSetValue"),onKeyboardHandler("onExecute"),onHandler("onItemExecute"),defaulted("inputClasses",[]),defaulted("inputAttributes",{}),defaulted("inputStyles",{}),defaulted("matchWidth",!0),defaulted("useMinWidth",!1),defaulted("dismissOnBlur",!0),markers$1(["openClass"]),option$3("initialData"),field("typeaheadBehaviours",[Focusing,Representing,Streaming,Keying,Toggling,Coupling]),customField("lazyTypeaheadComp",(()=>Cell(Optional.none))),customField("previewing",(()=>Cell(!0)))].concat(schema$l()).concat(sandboxFields())),parts$b=constant$1([external({schema:[tieredMenuMarkers()],name:"menu",overrides:detail=>({fakeFocus:!0,onHighlightItem:(_tmenu,menu,item)=>{detail.previewing.get()?detail.lazyTypeaheadComp.get().each((input=>{attemptSelectOver(detail.model,input,item).fold((()=>{detail.model.selectsOver?(Highlighting.dehighlight(menu,item),detail.previewing.set(!0)):detail.previewing.set(!1)}),(selectOverTextInInput=>{selectOverTextInInput(),detail.previewing.set(!1)}))})):detail.lazyTypeaheadComp.get().each((input=>{detail.model.populateFromBrowse&&setValueFromItem(detail.model,input,item),getOpt(item.element,"id").each((id=>set$9(input.element,"aria-activedescendant",id)))}))},onExecute:(_menu,item)=>detail.lazyTypeaheadComp.get().map((typeahead=>(emitWith(typeahead,itemExecute(),{item:item}),!0))),onHover:(menu,item)=>{detail.previewing.set(!1),detail.lazyTypeaheadComp.get().each((input=>{detail.model.populateFromBrowse&&setValueFromItem(detail.model,input,item)}))}})})]),Typeahead=composite({name:"Typeahead",configFields:schema$g(),partFields:parts$b(),factory:(detail,components,spec,externals)=>{const navigateList=(comp,simulatedEvent,highlighter)=>{detail.previewing.set(!1);const sandbox=Coupling.getCoupled(comp,"sandbox");if(Sandboxing.isOpen(sandbox))Composing.getCurrent(sandbox).each((menu=>{Highlighting.getHighlighted(menu).fold((()=>{highlighter(menu)}),(()=>{dispatchEvent(sandbox,menu.element,"keydown",simulatedEvent)}))}));else{const onOpenSync=sandbox=>{Composing.getCurrent(sandbox).each(highlighter)};open(detail,mapFetch(comp),comp,sandbox,externals,onOpenSync,HighlightOnOpen.HighlightMenuAndItem).get(noop)}},focusBehaviours$1=focusBehaviours(detail),mapFetch=comp=>tdata=>tdata.map((data=>{const menus=values(data.menus),items=bind$3(menus,(menu=>filter$2(menu.items,(item=>"item"===item.type))));return Representing.getState(comp).update(map$2(items,(item=>item.data))),data})),getActiveMenu=sandboxComp=>Composing.getCurrent(sandboxComp),behaviours=[Focusing.config({}),Representing.config({onSetValue:detail.onSetValue,store:{mode:"dataset",getDataKey:comp=>get$6(comp.element),getFallbackEntry:itemString=>({value:itemString,meta:{}}),setValue:(comp,data)=>{set$5(comp.element,detail.model.getDisplayText(data))},...detail.initialData.map((d=>wrap$1("initialValue",d))).getOr({})}}),Streaming.config({stream:{mode:"throttle",delay:detail.responseTime,stopEvent:!1},onStream:(component,_simulatedEvent)=>{const sandbox=Coupling.getCoupled(component,"sandbox");if(Focusing.isFocused(component)&&get$6(component.element).length>=detail.minChars){const previousValue=getActiveMenu(sandbox).bind((activeMenu=>Highlighting.getHighlighted(activeMenu).map(Representing.getValue)));detail.previewing.set(!0);const onOpenSync=_sandbox=>{getActiveMenu(sandbox).each((activeMenu=>{previousValue.fold((()=>{detail.model.selectsOver&&Highlighting.highlightFirst(activeMenu)}),(pv=>{Highlighting.highlightBy(activeMenu,(item=>Representing.getValue(item).value===pv.value)),Highlighting.getHighlighted(activeMenu).orThunk((()=>(Highlighting.highlightFirst(activeMenu),Optional.none())))}))}))};open(detail,mapFetch(component),component,sandbox,externals,onOpenSync,HighlightOnOpen.HighlightJustMenu).get(noop)}},cancelEvent:typeaheadCancel()}),Keying.config({mode:"special",onDown:(comp,simulatedEvent)=>(navigateList(comp,simulatedEvent,Highlighting.highlightFirst),Optional.some(!0)),onEscape:comp=>{const sandbox=Coupling.getCoupled(comp,"sandbox");return Sandboxing.isOpen(sandbox)?(Sandboxing.close(sandbox),Optional.some(!0)):Optional.none()},onUp:(comp,simulatedEvent)=>(navigateList(comp,simulatedEvent,Highlighting.highlightLast),Optional.some(!0)),onEnter:comp=>{const sandbox=Coupling.getCoupled(comp,"sandbox"),sandboxIsOpen=Sandboxing.isOpen(sandbox);if(sandboxIsOpen&&!detail.previewing.get())return getActiveMenu(sandbox).bind((activeMenu=>Highlighting.getHighlighted(activeMenu))).map((item=>(emitWith(comp,itemExecute(),{item:item}),!0)));{const currentValue=Representing.getValue(comp);return emit(comp,typeaheadCancel()),detail.onExecute(sandbox,comp,currentValue),sandboxIsOpen&&Sandboxing.close(sandbox),Optional.some(!0)}}}),Toggling.config({toggleClass:detail.markers.openClass,aria:{mode:"expanded"}}),Coupling.config({others:{sandbox:hotspot=>makeSandbox$1(detail,hotspot,{onOpen:()=>Toggling.on(hotspot),onClose:()=>{detail.lazyTypeaheadComp.get().each((input=>remove$7(input.element,"aria-activedescendant"))),Toggling.off(hotspot)}})}}),config("typeaheadevents",[runOnAttached((typeaheadComp=>{detail.lazyTypeaheadComp.set(Optional.some(typeaheadComp))})),runOnDetached((_typeaheadComp=>{detail.lazyTypeaheadComp.set(Optional.none())})),runOnExecute$1((comp=>{const onOpenSync=noop;togglePopup(detail,mapFetch(comp),comp,externals,onOpenSync,HighlightOnOpen.HighlightMenuAndItem).get(noop)})),run$1(itemExecute(),((comp,se)=>{const sandbox=Coupling.getCoupled(comp,"sandbox");setValueFromItem(detail.model,comp,se.event.item),emit(comp,typeaheadCancel()),detail.onItemExecute(comp,sandbox,se.event.item,Representing.getValue(comp)),Sandboxing.close(sandbox),setCursorAtEnd(comp)}))].concat(detail.dismissOnBlur?[run$1(postBlur(),(typeahead=>{const sandbox=Coupling.getCoupled(typeahead,"sandbox");search(sandbox.element).isNone()&&Sandboxing.close(sandbox)}))]:[]))],eventOrder={[detachedFromDom()]:[Representing.name(),Streaming.name(),"typeaheadevents"],...detail.eventOrder};return{uid:detail.uid,dom:dom(deepMerge(detail,{inputAttributes:{role:"combobox","aria-autocomplete":"list","aria-haspopup":"true"}})),behaviours:{...focusBehaviours$1,...augment(detail.typeaheadBehaviours,behaviours)},eventOrder:eventOrder}}}),wrap=delegate=>({...delegate,toCached:()=>wrap(delegate.toCached()),bindFuture:f=>wrap(delegate.bind((resA=>resA.fold((err=>Future_pure(Result.error(err))),(a=>f(a)))))),bindResult:f=>wrap(delegate.map((resA=>resA.bind(f)))),mapResult:f=>wrap(delegate.map((resA=>resA.map(f)))),mapError:f=>wrap(delegate.map((resA=>resA.mapError(f)))),foldResult:(whenError,whenValue)=>delegate.map((res=>res.fold(whenError,whenValue))),withTimeout:(timeout,errorThunk)=>wrap(Future_nu((callback=>{let timedOut=!1;const timer=setTimeout((()=>{timedOut=!0,callback(Result.error(errorThunk()))}),timeout);delegate.get((result=>{timedOut||(clearTimeout(timer),callback(result))}))})))}),nu$1=worker=>wrap(Future_nu(worker)),FutureResult_nu=nu$1,renderCommonSpec=(spec,actionOpt,extraBehaviours=[],dom,components,providersBackstage)=>{const action=actionOpt.fold((()=>({})),(action=>({action:action}))),common={buttonBehaviours:derive$1([DisablingConfigs_button((()=>!spec.enabled||providersBackstage.isDisabled())),receivingConfig(),Tabstopping.config({}),config("button press",[preventDefault("click"),preventDefault("mousedown")])].concat(extraBehaviours)),eventOrder:{click:["button press","alloy.base.behaviour"],mousedown:["button press","alloy.base.behaviour"]},...action},domFinal=deepMerge(common,{dom:dom});return deepMerge(domFinal,{components:components})},renderIconButtonSpec=(spec,action,providersBackstage,extraBehaviours=[])=>{const dom={tag:"button",classes:["tox-tbtn"],attributes:spec.tooltip.map((tooltip=>({"aria-label":providersBackstage.translate(tooltip),title:providersBackstage.translate(tooltip)}))).getOr({})},icon=spec.icon.map((iconName=>renderIconFromPack$1(iconName,providersBackstage.icons))),components=componentRenderPipeline([icon]);return renderCommonSpec(spec,action,extraBehaviours,dom,components,providersBackstage)},calculateClassesFromButtonType=buttonType=>{switch(buttonType){case"primary":return["tox-button"];case"toolbar":return["tox-tbtn"];default:return["tox-button","tox-button--secondary"]}},renderButtonSpec=(spec,action,providersBackstage,extraBehaviours=[],extraClasses=[])=>{const translatedText=providersBackstage.translate(spec.text),icon=spec.icon.map((iconName=>renderIconFromPack$1(iconName,providersBackstage.icons))),components=[icon.getOrThunk((()=>text$2(translatedText)))],buttonType=spec.buttonType.getOr(spec.primary||spec.borderless?"primary":"secondary"),classes=[...calculateClassesFromButtonType(buttonType),...icon.isSome()?["tox-button--icon"]:[],...spec.borderless?["tox-button--naked"]:[],...extraClasses];return renderCommonSpec(spec,action,extraBehaviours,{tag:"button",classes:classes,attributes:{title:translatedText}},components,providersBackstage)},renderButton$1=(spec,action,providersBackstage,extraBehaviours=[],extraClasses=[])=>{const buttonSpec=renderButtonSpec(spec,Optional.some(action),providersBackstage,extraBehaviours,extraClasses);return Button.sketch(buttonSpec)},getAction=(name,buttonType)=>comp=>{"custom"===buttonType?emitWith(comp,formActionEvent,{name:name,value:{}}):"submit"===buttonType?emit(comp,formSubmitEvent):"cancel"===buttonType?emit(comp,formCancelEvent):console.error("Unknown button type: ",buttonType)},renderFooterButton=(spec,buttonType,backstage)=>{if(((spec,buttonType)=>"menu"===buttonType)(0,buttonType)){const getButton=()=>memButton,menuButtonSpec=spec,fixedSpec={...spec,type:"menubutton",search:Optional.none(),onSetup:api=>(api.setEnabled(spec.enabled),noop),fetch:getFetch(menuButtonSpec.items,getButton,backstage)},memButton=record(renderMenuButton(fixedSpec,"tox-tbtn",backstage,Optional.none()));return memButton.asSpec()}if(((spec,buttonType)=>"custom"===buttonType||"cancel"===buttonType||"submit"===buttonType)(0,buttonType)){const action=getAction(spec.name,buttonType),buttonSpec={...spec,borderless:!1};return renderButton$1(buttonSpec,action,backstage.shared.providers,[])}if(((spec,buttonType)=>"togglebutton"===buttonType)(0,buttonType))return((spec,providers)=>{var _a,_b;const optMemIcon=spec.icon.map((memIcon=>renderReplaceableIconFromPack(memIcon,providers.icons))).map(record),buttonType=spec.buttonType.getOr(spec.primary?"primary":"secondary"),buttonSpec={...spec,name:null!==(_a=spec.name)&&void 0!==_a?_a:"",primary:"primary"===buttonType,tooltip:Optional.from(spec.tooltip),enabled:null!==(_b=spec.enabled)&&void 0!==_b&&_b,borderless:!1},tooltipAttributes=buttonSpec.tooltip.map((tooltip=>({"aria-label":providers.translate(tooltip),title:providers.translate(tooltip)}))).getOr({}),buttonTypeClasses=calculateClassesFromButtonType(null!=buttonType?buttonType:"secondary"),showIconAndText=spec.icon.isSome()&&spec.text.isSome(),dom={tag:"button",classes:[...buttonTypeClasses.concat(spec.icon.isSome()?["tox-button--icon"]:[]),...spec.active?["tox-button--enabled"]:[],...showIconAndText?["tox-button--icon-and-text"]:[]],attributes:tooltipAttributes},translatedText=providers.translate(spec.text.getOr("")),translatedTextComponed=text$2(translatedText),components=[...componentRenderPipeline([optMemIcon.map((memIcon=>memIcon.asSpec()))]),...spec.text.isSome()?[translatedTextComponed]:[]],iconButtonSpec=renderCommonSpec(buttonSpec,Optional.some((comp=>{emitWith(comp,formActionEvent,{name:spec.name,value:{setIcon:newIcon=>{optMemIcon.map((memIcon=>memIcon.getOpt(comp).each((displayIcon=>{Replacing.set(displayIcon,[renderReplaceableIconFromPack(newIcon,providers.icons)])}))))}}})})),[],dom,components,providers);return Button.sketch(iconButtonSpec)})(spec,backstage.shared.providers);throw console.error("Unknown footer button type: ",buttonType),new Error("Unknown footer button type")},renderDialogButton=(spec,providersBackstage)=>{const action=getAction(spec.name,"custom");return pLabel=Optional.none(),pField=FormField.parts.field({factory:Button,...renderButtonSpec(spec,Optional.some(action),providersBackstage,[memory(""),ComposingConfigs_self()])}),renderFormFieldWith(pLabel,pField,[],[]);var pLabel,pField},separator$1={type:"separator"},toMenuItem=target=>({type:"menuitem",value:target.url,text:target.title,meta:{attach:target.attach},onAction:noop}),staticMenuItem=(title,url)=>({type:"menuitem",value:url,text:title,meta:{attach:void 0},onAction:noop}),filteredTargets=(type,targets)=>(targets=>map$2(targets,toMenuItem))(((type,targets)=>filter$2(targets,(target=>target.type===type)))(type,targets)),headerTargets=linkInfo=>filteredTargets("header",linkInfo.targets),anchorTargets=linkInfo=>filteredTargets("anchor",linkInfo.targets),anchorTargetTop=linkInfo=>Optional.from(linkInfo.anchorTop).map((url=>staticMenuItem("<top>",url))).toArray(),anchorTargetBottom=linkInfo=>Optional.from(linkInfo.anchorBottom).map((url=>staticMenuItem("<bottom>",url))).toArray(),filterByQuery=(term,menuItems)=>{const lowerCaseTerm=term.toLowerCase();return filter$2(menuItems,(item=>{var _a;const text=void 0!==item.meta&&void 0!==item.meta.text?item.meta.text:item.text,value=null!==(_a=item.value)&&void 0!==_a?_a:"";return contains$1(text.toLowerCase(),lowerCaseTerm)||contains$1(value.toLowerCase(),lowerCaseTerm)}))},getItems=(fileType,input,urlBackstage)=>{var _a,_b;const urlInputValue=Representing.getValue(input),term=null!==(_b=null===(_a=null==urlInputValue?void 0:urlInputValue.meta)||void 0===_a?void 0:_a.text)&&void 0!==_b?_b:urlInputValue.value;return urlBackstage.getLinkInformation().fold((()=>[]),(linkInfo=>{const history=filterByQuery(term,(history=>map$2(history,(url=>staticMenuItem(url,url))))(urlBackstage.getHistory(fileType)));return"file"===fileType?(items=[history,filterByQuery(term,headerTargets(linkInfo)),filterByQuery(term,flatten([anchorTargetTop(linkInfo),anchorTargets(linkInfo),anchorTargetBottom(linkInfo)]))],foldl(items,((a,b)=>0===a.length||0===b.length?a.concat(b):a.concat(separator$1,b)),[])):history;var items}))},errorId=generate$6("aria-invalid"),set$1=(element,status)=>{element.dom.checked=status},get$1=element=>element.dom.checked,make$2=render=>(parts,spec,dialogData,backstage)=>get$g(spec,"name").fold((()=>render(spec,backstage,Optional.none())),(fieldName=>parts.field(fieldName,render(spec,backstage,get$g(dialogData,fieldName))))),factories={bar:make$2(((spec,backstage)=>((spec,backstage)=>({dom:{tag:"div",classes:["tox-bar","tox-form__controls-h-stack"]},components:map$2(spec.items,backstage.interpreter)}))(spec,backstage.shared))),collection:make$2(((spec,backstage,data)=>renderCollection(spec,backstage.shared.providers,data))),alertbanner:make$2(((spec,backstage)=>((spec,providersBackstage)=>{const icon=get$2(spec.icon,providersBackstage.icons);return Container.sketch({dom:{tag:"div",attributes:{role:"alert"},classes:["tox-notification","tox-notification--in",`tox-notification--${spec.level}`]},components:[{dom:{tag:"div",classes:["tox-notification__icon"],innerHtml:spec.url?void 0:icon},components:spec.url?[Button.sketch({dom:{tag:"button",classes:["tox-button","tox-button--naked","tox-button--icon"],innerHtml:icon,attributes:{title:providersBackstage.translate(spec.iconTooltip)}},action:comp=>emitWith(comp,formActionEvent,{name:"alert-banner",value:spec.url}),buttonBehaviours:derive$1([addFocusableBehaviour()])})]:void 0},{dom:{tag:"div",classes:["tox-notification__body"],innerHtml:providersBackstage.translate(spec.text)}}]})})(spec,backstage.shared.providers))),input:make$2(((spec,backstage,data)=>((spec,providersBackstage,initialData)=>renderTextField({name:spec.name,multiline:!1,label:spec.label,inputMode:spec.inputMode,placeholder:spec.placeholder,flex:!1,disabled:!spec.enabled,classname:"tox-textfield",validation:Optional.none(),maximized:spec.maximized,data:initialData},providersBackstage))(spec,backstage.shared.providers,data))),textarea:make$2(((spec,backstage,data)=>((spec,providersBackstage,initialData)=>renderTextField({name:spec.name,multiline:!0,label:spec.label,inputMode:Optional.none(),placeholder:spec.placeholder,flex:!0,disabled:!spec.enabled,classname:"tox-textarea",validation:Optional.none(),maximized:spec.maximized,data:initialData},providersBackstage))(spec,backstage.shared.providers,data))),label:make$2(((spec,backstage)=>((spec,backstageShared)=>{return{dom:{tag:"div",classes:["tox-form__group"]},components:[{dom:{tag:"label",classes:["tox-label",..."center"===spec.align?["tox-label--center"]:[],..."end"===spec.align?["tox-label--end"]:[]]},components:[text$2(backstageShared.providers.translate(spec.label))]},...map$2(spec.items,backstageShared.interpreter)],behaviours:derive$1([ComposingConfigs_self(),Replacing.config({}),(optInitialValue=Optional.none(),withElement(optInitialValue,get$9,set$6)),Keying.config({mode:"acyclic"})])};var optInitialValue})(spec,backstage.shared))),iframe:(render=>(parts,spec,dialogData,backstage)=>{const iframeSpec=deepMerge(spec,{source:"dynamic"});return make$2(render)(parts,iframeSpec,dialogData,backstage)})(((spec,backstage,data)=>renderIFrame(spec,backstage.shared.providers,data))),button:make$2(((spec,backstage)=>renderDialogButton(spec,backstage.shared.providers))),checkbox:make$2(((spec,backstage,data)=>((spec,providerBackstage,initialData)=>{const toggleCheckboxHandler=comp=>(comp.element.dom.click(),Optional.some(!0)),pField=FormField.parts.field({factory:{sketch:identity},dom:{tag:"input",classes:["tox-checkbox__input"],attributes:{type:"checkbox"}},behaviours:derive$1([ComposingConfigs_self(),Disabling.config({disabled:()=>!spec.enabled||providerBackstage.isDisabled(),onDisabled:component=>{parentElement(component.element).each((element=>add$2(element,"tox-checkbox--disabled")))},onEnabled:component=>{parentElement(component.element).each((element=>remove$2(element,"tox-checkbox--disabled")))}}),Tabstopping.config({}),Focusing.config({}),withElement(initialData,get$1,set$1),Keying.config({mode:"special",onEnter:toggleCheckboxHandler,onSpace:toggleCheckboxHandler,stopSpaceKeyup:!0}),config("checkbox-events",[run$1(change(),((component,_)=>{emitWith(component,formChangeEvent,{name:spec.name})}))])])}),pLabel=FormField.parts.label({dom:{tag:"span",classes:["tox-checkbox__label"]},components:[text$2(providerBackstage.translate(spec.label))],behaviours:derive$1([Unselecting.config({})])}),makeIcon=className=>render$3("checked"===className?"selected":"unselected",{tag:"span",classes:["tox-icon","tox-checkbox-icon__"+className]},providerBackstage.icons),memIcons=record({dom:{tag:"div",classes:["tox-checkbox__icons"]},components:[makeIcon("checked"),makeIcon("unchecked")]});return FormField.sketch({dom:{tag:"label",classes:["tox-checkbox"]},components:[pField,memIcons.asSpec(),pLabel],fieldBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providerBackstage.isDisabled()}),receivingConfig()])})})(spec,backstage.shared.providers,data))),colorinput:make$2(((spec,backstage,data)=>renderColorInput(spec,backstage.shared,backstage.colorinput,data))),colorpicker:make$2(((spec,backstage,data)=>renderColorPicker(0,backstage.shared.providers,data))),dropzone:make$2(((spec,backstage,data)=>renderDropZone(spec,backstage.shared.providers,data))),grid:make$2(((spec,backstage)=>((spec,backstage)=>({dom:{tag:"div",classes:["tox-form__grid",`tox-form__grid--${spec.columns}col`]},components:map$2(spec.items,backstage.interpreter)}))(spec,backstage.shared))),listbox:make$2(((spec,backstage,data)=>((spec,backstage,initialData)=>{const providersBackstage=backstage.shared.providers,initialItem=initialData.bind((value=>findItemByValue(spec.items,value))).orThunk((()=>head(spec.items).filter(isSingleListItem))),pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),pField=FormField.parts.field({dom:{},factory:{sketch:sketchSpec=>renderCommonDropdown({uid:sketchSpec.uid,text:initialItem.map((item=>item.text)),icon:Optional.none(),tooltip:spec.label,role:Optional.none(),fetch:(comp,callback)=>{const items=fetchItems(comp,spec.name,spec.items,Representing.getValue(comp));callback(build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,{isHorizontalMenu:!1,search:Optional.none()}))},onSetup:constant$1(noop),getApi:constant$1({}),columns:1,presets:"normal",classes:[],dropdownBehaviours:[Tabstopping.config({}),withComp(initialItem.map((item=>item.value)),(comp=>get$f(comp.element,"data-value")),((comp,data)=>{findItemByValue(spec.items,data).each((item=>{set$9(comp.element,"data-value",item.value),emitWith(comp,updateMenuText,{text:item.text})}))}))]},"tox-listbox",backstage.shared)}}),listBoxWrap={dom:{tag:"div",classes:["tox-listboxfield"]},components:[pField]};return FormField.sketch({dom:{tag:"div",classes:["tox-form__group"]},components:flatten([pLabel.toArray(),[listBoxWrap]]),fieldBehaviours:derive$1([Disabling.config({disabled:constant$1(!spec.enabled),onDisabled:comp=>{FormField.getField(comp).each(Disabling.disable)},onEnabled:comp=>{FormField.getField(comp).each(Disabling.enable)}})])})})(spec,backstage,data))),selectbox:make$2(((spec,backstage,data)=>((spec,providersBackstage,initialData)=>{const translatedOptions=map$2(spec.items,(item=>({text:providersBackstage.translate(item.text),value:item.value}))),pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),pField=FormField.parts.field({dom:{},...initialData.map((data=>({data:data}))).getOr({}),selectAttributes:{size:spec.size},options:translatedOptions,factory:HtmlSelect,selectBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled()}),Tabstopping.config({}),config("selectbox-change",[run$1(change(),((component,_)=>{emitWith(component,formChangeEvent,{name:spec.name})}))])])}),chevron=spec.size>1?Optional.none():Optional.some(render$3("chevron-down",{tag:"div",classes:["tox-selectfield__icon-js"]},providersBackstage.icons)),selectWrap={dom:{tag:"div",classes:["tox-selectfield"]},components:flatten([[pField],chevron.toArray()])};return FormField.sketch({dom:{tag:"div",classes:["tox-form__group"]},components:flatten([pLabel.toArray(),[selectWrap]]),fieldBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled(),onDisabled:comp=>{FormField.getField(comp).each(Disabling.disable)},onEnabled:comp=>{FormField.getField(comp).each(Disabling.enable)}}),receivingConfig()])})})(spec,backstage.shared.providers,data))),sizeinput:make$2(((spec,backstage)=>((spec,providersBackstage)=>{let converter=noSizeConversion;const ratioEvent=generate$6("ratio-event"),makeIcon=iconName=>render$3(iconName,{tag:"span",classes:["tox-icon","tox-lock-icon__"+iconName]},providersBackstage.icons),pLock=FormCoupledInputs.parts.lock({dom:{tag:"button",classes:["tox-lock","tox-button","tox-button--naked","tox-button--icon"],attributes:{title:providersBackstage.translate(spec.label.getOr("Constrain proportions"))}},components:[makeIcon("lock"),makeIcon("unlock")],buttonBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled()}),receivingConfig(),Tabstopping.config({})])}),formGroup=components=>({dom:{tag:"div",classes:["tox-form__group"]},components:components}),getFieldPart=isField1=>FormField.parts.field({factory:Input,inputClasses:["tox-textfield"],inputBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled()}),receivingConfig(),Tabstopping.config({}),config("size-input-events",[run$1(focusin(),((component,_simulatedEvent)=>{emitWith(component,ratioEvent,{isField1:isField1})})),run$1(change(),((component,_simulatedEvent)=>{emitWith(component,formChangeEvent,{name:spec.name})}))])]),selectOnFocus:!1}),getLabel=label=>({dom:{tag:"label",classes:["tox-label"]},components:[text$2(providersBackstage.translate(label))]}),widthField=FormCoupledInputs.parts.field1(formGroup([FormField.parts.label(getLabel("Width")),getFieldPart(!0)])),heightField=FormCoupledInputs.parts.field2(formGroup([FormField.parts.label(getLabel("Height")),getFieldPart(!1)]));return FormCoupledInputs.sketch({dom:{tag:"div",classes:["tox-form__group"]},components:[{dom:{tag:"div",classes:["tox-form__controls-h-stack"]},components:[widthField,heightField,formGroup([getLabel(" "),pLock])]}],field1Name:"width",field2Name:"height",locked:!0,markers:{lockClass:"tox-locked"},onLockedChange:(current,other,_lock)=>{parseSize(Representing.getValue(current)).each((size=>{converter(size).each((newSize=>{Representing.setValue(other,(size=>{const unitDec={"":0,px:0,pt:1,mm:1,pc:2,ex:2,em:2,ch:2,rem:2,cm:3,in:4,"%":4};let numText=size.value.toFixed((unit=size.unit)in unitDec?unitDec[unit]:1);var unit;return-1!==numText.indexOf(".")&&(numText=numText.replace(/\.?0*$/,"")),numText+size.unit})(newSize))}))}))},coupledFieldBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled(),onDisabled:comp=>{FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.disable),FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.disable),FormCoupledInputs.getLock(comp).each(Disabling.disable)},onEnabled:comp=>{FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.enable),FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.enable),FormCoupledInputs.getLock(comp).each(Disabling.enable)}}),receivingConfig(),config("size-input-events2",[run$1(ratioEvent,((component,simulatedEvent)=>{const isField1=simulatedEvent.event.isField1,optCurrent=isField1?FormCoupledInputs.getField1(component):FormCoupledInputs.getField2(component),optOther=isField1?FormCoupledInputs.getField2(component):FormCoupledInputs.getField1(component),value1=optCurrent.map(Representing.getValue).getOr(""),value2=optOther.map(Representing.getValue).getOr("");converter=makeRatioConverter(value1,value2)}))])])})})(spec,backstage.shared.providers))),slider:make$2(((spec,backstage,data)=>((spec,providerBackstage,initialData)=>{const labelPart=Slider.parts.label({dom:{tag:"label",classes:["tox-label"]},components:[text$2(providerBackstage.translate(spec.label))]}),spectrum=Slider.parts.spectrum({dom:{tag:"div",classes:["tox-slider__rail"],attributes:{role:"presentation"}}}),thumb=Slider.parts.thumb({dom:{tag:"div",classes:["tox-slider__handle"],attributes:{role:"presentation"}}});return Slider.sketch({dom:{tag:"div",classes:["tox-slider"],attributes:{role:"presentation"}},model:{mode:"x",minX:spec.min,maxX:spec.max,getInitialValue:constant$1(initialData.getOrThunk((()=>(Math.abs(spec.max)-Math.abs(spec.min))/2)))},components:[labelPart,spectrum,thumb],sliderBehaviours:derive$1([ComposingConfigs_self(),Focusing.config({})]),onChoose:(component,thumb,value)=>{emitWith(component,formChangeEvent,{name:spec.name,value:value})}})})(spec,backstage.shared.providers,data))),urlinput:make$2(((spec,backstage,data)=>((spec,backstage,urlBackstage,initialData)=>{const providersBackstage=backstage.shared.providers,updateHistory=component=>{const urlEntry=Representing.getValue(component);urlBackstage.addToHistory(urlEntry.value,spec.filetype)},typeaheadSpec={...initialData.map((initialData=>({initialData:initialData}))).getOr({}),dismissOnBlur:!0,inputClasses:["tox-textfield"],sandboxClasses:["tox-dialog__popups"],inputAttributes:{"aria-errormessage":errorId,type:"url"},minChars:0,responseTime:0,fetch:input=>{const items=getItems(spec.filetype,input,urlBackstage),tdata=build(items,ItemResponse$1.BUBBLE_TO_SANDBOX,backstage,{isHorizontalMenu:!1,search:Optional.none()});return Future_pure(tdata)},getHotspot:comp=>memUrlBox.getOpt(comp),onSetValue:(comp,_newValue)=>{comp.hasConfigured(Invalidating)&&Invalidating.run(comp).get(noop)},typeaheadBehaviours:derive$1([...urlBackstage.getValidationHandler().map((handler=>Invalidating.config({getRoot:comp=>parentElement(comp.element),invalidClass:"tox-control-wrap--status-invalid",notify:{onInvalid:(comp,err)=>{memInvalidIcon.getOpt(comp).each((invalidComp=>{set$9(invalidComp.element,"title",providersBackstage.translate(err))}))}},validator:{validate:input=>{const urlEntry=Representing.getValue(input);return FutureResult_nu((completer=>{handler({type:spec.filetype,url:urlEntry.value},(validation=>{if("invalid"===validation.status){const err=Result.error(validation.message);completer(err)}else{const val=Result.value(validation.message);completer(val)}}))}))},validateOnLoad:!1}}))).toArray(),Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled()}),Tabstopping.config({}),config("urlinput-events",[run$1(input(),(comp=>{const currentValue=get$6(comp.element),trimmedValue=currentValue.trim();trimmedValue!==currentValue&&set$5(comp.element,trimmedValue),"file"===spec.filetype&&emitWith(comp,formChangeEvent,{name:spec.name})})),run$1(change(),(comp=>{emitWith(comp,formChangeEvent,{name:spec.name}),updateHistory(comp)})),run$1(postPaste(),(comp=>{emitWith(comp,formChangeEvent,{name:spec.name}),updateHistory(comp)}))])]),eventOrder:{[input()]:["streaming","urlinput-events","invalidating"]},model:{getDisplayText:itemData=>itemData.value,selectsOver:!1,populateFromBrowse:!1},markers:{openClass:"tox-textfield--popup-open"},lazySink:backstage.shared.getSink,parts:{menu:part(0,0,"normal")},onExecute:(_menu,component,_entry)=>{emitWith(component,formSubmitEvent,{})},onItemExecute:(typeahead,_sandbox,_item,_value)=>{updateHistory(typeahead),emitWith(typeahead,formChangeEvent,{name:spec.name})}},pField=FormField.parts.field({...typeaheadSpec,factory:Typeahead}),pLabel=spec.label.map((label=>renderLabel$3(label,providersBackstage))),memInvalidIcon=record(((name,errId,icon=name,label=name)=>render$3(icon,{tag:"div",classes:["tox-icon","tox-control-wrap__status-icon-"+name],attributes:{title:providersBackstage.translate(label),"aria-live":"polite",...errId.fold((()=>({})),(id=>({id:id})))}},providersBackstage.icons))("invalid",Optional.some(errorId),"warning")),memStatus=record({dom:{tag:"div",classes:["tox-control-wrap__status-icon-wrap"]},components:[memInvalidIcon.asSpec()]}),optUrlPicker=urlBackstage.getUrlPicker(spec.filetype),browseUrlEvent=generate$6("browser.url.event"),memUrlBox=record({dom:{tag:"div",classes:["tox-control-wrap"]},components:[pField,memStatus.asSpec()],behaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled()})])}),memUrlPickerButton=record(renderButton$1({name:spec.name,icon:Optional.some("browse"),text:spec.picker_text.or(spec.label).getOr(""),enabled:spec.enabled,primary:!1,buttonType:Optional.none(),borderless:!0},(component=>emit(component,browseUrlEvent)),providersBackstage,[],["tox-browse-url"]));return FormField.sketch({dom:renderFormFieldDomWith([]),components:pLabel.toArray().concat([{dom:{tag:"div",classes:["tox-form__controls-h-stack"]},components:flatten([[memUrlBox.asSpec()],optUrlPicker.map((()=>memUrlPickerButton.asSpec())).toArray()])}]),fieldBehaviours:derive$1([Disabling.config({disabled:()=>!spec.enabled||providersBackstage.isDisabled(),onDisabled:comp=>{FormField.getField(comp).each(Disabling.disable),memUrlPickerButton.getOpt(comp).each(Disabling.disable)},onEnabled:comp=>{FormField.getField(comp).each(Disabling.enable),memUrlPickerButton.getOpt(comp).each(Disabling.enable)}}),receivingConfig(),config("url-input-events",[run$1(browseUrlEvent,(comp=>{Composing.getCurrent(comp).each((field=>{const componentData=Representing.getValue(field),urlData={fieldname:spec.name,...componentData};optUrlPicker.each((picker=>{picker(urlData).get((chosenData=>{Representing.setValue(field,chosenData),emitWith(comp,formChangeEvent,{name:spec.name})}))}))}))}))])])})})(spec,backstage,backstage.urlinput,data))),customeditor:make$2((spec=>{const editorApi=value$2(),memReplaced=record({dom:{tag:spec.tag}}),initialValue=value$2();return{dom:{tag:"div",classes:["tox-custom-editor"]},behaviours:derive$1([config("custom-editor-events",[runOnAttached((component=>{memReplaced.getOpt(component).each((ta=>{((spec=>has$2(spec,"init"))(spec)?spec.init(ta.element.dom):global$2.load(spec.scriptId,spec.scriptUrl).then((init=>init(ta.element.dom,spec.settings)))).then((ea=>{initialValue.on((cvalue=>{ea.setValue(cvalue)})),initialValue.clear(),editorApi.set(ea)}))}))}))]),withComp(Optional.none(),(()=>editorApi.get().fold((()=>initialValue.get().getOr("")),(ed=>ed.getValue()))),((component,value)=>{editorApi.get().fold((()=>initialValue.set(value)),(ed=>ed.setValue(value)))})),ComposingConfigs_self()]),components:[memReplaced.asSpec()]}})),htmlpanel:make$2((spec=>"presentation"===spec.presets?Container.sketch({dom:{tag:"div",classes:["tox-form__group"],innerHtml:spec.html}}):Container.sketch({dom:{tag:"div",classes:["tox-form__group"],innerHtml:spec.html,attributes:{role:"document"}},containerBehaviours:derive$1([Tabstopping.config({}),Focusing.config({})])}))),imagepreview:make$2(((spec,_,data)=>renderImagePreview(spec,data))),table:make$2(((spec,backstage)=>((spec,providersBackstage)=>{const renderTh=text=>({dom:{tag:"th",innerHtml:providersBackstage.translate(text)}}),renderTd=text=>({dom:{tag:"td",innerHtml:providersBackstage.translate(text)}}),renderTr=row=>({dom:{tag:"tr"},components:map$2(row,renderTd)});return{dom:{tag:"table",classes:["tox-dialog__table"]},components:[(header=spec.header,{dom:{tag:"thead"},components:[{dom:{tag:"tr"},components:map$2(header,renderTh)}]}),(rows=spec.cells,{dom:{tag:"tbody"},components:map$2(rows,renderTr)})],behaviours:derive$1([Tabstopping.config({}),Focusing.config({})])};var rows,header})(spec,backstage.shared.providers))),tree:make$2(((spec,backstage)=>((spec,backstage)=>{const onLeafAction=spec.onLeafAction.getOr(noop),onToggleExpand=spec.onToggleExpand.getOr(noop),defaultExpandedIds=spec.defaultExpandedIds,expandedIds=Cell(defaultExpandedIds),selectedIdCell=Cell(spec.defaultSelectedId),treeId=generate$6("tree-id"),children=(selectedId,expandedIds)=>spec.items.map((item=>"leaf"===item.type?renderLeafLabel({leaf:item,selectedId:selectedId,onLeafAction:onLeafAction,visible:!0,treeId:treeId,backstage:backstage}):renderDirectory({directory:item,selectedId:selectedId,onLeafAction:onLeafAction,expandedIds:expandedIds,labelTabstopping:!0,treeId:treeId,backstage:backstage})));return{dom:{tag:"div",classes:["tox-tree"],attributes:{role:"tree"}},components:children(selectedIdCell.get(),expandedIds.get()),behaviours:derive$1([Keying.config({mode:"flow",selector:".tox-tree--leaf__label--visible, .tox-tree--directory__label--visible",cycles:!1}),config(treeEventsId,[run$1("expand-tree-node",((_cmp,se)=>{const{expanded:expanded,node:node}=se.event;expandedIds.set(expanded?[...expandedIds.get(),node]:expandedIds.get().filter((id=>id!==node))),onToggleExpand(expandedIds.get(),{expanded:expanded,node:node})}))]),Receiving.config({channels:{[`update-active-item-${treeId}`]:{onReceive:(comp,message)=>{selectedIdCell.set(Optional.some(message.value)),Replacing.set(comp,children(Optional.some(message.value),expandedIds.get()))}}}}),Replacing.config({})])}})(spec,backstage))),panel:make$2(((spec,backstage)=>((spec,backstage)=>({dom:{tag:"div",classes:spec.classes},components:map$2(spec.items,backstage.shared.interpreter)}))(spec,backstage)))},noFormParts={field:(_name,spec)=>spec,record:constant$1([])},interpretInForm=(parts,spec,dialogData,oldBackstage)=>{const newBackstage=deepMerge(oldBackstage,{shared:{interpreter:childSpec=>interpretParts(parts,childSpec,dialogData,newBackstage)}});return interpretParts(parts,spec,dialogData,newBackstage)},interpretParts=(parts,spec,dialogData,backstage)=>get$g(factories,spec.type).fold((()=>(console.error(`Unknown factory type "${spec.type}", defaulting to container: `,spec),spec)),(factory=>factory(parts,spec,dialogData,backstage))),interpretWithoutForm=(spec,dialogData,backstage)=>interpretParts(noFormParts,spec,dialogData,backstage),westEdgeX=anchor=>anchor.x,middleX=(anchor,element)=>anchor.x+anchor.width/2-element.width/2,eastEdgeX=(anchor,element)=>anchor.x+anchor.width-element.width,northY=anchor=>anchor.y,southY=(anchor,element)=>anchor.y+anchor.height-element.height,centreY=(anchor,element)=>anchor.y+anchor.height/2-element.height/2,southwest=(anchor,element,bubbles)=>nu$6(eastEdgeX(anchor,element),southY(anchor,element),bubbles.insetSouthwest(),northwest$3(),"southwest",boundsRestriction(anchor,{right:0,bottom:3}),"layout-inset"),southeast=(anchor,element,bubbles)=>nu$6(westEdgeX(anchor),southY(anchor,element),bubbles.insetSoutheast(),northeast$3(),"southeast",boundsRestriction(anchor,{left:1,bottom:3}),"layout-inset"),northwest=(anchor,element,bubbles)=>nu$6(eastEdgeX(anchor,element),northY(anchor),bubbles.insetNorthwest(),southwest$3(),"northwest",boundsRestriction(anchor,{right:0,top:2}),"layout-inset"),northeast=(anchor,element,bubbles)=>nu$6(westEdgeX(anchor),northY(anchor),bubbles.insetNortheast(),southeast$3(),"northeast",boundsRestriction(anchor,{left:1,top:2}),"layout-inset"),north=(anchor,element,bubbles)=>nu$6(middleX(anchor,element),northY(anchor),bubbles.insetNorth(),south$3(),"north",boundsRestriction(anchor,{top:2}),"layout-inset"),south=(anchor,element,bubbles)=>nu$6(middleX(anchor,element),southY(anchor,element),bubbles.insetSouth(),north$3(),"south",boundsRestriction(anchor,{bottom:3}),"layout-inset"),east=(anchor,element,bubbles)=>nu$6(eastEdgeX(anchor,element),centreY(anchor,element),bubbles.insetEast(),west$3(),"east",boundsRestriction(anchor,{right:0}),"layout-inset"),west=(anchor,element,bubbles)=>nu$6(westEdgeX(anchor),centreY(anchor,element),bubbles.insetWest(),east$3(),"west",boundsRestriction(anchor,{left:1}),"layout-inset"),lookupPreserveLayout=lastPlacement=>{switch(lastPlacement){case"north":return north;case"northeast":return northeast;case"northwest":return northwest;case"south":return south;case"southeast":return southeast;case"southwest":return southwest;case"east":return east;case"west":return west}},preserve=(anchor,element,bubbles,placee,bounds)=>getPlacement(placee).map(lookupPreserveLayout).getOr(north)(anchor,element,bubbles,placee,bounds),lookupFlippedLayout=lastPlacement=>{switch(lastPlacement){case"north":return south;case"northeast":return southeast;case"northwest":return southwest;case"south":return north;case"southeast":return northeast;case"southwest":return northwest;case"east":return west;case"west":return east}},flip=(anchor,element,bubbles,placee,bounds)=>getPlacement(placee).map(lookupFlippedLayout).getOr(north)(anchor,element,bubbles,placee,bounds),bubbleAlignments$2={valignCentre:[],alignCentre:[],alignLeft:[],alignRight:[],right:[],left:[],bottom:[],top:[]},getInlineDialogAnchor=(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor)=>{const overrides={maxHeightFunction:expandable$1()};return()=>lazyUseEditableAreaAnchor()?{type:"node",root:getContentContainer(getRootNode(contentAreaElement())),node:Optional.from(contentAreaElement()),bubble:nu$5(12,12,bubbleAlignments$2),layouts:{onRtl:()=>[northeast],onLtr:()=>[northwest]},overrides:overrides}:{type:"hotspot",hotspot:lazyAnchorbar(),bubble:nu$5(-12,12,bubbleAlignments$2),layouts:{onRtl:()=>[southeast$2,southwest$2,south$2],onLtr:()=>[southwest$2,southeast$2,south$2]},overrides:overrides}},getInlineBottomDialogAnchor=(inline,contentAreaElement,lazyBottomAnchorBar,lazyUseEditableAreaAnchor)=>{const overrides={maxHeightFunction:expandable$1()};return()=>lazyUseEditableAreaAnchor()?{type:"node",root:getContentContainer(getRootNode(contentAreaElement())),node:Optional.from(contentAreaElement()),bubble:nu$5(12,12,bubbleAlignments$2),layouts:{onRtl:()=>[north],onLtr:()=>[north]},overrides:overrides}:inline?{type:"node",root:getContentContainer(getRootNode(contentAreaElement())),node:Optional.from(contentAreaElement()),bubble:nu$5(0,-getOuter$2(contentAreaElement()),bubbleAlignments$2),layouts:{onRtl:()=>[north$2],onLtr:()=>[north$2]},overrides:overrides}:{type:"hotspot",hotspot:lazyBottomAnchorBar(),bubble:nu$5(0,0,bubbleAlignments$2),layouts:{onRtl:()=>[north$2],onLtr:()=>[north$2]},overrides:overrides}},getBannerAnchor=(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor)=>()=>lazyUseEditableAreaAnchor()?{type:"node",root:getContentContainer(getRootNode(contentAreaElement())),node:Optional.from(contentAreaElement()),layouts:{onRtl:()=>[north],onLtr:()=>[north]}}:{type:"hotspot",hotspot:lazyAnchorbar(),layouts:{onRtl:()=>[south$2],onLtr:()=>[south$2]}},getCursorAnchor=(editor,bodyElement)=>()=>({type:"selection",root:bodyElement(),getSelection:()=>{const rng=editor.selection.getRng(),selectedCells=editor.model.table.getSelectedCells();if(selectedCells.length>1){const firstCell=selectedCells[0],lastCell=selectedCells[selectedCells.length-1],selectionTableCellRange={firstCell:SugarElement.fromDom(firstCell),lastCell:SugarElement.fromDom(lastCell)};return Optional.some(selectionTableCellRange)}return Optional.some(SimSelection.range(SugarElement.fromDom(rng.startContainer),rng.startOffset,SugarElement.fromDom(rng.endContainer),rng.endOffset))}}),getNodeAnchor$1=bodyElement=>element=>({type:"node",root:bodyElement(),node:element}),getAnchors=(editor,lazyAnchorbar,lazyBottomAnchorBar,isToolbarTop)=>{const useFixedToolbarContainer=useFixedContainer(editor),bodyElement=()=>SugarElement.fromDom(editor.getBody()),contentAreaElement=()=>SugarElement.fromDom(editor.getContentAreaContainer()),lazyUseEditableAreaAnchor=()=>useFixedToolbarContainer||!isToolbarTop();return{inlineDialog:getInlineDialogAnchor(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor),inlineBottomDialog:getInlineBottomDialogAnchor(editor.inline,contentAreaElement,lazyBottomAnchorBar,lazyUseEditableAreaAnchor),banner:getBannerAnchor(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor),cursor:getCursorAnchor(editor,bodyElement),node:getNodeAnchor$1(bodyElement)}},colorPicker=editor=>(callback,value)=>{colorPickerDialog(editor)(callback,value)},hasCustomColors=editor=>()=>hasCustomColors$1(editor),getColors=editor=>id=>getColors$2(editor,id),getColorCols=editor=>id=>getColorCols$1(editor,id),isDraggableModal=editor=>()=>isDraggableModal$1(editor),isNestedFormat=format=>hasNonNullableKey(format,"items"),isFormatReference=format=>hasNonNullableKey(format,"format"),defaultStyleFormats=[{title:"Headings",items:[{title:"Heading 1",format:"h1"},{title:"Heading 2",format:"h2"},{title:"Heading 3",format:"h3"},{title:"Heading 4",format:"h4"},{title:"Heading 5",format:"h5"},{title:"Heading 6",format:"h6"}]},{title:"Inline",items:[{title:"Bold",format:"bold"},{title:"Italic",format:"italic"},{title:"Underline",format:"underline"},{title:"Strikethrough",format:"strikethrough"},{title:"Superscript",format:"superscript"},{title:"Subscript",format:"subscript"},{title:"Code",format:"code"}]},{title:"Blocks",items:[{title:"Paragraph",format:"p"},{title:"Blockquote",format:"blockquote"},{title:"Div",format:"div"},{title:"Pre",format:"pre"}]},{title:"Align",items:[{title:"Left",format:"alignleft"},{title:"Center",format:"aligncenter"},{title:"Right",format:"alignright"},{title:"Justify",format:"alignjustify"}]}],mapFormats=userFormats=>foldl(userFormats,((acc,fmt)=>{if(has$2(fmt,"items")){const result=mapFormats(fmt.items);return{customFormats:acc.customFormats.concat(result.customFormats),formats:acc.formats.concat([{title:fmt.title,items:result.formats}])}}if((format=>has$2(format,"inline"))(fmt)||(format=>has$2(format,"block"))(fmt)||(format=>has$2(format,"selector"))(fmt)){const formatNameWithPrefix=`custom-${isString(fmt.name)?fmt.name:fmt.title.toLowerCase()}`;return{customFormats:acc.customFormats.concat([{name:formatNameWithPrefix,format:fmt}]),formats:acc.formats.concat([{title:fmt.title,format:formatNameWithPrefix,icon:fmt.icon}])}}return{...acc,formats:acc.formats.concat(fmt)}}),{customFormats:[],formats:[]}),getStyleFormats=editor=>getUserStyleFormats(editor).map((userFormats=>{const registeredUserFormats=((editor,userFormats)=>{const result=mapFormats(userFormats),registerFormats=customFormats=>{each$1(customFormats,(fmt=>{editor.formatter.has(fmt.name)||editor.formatter.register(fmt.name,fmt.format)}))};return editor.formatter?registerFormats(result.customFormats):editor.on("init",(()=>{registerFormats(result.customFormats)})),result.formats})(editor,userFormats);return shouldMergeStyleFormats(editor)?defaultStyleFormats.concat(registeredUserFormats):registeredUserFormats})).getOr(defaultStyleFormats),processBasic=(item,isSelectedFor,getPreviewFor)=>({...item,type:"formatter",isSelected:isSelectedFor(item.format),getStylePreview:getPreviewFor(item.format)}),register$a=(editor,formats,isSelectedFor,getPreviewFor)=>{const doEnrich=items=>map$2(items,(item=>isNestedFormat(item)?(item=>{const newItems=doEnrich(item.items);return{...item,type:"submenu",getStyleItems:constant$1(newItems)}})(item):isFormatReference(item)?(item=>processBasic(item,isSelectedFor,getPreviewFor))(item):(format=>{const keys$1=keys(format);return 1===keys$1.length&&contains$2(keys$1,"title")})(item)?{...item,type:"separator"}:(item=>{const formatName=isString(item.name)?item.name:generate$6(item.title),formatNameWithPrefix=`custom-${formatName}`,newItem={...item,type:"formatter",format:formatNameWithPrefix,isSelected:isSelectedFor(formatNameWithPrefix),getStylePreview:getPreviewFor(formatNameWithPrefix)};return editor.formatter.register(formatName,newItem),newItem})(item)));return doEnrich(formats)},trim=global$1.trim,hasContentEditableState=value=>node=>{if((node=>isNonNullable(node)&&1===node.nodeType)(node)){if(node.contentEditable===value)return!0;if(node.getAttribute("data-mce-contenteditable")===value)return!0}return!1},isContentEditableTrue=hasContentEditableState("true"),isContentEditableFalse=hasContentEditableState("false"),create=(type,title,url,level,attach)=>({type:type,title:title,url:url,level:level,attach:attach}),getElementText=elm=>elm.innerText||elm.textContent,isValidAnchor=elm=>(elm=>elm&&"A"===elm.nodeName&&void 0!==(elm.id||elm.name))(elm)&&isEditable(elm),isHeader=elm=>elm&&/^(H[1-6])$/.test(elm.nodeName),isEditable=elm=>(node=>{let tempNode=node;for(;tempNode=tempNode.parentNode;){const value=tempNode.contentEditable;if(value&&"inherit"!==value)return isContentEditableTrue(tempNode)}return!1})(elm)&&!isContentEditableFalse(elm),isValidHeader=elm=>isHeader(elm)&&isEditable(elm),headerTarget=elm=>{var _a;const headerId=(elm=>elm.id?elm.id:generate$6("h"))(elm);return create("header",null!==(_a=getElementText(elm))&&void 0!==_a?_a:"","#"+headerId,(elm=>isHeader(elm)?parseInt(elm.nodeName.substr(1),10):0)(elm),(()=>{elm.id=headerId}))},anchorTarget=elm=>{const anchorId=elm.id||elm.name,anchorText=getElementText(elm);return create("anchor",anchorText||"#"+anchorId,"#"+anchorId,0,noop)},getTargetElements=elm=>{const elms=(selector="h1,h2,h3,h4,h5,h6,a:not([href])",root=elm,map$2(descendants(SugarElement.fromDom(root),selector),(element=>element.dom)));var selector,root;return elms},hasTitle=target=>trim(target.title).length>0,LinkTargets_find=elm=>{const elms=getTargetElements(elm);return filter$2((elms=>map$2(filter$2(elms,isValidHeader),headerTarget))(elms).concat((elms=>map$2(filter$2(elms,isValidAnchor),anchorTarget))(elms)),hasTitle)},STORAGE_KEY="tinymce-url-history",isHttpUrl=url=>isString(url)&&/^https?/.test(url),isRecordOfUrlArray=r=>isObject(r)&&find$4(r,(value=>{return!(isArray(a=value)&&a.length<=5&&forall(a,isHttpUrl));var a})).isNone(),getAllHistory=()=>{const unparsedHistory=global$4.getItem(STORAGE_KEY);if(null===unparsedHistory)return{};let history;try{history=JSON.parse(unparsedHistory)}catch(e){if(e instanceof SyntaxError)return console.log("Local storage "+STORAGE_KEY+" was not valid JSON",e),{};throw e}return isRecordOfUrlArray(history)?history:(console.log("Local storage "+STORAGE_KEY+" was not valid format",history),{})},getHistory=fileType=>{const history=getAllHistory();return get$g(history,fileType).getOr([])},addToHistory=(url,fileType)=>{if(!isHttpUrl(url))return;const history=getAllHistory(),items=get$g(history,fileType).getOr([]),itemsWithoutUrl=filter$2(items,(item=>item!==url));history[fileType]=[url].concat(itemsWithoutUrl).slice(0,5),(history=>{if(!isRecordOfUrlArray(history))throw new Error("Bad format for history:\n"+JSON.stringify(history));global$4.setItem(STORAGE_KEY,JSON.stringify(history))})(history)},isTruthy=value=>!!value,makeMap=value=>map$1(global$1.makeMap(value,/[, ]/),isTruthy),getPicker=editor=>Optional.from(getFilePickerCallback(editor)),getPickerSetting=(editor,filetype)=>{const pickerTypes=(editor=>{const optFileTypes=Optional.from(getFilePickerTypes(editor)).filter(isTruthy).map(makeMap);return getPicker(editor).fold(never,(_picker=>optFileTypes.fold(always,(types=>keys(types).length>0&&types))))})(editor);return isBoolean(pickerTypes)?pickerTypes?getPicker(editor):Optional.none():pickerTypes[filetype]?getPicker(editor):Optional.none()},getTextSetting=value=>Optional.from(value).filter(isString).getOrUndefined(),UrlInputBackstage=editor=>({getHistory:getHistory,addToHistory:addToHistory,getLinkInformation:()=>(editor=>useTypeaheadUrls(editor)?Optional.some({targets:LinkTargets_find(editor.getBody()),anchorTop:getTextSetting(getAnchorTop(editor)),anchorBottom:getTextSetting(getAnchorBottom(editor))}):Optional.none())(editor),getValidationHandler:()=>(editor=>Optional.from(getFilePickerValidatorHandler(editor)))(editor),getUrlPicker:filetype=>((editor,filetype)=>getPickerSetting(editor,filetype).map((picker=>entry=>Future_nu((completer=>{const meta={filetype:filetype,fieldname:entry.fieldname,...Optional.from(entry.meta).getOr({})};picker.call(editor,((value,meta)=>{if(!isString(value))throw new Error("Expected value to be string");if(void 0!==meta&&!isObject(meta))throw new Error("Expected meta to be a object");completer({value:value,meta:meta})}),entry.value,meta)})))))(editor,filetype)}),init$6=(lazySinks,editor,lazyAnchorbar,lazyBottomAnchorBar)=>{const contextMenuState=Cell(!1),toolbar=(editor=>{const mode=Cell(isToolbarLocationBottom(editor)?"bottom":"top");return{isPositionedAtTop:()=>"top"===mode.get(),getDockingMode:mode.get,setDockingMode:mode.set}})(editor),providers={icons:()=>editor.ui.registry.getAll().icons,menuItems:()=>editor.ui.registry.getAll().menuItems,translate:global$8.translate,isDisabled:()=>editor.mode.isReadOnly()||!editor.ui.isEnabled(),getOption:editor.options.get},urlinput=UrlInputBackstage(editor),styles=(editor=>{const isSelectedFor=format=>()=>editor.formatter.match(format),getPreviewFor=format=>()=>{const fmt=editor.formatter.get(format);return void 0!==fmt?Optional.some({tag:fmt.length>0&&(fmt[0].inline||fmt[0].block)||"div",styles:editor.dom.parseStyle(editor.formatter.getCssText(format))}):Optional.none()},settingsFormats=Cell([]),eventsFormats=Cell([]),replaceSettings=Cell(!1);return editor.on("PreInit",(_e=>{const formats=getStyleFormats(editor),enriched=register$a(editor,formats,isSelectedFor,getPreviewFor);settingsFormats.set(enriched)})),editor.on("addStyleModifications",(e=>{const modifications=register$a(editor,e.items,isSelectedFor,getPreviewFor);eventsFormats.set(modifications),replaceSettings.set(e.replace)})),{getData:()=>{const fromSettings=replaceSettings.get()?[]:settingsFormats.get(),fromEvents=eventsFormats.get();return fromSettings.concat(fromEvents)}}})(editor),colorinput=(editor=>({colorPicker:colorPicker(editor),hasCustomColors:hasCustomColors(editor),getColors:getColors(editor),getColorCols:getColorCols(editor)}))(editor),dialogSettings=(editor=>({isDraggableModal:isDraggableModal(editor)}))(editor),commonBackstage={shared:{providers:providers,anchors:getAnchors(editor,lazyAnchorbar,lazyBottomAnchorBar,toolbar.isPositionedAtTop),header:toolbar},urlinput:urlinput,styles:styles,colorinput:colorinput,dialog:dialogSettings,isContextMenuOpen:()=>contextMenuState.get(),setContextMenuState:state=>contextMenuState.set(state)},popupBackstage={...commonBackstage,shared:{...commonBackstage.shared,interpreter:s=>interpretWithoutForm(s,{},popupBackstage),getSink:lazySinks.popup}},dialogBackstage={...commonBackstage,shared:{...commonBackstage.shared,interpreter:s=>interpretWithoutForm(s,{},dialogBackstage),getSink:lazySinks.dialog}};return{popup:popupBackstage,dialog:dialogBackstage}},parts$a=AlloyParts,partType=PartType,schema$f=constant$1([defaulted("shell",!1),required$1("makeItem"),defaulted("setupItem",noop),SketchBehaviours_field("listBehaviours",[Replacing])]),itemsPart=optional({name:"items",overrides:()=>({behaviours:derive$1([Replacing.config({})])})}),parts$9=constant$1([itemsPart]),CustomList=composite({name:constant$1("CustomList")(),configFields:schema$f(),partFields:parts$9(),factory:(detail,components,_spec,_external)=>{const extra=detail.shell?{behaviours:[Replacing.config({})],components:[]}:{behaviours:[],components:components},getListContainer=component=>detail.shell?Optional.some(component):getPart(component,detail,"items");return{uid:detail.uid,dom:detail.dom,components:extra.components,behaviours:augment(detail.listBehaviours,extra.behaviours),apis:{setItems:(list,items)=>{getListContainer(list).fold((()=>{throw console.error("Custom List was defined to not be a shell, but no item container was specified in components"),new Error("Custom List was defined to not be a shell, but no item container was specified in components")}),(container=>{const itemComps=Replacing.contents(container),numListsRequired=items.length,numListsToAdd=numListsRequired-itemComps.length,itemsToAdd=numListsToAdd>0?range$2(numListsToAdd,(()=>detail.makeItem())):[],itemsToRemove=itemComps.slice(numListsRequired);each$1(itemsToRemove,(item=>Replacing.remove(container,item))),each$1(itemsToAdd,(item=>Replacing.append(container,item)));const builtLists=Replacing.contents(container);each$1(builtLists,((item,i)=>{detail.setupItem(list,item,items[i],i)}))}))}}}},apis:{setItems:(apis,list,items)=>{apis.setItems(list,items)}}}),schema$e=constant$1([required$1("dom"),defaulted("shell",!0),field("toolbarBehaviours",[Replacing])]),parts$8=constant$1([optional({name:"groups",overrides:()=>({behaviours:derive$1([Replacing.config({})])})})]),Toolbar=composite({name:"Toolbar",configFields:schema$e(),partFields:parts$8(),factory:(detail,components,_spec,_externals)=>{const getGroupContainer=component=>detail.shell?Optional.some(component):getPart(component,detail,"groups"),extra=detail.shell?{behaviours:[Replacing.config({})],components:[]}:{behaviours:[],components:components};return{uid:detail.uid,dom:detail.dom,components:extra.components,behaviours:augment(detail.toolbarBehaviours,extra.behaviours),apis:{setGroups:(toolbar,groups)=>{getGroupContainer(toolbar).fold((()=>{throw console.error("Toolbar was defined to not be a shell, but no groups container was specified in components"),new Error("Toolbar was defined to not be a shell, but no groups container was specified in components")}),(container=>{Replacing.set(container,groups)}))},refresh:noop},domModification:{attributes:{role:"group"}}}},apis:{setGroups:(apis,toolbar,groups)=>{apis.setGroups(toolbar,groups)}}}),setup$a=noop,isDocked$2=never,getBehaviours$1=constant$1([]);var StaticHeader=Object.freeze({__proto__:null,setup:setup$a,isDocked:isDocked$2,getBehaviours:getBehaviours$1});const getOffsetParent=element=>(is$1(getRaw(element,"position"),"fixed")?Optional.none():offsetParent(element)).orThunk((()=>{const marker=SugarElement.fromTag("span");return parent(element).bind((parent=>{append$2(parent,marker);const offsetParent$1=offsetParent(marker);return remove$5(marker),offsetParent$1}))})),getOrigin=element=>getOffsetParent(element).map(absolute$3).getOrThunk((()=>SugarPosition(0,0))),appear=(component,contextualInfo)=>{const elem=component.element;add$2(elem,contextualInfo.transitionClass),remove$2(elem,contextualInfo.fadeOutClass),add$2(elem,contextualInfo.fadeInClass),contextualInfo.onShow(component)},disappear=(component,contextualInfo)=>{const elem=component.element;add$2(elem,contextualInfo.transitionClass),remove$2(elem,contextualInfo.fadeInClass),add$2(elem,contextualInfo.fadeOutClass),contextualInfo.onHide(component)},isTopCompletelyVisible=(box,bounds)=>box.y>=bounds.y,isBottomCompletelyVisible=(box,bounds)=>box.bottom<=bounds.bottom,forceTopPosition=(winBox,leftX,viewport)=>({location:"top",leftX:leftX,topY:viewport.bounds.y-winBox.y}),forceBottomPosition=(winBox,leftX,viewport)=>({location:"bottom",leftX:leftX,bottomY:winBox.bottom-viewport.bounds.bottom}),getDockedLeftPosition=bounds=>bounds.box.x-bounds.win.x,getPrior=(elem,viewport,state)=>state.getInitialPos().map((pos=>{const xy=((pos,viewport)=>{const priorY=viewport.optScrollEnv.fold(constant$1(pos.bounds.y),(scrollEnv=>scrollEnv.scrollElmTop+(pos.bounds.y-scrollEnv.currentScrollTop)));return SugarPosition(pos.bounds.x,priorY)})(pos,viewport);return{box:bounds(xy.left,xy.top,get$c(elem),get$d(elem)),location:pos.location}})),storePrior=(elem,box,viewport,state,decision)=>{const xy=((box,viewport)=>{const priorY=viewport.optScrollEnv.fold(constant$1(box.y),(scrollEnv=>box.y+scrollEnv.currentScrollTop-scrollEnv.scrollElmTop));return SugarPosition(box.x,priorY)})(box,viewport),bounds$1=bounds(xy.left,xy.top,box.width,box.height);state.setInitialPos({style:getAllRaw(elem),position:get$e(elem,"position")||"static",bounds:bounds$1,location:decision.location})},revertToOriginal=(elem,box,state)=>state.getInitialPos().bind((position=>{var _a;switch(state.clearInitialPos(),position.position){case"static":return Optional.some({morph:"static"});case"absolute":const offsetParent=getOffsetParent(elem).getOr(body()),offsetBox=box$1(offsetParent),scrollDelta=null!==(_a=offsetParent.dom.scrollTop)&&void 0!==_a?_a:0;return Optional.some({morph:"absolute",positionCss:NuPositionCss("absolute",get$g(position.style,"left").map((_left=>box.x-offsetBox.x)),get$g(position.style,"top").map((_top=>box.y-offsetBox.y+scrollDelta)),get$g(position.style,"right").map((_right=>offsetBox.right-box.right)),get$g(position.style,"bottom").map((_bottom=>offsetBox.bottom-box.bottom)))});default:return Optional.none()}})),tryMorphToOriginal=(elem,viewport,state)=>getPrior(elem,viewport,state).filter((({box:box})=>((modes,box,viewport)=>forall(modes,(mode=>{switch(mode){case"bottom":return isBottomCompletelyVisible(box,viewport.bounds);case"top":return isTopCompletelyVisible(box,viewport.bounds)}})))(state.getModes(),box,viewport))).bind((({box:box})=>revertToOriginal(elem,box,state))),tryDecisionToFixedMorph=decision=>{switch(decision.location){case"top":return Optional.some({morph:"fixed",positionCss:NuPositionCss("fixed",Optional.some(decision.leftX),Optional.some(decision.topY),Optional.none(),Optional.none())});case"bottom":return Optional.some({morph:"fixed",positionCss:NuPositionCss("fixed",Optional.some(decision.leftX),Optional.none(),Optional.none(),Optional.some(decision.bottomY))});default:return Optional.none()}},tryMorphToFixed=(elem,viewport,state)=>{const box=box$1(elem),winBox=win(),decision=((modes,bounds,viewport)=>{const winBox=bounds.win,box=bounds.box,leftX=getDockedLeftPosition(bounds);return findMap(modes,(mode=>{switch(mode){case"bottom":return isBottomCompletelyVisible(box,viewport.bounds)?Optional.none():Optional.some(forceBottomPosition(winBox,leftX,viewport));case"top":return isTopCompletelyVisible(box,viewport.bounds)?Optional.none():Optional.some(forceTopPosition(winBox,leftX,viewport));default:return Optional.none()}})).getOr({location:"no-dock"})})(state.getModes(),{win:winBox,box:box},viewport);return"top"===decision.location||"bottom"===decision.location?(storePrior(elem,box,viewport,state,decision),tryDecisionToFixedMorph(decision)):Optional.none()},tryMorph=(component,viewport,state)=>{const elem=component.element;return is$1(getRaw(elem,"position"),"fixed")?((elem,viewport,state)=>tryMorphToOriginal(elem,viewport,state).orThunk((()=>viewport.optScrollEnv.bind((_=>getPrior(elem,viewport,state))).bind((({box:box,location:location})=>{const winBox=win(),leftX=getDockedLeftPosition({win:winBox,box:box}),decision="top"===location?forceTopPosition(winBox,leftX,viewport):forceBottomPosition(winBox,leftX,viewport);return tryDecisionToFixedMorph(decision)})))))(elem,viewport,state):tryMorphToFixed(elem,viewport,state)},forceDockWith=(elem,viewport,state,getDecision)=>{const box=box$1(elem),winBox=win(),decision=getDecision(winBox,getDockedLeftPosition({win:winBox,box:box}),viewport);return"bottom"===decision.location||"top"===decision.location?(((elem,box,viewport,state,decision)=>{state.getInitialPos().fold((()=>storePrior(elem,box,viewport,state,decision)),(()=>noop))})(elem,box,viewport,state,decision),tryDecisionToFixedMorph(decision)):Optional.none()},morphToStatic=(component,config,state)=>{state.setDocked(!1),each$1(["left","right","top","bottom","position"],(prop=>remove$6(component.element,prop))),config.onUndocked(component)},morphToCoord=(component,config,state,position)=>{const isDocked="fixed"===position.position;state.setDocked(isDocked),applyPositionCss(component.element,position);(isDocked?config.onDocked:config.onUndocked)(component)},updateVisibility=(component,config,state,viewport,morphToDocked=!1)=>{config.contextual.each((contextInfo=>{contextInfo.lazyContext(component).each((box=>{const isVisible=((box,bounds)=>box.y<bounds.bottom&&box.bottom>bounds.y)(box,viewport.bounds);if(isVisible!==state.isVisible())if(state.setVisible(isVisible),morphToDocked&&!isVisible)add$1(component.element,[contextInfo.fadeOutClass]),contextInfo.onHide(component);else{(isVisible?appear:disappear)(component,contextInfo)}}))}))},applyFixedMorph=(component,config,state,viewport,morph)=>{updateVisibility(component,config,state,viewport,!0),morphToCoord(component,config,state,morph.positionCss)},refreshInternal=(component,config,state)=>{const viewport=config.lazyViewport(component);updateVisibility(component,config,state,viewport),tryMorph(component,viewport,state).each((morph=>{((component,config,state,viewport,morph)=>{switch(morph.morph){case"static":return morphToStatic(component,config,state);case"absolute":return morphToCoord(component,config,state,morph.positionCss);case"fixed":applyFixedMorph(component,config,state,viewport,morph)}})(component,config,state,viewport,morph)}))},resetInternal=(component,config,state)=>{const elem=component.element;state.setDocked(!1);const viewport=config.lazyViewport(component);((component,viewport,state)=>{const elem=component.element;return getPrior(elem,viewport,state).bind((({box:box})=>revertToOriginal(elem,box,state)))})(component,viewport,state).each((staticOrAbsoluteMorph=>{switch(staticOrAbsoluteMorph.morph){case"static":morphToStatic(component,config,state);break;case"absolute":morphToCoord(component,config,state,staticOrAbsoluteMorph.positionCss)}})),state.setVisible(!0),config.contextual.each((contextInfo=>{remove$1(elem,[contextInfo.fadeInClass,contextInfo.fadeOutClass,contextInfo.transitionClass]),contextInfo.onShow(component)})),refresh$3(component,config,state)},refresh$3=(component,config,state)=>{component.getSystem().isConnected()&&refreshInternal(component,config,state)},reset=(component,config,state)=>{state.isDocked()&&resetInternal(component,config,state)},forceDockWithDecision=getDecision=>(component,config,state)=>{const viewport=config.lazyViewport(component);forceDockWith(component.element,viewport,state,getDecision).each((morph=>{applyFixedMorph(component,config,state,viewport,morph)}))},forceDockToTop=forceDockWithDecision(forceTopPosition),forceDockToBottom=forceDockWithDecision(forceBottomPosition);var DockingApis=Object.freeze({__proto__:null,refresh:refresh$3,reset:reset,isDocked:(component,config,state)=>state.isDocked(),getModes:(component,config,state)=>state.getModes(),setModes:(component,config,state,modes)=>state.setModes(modes),forceDockToTop:forceDockToTop,forceDockToBottom:forceDockToBottom});var ActiveDocking=Object.freeze({__proto__:null,events:(dockInfo,dockState)=>derive$2([runOnSource(transitionend(),((component,simulatedEvent)=>{dockInfo.contextual.each((contextInfo=>{if(has(component.element,contextInfo.transitionClass)){remove$1(component.element,[contextInfo.transitionClass,contextInfo.fadeInClass]);(dockState.isVisible()?contextInfo.onShown:contextInfo.onHidden)(component)}simulatedEvent.stop()}))})),run$1(windowScroll(),((component,_)=>{refresh$3(component,dockInfo,dockState)})),run$1(externalElementScroll(),((component,_)=>{refresh$3(component,dockInfo,dockState)})),run$1(windowResize(),((component,_)=>{reset(component,dockInfo,dockState)}))])}),DockingSchema=[optionObjOf("contextual",[requiredString("fadeInClass"),requiredString("fadeOutClass"),requiredString("transitionClass"),requiredFunction("lazyContext"),onHandler("onShow"),onHandler("onShown"),onHandler("onHide"),onHandler("onHidden")]),defaultedFunction("lazyViewport",(()=>({bounds:win(),optScrollEnv:Optional.none()}))),defaultedArrayOf("modes",["top","bottom"],string),onHandler("onDocked"),onHandler("onUndocked")];const Docking=create$4({fields:DockingSchema,name:"docking",active:ActiveDocking,apis:DockingApis,state:Object.freeze({__proto__:null,init:spec=>{const docked=Cell(!1),visible=Cell(!0),initialBounds=value$2(),modes=Cell(spec.modes);return nu$8({isDocked:docked.get,setDocked:docked.set,getInitialPos:initialBounds.get,setInitialPos:initialBounds.set,clearInitialPos:initialBounds.clear,isVisible:visible.get,setVisible:visible.set,getModes:modes.get,setModes:modes.set,readState:()=>`docked:  ${docked.get()}, visible: ${visible.get()}, modes: ${modes.get().join(",")}`})}})}),toolbarHeightChange=constant$1(generate$6("toolbar-height-change")),visibility={fadeInClass:"tox-editor-dock-fadein",fadeOutClass:"tox-editor-dock-fadeout",transitionClass:"tox-editor-dock-transition"},isDockedMode=(header,mode)=>contains$2(Docking.getModes(header),mode),updateIframeContentFlow=header=>{const elm=header.element;parentElement(elm).each((parentElem=>{const padding="padding-"+Docking.getModes(header)[0];if(Docking.isDocked(header)){const parentWidth=get$c(parentElem);set$8(elm,"width",parentWidth+"px"),set$8(parentElem,padding,(elm=>getOuter$2(elm)+(parseInt(get$e(elm,"margin-top"),10)||0)+(parseInt(get$e(elm,"margin-bottom"),10)||0))(elm)+"px")}else remove$6(elm,"width"),remove$6(parentElem,padding)}))},updateSinkVisibility=(sinkElem,visible)=>{visible?(remove$2(sinkElem,visibility.fadeOutClass),add$1(sinkElem,[visibility.transitionClass,visibility.fadeInClass])):(remove$2(sinkElem,visibility.fadeInClass),add$1(sinkElem,[visibility.fadeOutClass,visibility.transitionClass]))},updateEditorClasses=(editor,docked)=>{const editorContainer=SugarElement.fromDom(editor.getContainer());docked?(add$2(editorContainer,"tox-tinymce--toolbar-sticky-on"),remove$2(editorContainer,"tox-tinymce--toolbar-sticky-off")):(add$2(editorContainer,"tox-tinymce--toolbar-sticky-off"),remove$2(editorContainer,"tox-tinymce--toolbar-sticky-on"))},getBehaviours=(editor,sharedBackstage)=>{const focusedElm=value$2(),lazySink=sharedBackstage.getSink,runOnSinkElement=f=>{lazySink().each((sink=>f(sink.element)))},onDockingSwitch=comp=>{editor.inline||updateIframeContentFlow(comp),updateEditorClasses(editor,Docking.isDocked(comp)),comp.getSystem().broadcastOn([repositionPopups()],{}),lazySink().each((sink=>sink.getSystem().broadcastOn([repositionPopups()],{})))},additionalBehaviours=editor.inline?[]:[Receiving.config({channels:{[toolbarHeightChange()]:{onReceive:updateIframeContentFlow}}})];return[Focusing.config({}),Docking.config({contextual:{lazyContext:comp=>{const headerHeight=getOuter$2(comp.element),container=editor.inline?editor.getContentAreaContainer():editor.getContainer();return Optional.from(container).map((c=>{const box=box$1(SugarElement.fromDom(c));return detectWhenSplitUiMode(editor,comp.element).fold((()=>{const boxHeight=box.height-headerHeight,topBound=box.y+(isDockedMode(comp,"top")?0:headerHeight);return bounds(box.x,topBound,box.width,boxHeight)}),(scrollEnv=>{const constrainedBounds=constrain(box,getBoundsFrom(scrollEnv)),constrainedBoundsY=isDockedMode(comp,"top")?constrainedBounds.y:constrainedBounds.y+headerHeight;return bounds(constrainedBounds.x,constrainedBoundsY,constrainedBounds.width,constrainedBounds.height-headerHeight)}))}))},onShow:()=>{runOnSinkElement((elem=>updateSinkVisibility(elem,!0)))},onShown:comp=>{runOnSinkElement((elem=>remove$1(elem,[visibility.transitionClass,visibility.fadeInClass]))),focusedElm.get().each((elem=>{((headerElem,focusedElem)=>{const ownerDoc=owner$4(focusedElem);active$1(ownerDoc).filter((activeElm=>!eq(focusedElem,activeElm))).filter((activeElm=>eq(activeElm,SugarElement.fromDom(ownerDoc.dom.body))||contains(headerElem,activeElm))).each((()=>focus$3(focusedElem)))})(comp.element,elem),focusedElm.clear()}))},onHide:comp=>{((rootElm,lazySink)=>search(rootElm).orThunk((()=>lazySink().toOptional().bind((sink=>search(sink.element))))))(comp.element,lazySink).fold(focusedElm.clear,focusedElm.set),runOnSinkElement((elem=>updateSinkVisibility(elem,!1)))},onHidden:()=>{runOnSinkElement((elem=>remove$1(elem,[visibility.transitionClass])))},...visibility},lazyViewport:comp=>detectWhenSplitUiMode(editor,comp.element).fold((()=>{const boundsWithoutOffset=win(),offset=getStickyToolbarOffset(editor),top=boundsWithoutOffset.y+(isDockedMode(comp,"top")?offset:0),height=boundsWithoutOffset.height-(isDockedMode(comp,"bottom")?offset:0);return{bounds:bounds(boundsWithoutOffset.x,top,boundsWithoutOffset.width,height),optScrollEnv:Optional.none()}}),(sc=>({bounds:getBoundsFrom(sc),optScrollEnv:Optional.some({currentScrollTop:sc.element.dom.scrollTop,scrollElmTop:absolute$3(sc.element).top})}))),modes:[sharedBackstage.header.getDockingMode()],onDocked:onDockingSwitch,onUndocked:onDockingSwitch}),...additionalBehaviours]};var StickyHeader=Object.freeze({__proto__:null,setup:(editor,sharedBackstage,lazyHeader)=>{editor.inline||(sharedBackstage.header.isPositionedAtTop()||editor.on("ResizeEditor",(()=>{lazyHeader().each(Docking.reset)})),editor.on("ResizeWindow ResizeEditor",(()=>{lazyHeader().each(updateIframeContentFlow)})),editor.on("SkinLoaded",(()=>{lazyHeader().each((comp=>{Docking.isDocked(comp)?Docking.reset(comp):Docking.refresh(comp)}))})),editor.on("FullscreenStateChanged",(()=>{lazyHeader().each(Docking.reset)}))),editor.on("AfterScrollIntoView",(e=>{lazyHeader().each((header=>{Docking.refresh(header);const headerElem=header.element;isVisible(headerElem)&&((e,containerHeader)=>{const doc=owner$4(containerHeader),viewHeight=defaultView(containerHeader).dom.innerHeight,scrollPos=get$b(doc),markerElement=SugarElement.fromDom(e.elm),markerPos=absolute$2(markerElement),markerHeight=get$d(markerElement),markerTop=markerPos.y,markerBottom=markerTop+markerHeight,editorHeaderPos=absolute$3(containerHeader),editorHeaderHeight=get$d(containerHeader),editorHeaderTop=editorHeaderPos.top,editorHeaderBottom=editorHeaderTop+editorHeaderHeight,editorHeaderDockedAtTop=Math.abs(editorHeaderTop-scrollPos.top)<2,editorHeaderDockedAtBottom=Math.abs(editorHeaderBottom-(scrollPos.top+viewHeight))<2;if(editorHeaderDockedAtTop&&markerTop<editorHeaderBottom)to(scrollPos.left,markerTop-editorHeaderHeight,doc);else if(editorHeaderDockedAtBottom&&markerBottom>editorHeaderTop){const y=markerTop-viewHeight+markerHeight+editorHeaderHeight;to(scrollPos.left,y,doc)}})(e,headerElem)}))})),editor.on("PostRender",(()=>{updateEditorClasses(editor,!1)}))},isDocked:lazyHeader=>lazyHeader().map(Docking.isDocked).getOr(!1),getBehaviours:getBehaviours});const groupToolbarButtonSchema=objOf([type,requiredOf("items",oneOf([arrOfObj([name$1,requiredArrayOf("items",string)]),string]))].concat(baseToolbarButtonFields)),baseMenuButtonFields=[optionString("text"),optionString("tooltip"),optionString("icon"),defaultedOf("search",!1,oneOf([boolean,objOf([optionString("placeholder")])],(x=>isBoolean(x)?x?Optional.some({placeholder:Optional.none()}):Optional.none():Optional.some(x)))),requiredFunction("fetch"),defaultedFunction("onSetup",(()=>noop))],MenuButtonSchema=objOf([type,...baseMenuButtonFields]),createMenuButton=spec=>asRaw("menubutton",MenuButtonSchema,spec),splitButtonSchema=objOf([type,optionalTooltip,optionalIcon,optionalText,optionalSelect,fetch$1,onSetup,defaultedStringEnum("presets","normal",["normal","color","listpreview"]),defaultedColumns(1),onAction,onItemAction]);var SilverMenubar=single({factory:(detail,spec)=>{const apis={focus:Keying.focusIn,setMenus:(comp,menus)=>{const newMenus=map$2(menus,(m=>{const buttonSpec={type:"menubutton",text:m.text,fetch:callback=>{callback(m.getItems())}},internal=createMenuButton(buttonSpec).mapError((errInfo=>formatError(errInfo))).getOrDie();return renderMenuButton(internal,"tox-mbtn",spec.backstage,Optional.some("menuitem"))}));Replacing.set(comp,newMenus)}};return{uid:detail.uid,dom:detail.dom,components:[],behaviours:derive$1([Replacing.config({}),config("menubar-events",[runOnAttached((component=>{detail.onSetup(component)})),run$1(mouseover(),((comp,se)=>{descendant(comp.element,".tox-mbtn--active").each((activeButton=>{closest$1(se.event.target,".tox-mbtn").each((hoveredButton=>{eq(activeButton,hoveredButton)||comp.getSystem().getByDom(activeButton).each((activeComp=>{comp.getSystem().getByDom(hoveredButton).each((hoveredComp=>{Dropdown.expand(hoveredComp),Dropdown.close(activeComp),Focusing.focus(hoveredComp)}))}))}))}))})),run$1(focusShifted(),((comp,se)=>{se.event.prevFocus.bind((prev=>comp.getSystem().getByDom(prev).toOptional())).each((prev=>{se.event.newFocus.bind((nu=>comp.getSystem().getByDom(nu).toOptional())).each((nu=>{Dropdown.isOpen(prev)&&(Dropdown.expand(nu),Dropdown.close(prev))}))}))}))]),Keying.config({mode:"flow",selector:".tox-mbtn",onEscape:comp=>(detail.onEscape(comp),Optional.some(!0))}),Tabstopping.config({})]),apis:apis,domModification:{attributes:{role:"menubar"}}}},name:"silver.Menubar",configFields:[required$1("dom"),required$1("uid"),required$1("onEscape"),required$1("backstage"),defaulted("onSetup",noop)],apis:{focus:(apis,comp)=>{apis.focus(comp)},setMenus:(apis,comp,menus)=>{apis.setMenus(comp,menus)}}});const schema$d=[field("slotBehaviours",[])],getPartName=name=>"<alloy.field."+name+">",make$1=(detail,components)=>{const getSlotNames=_=>getAllPartNames(detail),onSlot=(f,def)=>(container,key)=>getPart(container,detail,key).map((slot=>f(slot,key))).getOr(def),doShowing=(comp,_key)=>"true"!==get$f(comp.element,"aria-hidden"),isShowing=onSlot(doShowing,!1),hideSlot=onSlot(((comp,key)=>{if(doShowing(comp)){const element=comp.element;set$8(element,"display","none"),set$9(element,"aria-hidden","true"),emitWith(comp,slotVisibility(),{name:key,visible:!1})}})),hideSlots=(f=>(container,keys)=>{each$1(keys,(key=>f(container,key)))})(hideSlot),showSlot=onSlot(((comp,key)=>{if(!doShowing(comp)){const element=comp.element;remove$6(element,"display"),remove$7(element,"aria-hidden"),emitWith(comp,slotVisibility(),{name:key,visible:!0})}})),apis={getSlotNames:getSlotNames,getSlot:(container,key)=>getPart(container,detail,key),isShowing:isShowing,hideSlot:hideSlot,hideAllSlots:container=>hideSlots(container,getSlotNames()),showSlot:showSlot};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:get$3(detail.slotBehaviours),apis:apis}},slotApis=map$1({getSlotNames:(apis,c)=>apis.getSlotNames(c),getSlot:(apis,c,key)=>apis.getSlot(c,key),isShowing:(apis,c,key)=>apis.isShowing(c,key),hideSlot:(apis,c,key)=>apis.hideSlot(c,key),hideAllSlots:(apis,c)=>apis.hideAllSlots(c),showSlot:(apis,c,key)=>apis.showSlot(c,key)},(value=>makeApi(value))),SlotContainer={...slotApis,sketch:sSpec=>{const parts=(()=>{const record=[];return{slot:(name,config)=>(record.push(name),generateOne$1("container",getPartName(name),config)),record:constant$1(record)}})(),spec=sSpec(parts),partNames=parts.record(),fieldParts=map$2(partNames,(n=>required({name:n,pname:getPartName(n)})));return composite$1("container",schema$d,fieldParts,make$1,spec)}},sidebarSchema=objOf([optionalIcon,optionalTooltip,defaultedFunction("onShow",noop),defaultedFunction("onHide",noop),onSetup]),getApi=comp=>({element:()=>comp.element.dom}),makePanels=(parts,panelConfigs)=>{const specs=map$2(keys(panelConfigs),(name=>{const spec=panelConfigs[name],bridged=getOrDie((spec=>asRaw("sidebar",sidebarSchema,spec))(spec));return{name:name,getApi:getApi,onSetup:bridged.onSetup,onShow:bridged.onShow,onHide:bridged.onHide}}));return map$2(specs,(spec=>{const editorOffCell=Cell(noop);return parts.slot(spec.name,{dom:{tag:"div",classes:["tox-sidebar__pane"]},behaviours:SimpleBehaviours_unnamedEvents([onControlAttached(spec,editorOffCell),onControlDetached(spec,editorOffCell),run$1(slotVisibility(),((sidepanel,se)=>{const data=se.event,optSidePanelSpec=find$5(specs,(config=>config.name===data.name));optSidePanelSpec.each((sidePanelSpec=>{(data.visible?sidePanelSpec.onShow:sidePanelSpec.onHide)(sidePanelSpec.getApi(sidepanel))}))}))])})}))},makeSidebar=panelConfigs=>SlotContainer.sketch((parts=>({dom:{tag:"div",classes:["tox-sidebar__pane-container"]},components:makePanels(parts,panelConfigs),slotBehaviours:SimpleBehaviours_unnamedEvents([runOnAttached((slotContainer=>SlotContainer.hideAllSlots(slotContainer)))])}))),updateSidebarRoleOnToggle=(sidebar,sidebarState)=>{set$9(sidebar,"role",sidebarState)},whichSidebar=sidebar=>Composing.getCurrent(sidebar).bind((slider=>{if(Sliding.isGrowing(slider)||Sliding.hasGrown(slider)){return Composing.getCurrent(slider).bind((slotContainer=>find$5(SlotContainer.getSlotNames(slotContainer),(name=>SlotContainer.isShowing(slotContainer,name)))))}return Optional.none()})),fixSize=generate$6("FixSizeEvent"),autoSize=generate$6("AutoSizeEvent");var BlockingApis=Object.freeze({__proto__:null,block:(component,config,state,getBusySpec)=>{set$9(component.element,"aria-busy",!0);const root=config.getRoot(component).getOr(component),blockerBehaviours=derive$1([Keying.config({mode:"special",onTab:()=>Optional.some(!0),onShiftTab:()=>Optional.some(!0)}),Focusing.config({})]),blockSpec=getBusySpec(root,blockerBehaviours),blocker=root.getSystem().build(blockSpec);Replacing.append(root,premade(blocker)),blocker.hasConfigured(Keying)&&config.focus&&Keying.focusIn(blocker),state.isBlocked()||config.onBlock(component),state.blockWith((()=>Replacing.remove(root,blocker)))},unblock:(component,config,state)=>{remove$7(component.element,"aria-busy"),state.isBlocked()&&config.onUnblock(component),state.clear()},isBlocked:(component,blockingConfig,blockingState)=>blockingState.isBlocked()}),BlockingSchema=[defaultedFunction("getRoot",Optional.none),defaultedBoolean("focus",!0),onHandler("onBlock"),onHandler("onUnblock")];const Blocking=create$4({fields:BlockingSchema,name:"blocking",apis:BlockingApis,state:Object.freeze({__proto__:null,init:()=>{const blocker=singleton((s=>s.destroy()));return nu$8({readState:blocker.isSet,blockWith:destroy=>{blocker.set({destroy:destroy})},clear:blocker.clear,isBlocked:blocker.isSet})}})}),focusBusyComponent=throbber=>Composing.getCurrent(throbber).each((comp=>focus$3(comp.element,!0))),toggleThrobber=(editor,comp,state,providerBackstage)=>{const element=comp.element;if(((editor,state)=>{Optional.from(editor.iframeElement).map(SugarElement.fromDom).each((iframe=>{state?(getOpt(iframe,"tabindex").each((tabIndex=>set$9(iframe,"data-mce-tabindex",tabIndex))),set$9(iframe,"tabindex",-1)):(remove$7(iframe,"tabindex"),getOpt(iframe,"data-mce-tabindex").each((tabIndex=>{set$9(iframe,"tabindex",tabIndex),remove$7(iframe,"data-mce-tabindex")})))}))})(editor,state),state)Blocking.block(comp,(providerBackstage=>(_root,_behaviours)=>({dom:{tag:"div",attributes:{"aria-label":providerBackstage.translate("Loading..."),tabindex:"0"},classes:["tox-throbber__busy-spinner"]},components:[{dom:fromHtml('<div class="tox-spinner"><div></div><div></div><div></div></div>')}]}))(providerBackstage)),remove$6(element,"display"),remove$7(element,"aria-hidden"),editor.hasFocus()&&focusBusyComponent(comp);else{const throbberFocus=Composing.getCurrent(comp).exists((busyComp=>hasFocus(busyComp.element)));Blocking.unblock(comp),set$8(element,"display","none"),set$9(element,"aria-hidden","true"),throbberFocus&&editor.focus()}},setup$7=(editor,lazyThrobber,sharedBackstage)=>{const throbberState=Cell(!1),timer=value$2(),stealFocus=e=>{throbberState.get()&&!(event=>{if((event=>"focusin"===event.type)(event))return(event.composed?head(event.composedPath()):Optional.from(event.target)).map(SugarElement.fromDom).filter(isElement$1).exists((targetElm=>has(targetElm,"mce-pastebin")));return!1})(e)&&(e.preventDefault(),focusBusyComponent(lazyThrobber()),editor.editorManager.setActive(editor))};editor.inline||editor.on("PreInit",(()=>{editor.dom.bind(editor.getWin(),"focusin",stealFocus),editor.on("BeforeExecCommand",(e=>{"mcefocus"===e.command.toLowerCase()&&!0!==e.value&&stealFocus(e)}))}));const toggle=state=>{state!==throbberState.get()&&(throbberState.set(state),toggleThrobber(editor,lazyThrobber(),state,sharedBackstage.providers),((editor,state)=>{editor.dispatch("AfterProgressState",{state:state})})(editor,state))};editor.on("ProgressState",(e=>{if(timer.on(clearTimeout),isNumber(e.time)){const timerId=global$9.setEditorTimeout(editor,(()=>toggle(e.state)),e.time);timer.set(timerId)}else toggle(e.state),timer.clear()}))},output=(within,extra,withinWidth)=>({within:within,extra:extra,withinWidth:withinWidth}),apportion=(units,total,len)=>{const parray=((xs,f)=>{const r=foldl(xs,((b,a)=>f(a,b.len).fold(constant$1(b),(v=>({len:v.finish,list:b.list.concat([v])})))),{len:0,list:[]});return r.list})(units,((unit,current)=>{const width=len(unit);return Optional.some({element:unit,start:current,finish:current+width,width:width})})),within=filter$2(parray,(unit=>unit.finish<=total)),withinWidth=foldr(within,((acc,el)=>acc+el.width),0);return{within:within,extra:parray.slice(within.length),withinWidth:withinWidth}},toUnit=parray=>map$2(parray,(unit=>unit.element)),partition=(total,units,len,overflower)=>{const divide=((total,units,len)=>{const divide=apportion(units,total,len);return 0===divide.extra.length?Optional.some(divide):Optional.none()})(total,units,len).getOrThunk((()=>apportion(units,total-len(overflower),len))),within=divide.within,extra=divide.extra,withinWidth=divide.withinWidth;return 1===extra.length&&extra[0].width<=len(overflower)?((within,extra,withinWidth)=>{const fits=toUnit(within.concat(extra));return output(fits,[],withinWidth)})(within,extra,withinWidth):extra.length>=1?((within,extra,overflower,withinWidth)=>{const fits=toUnit(within).concat([overflower]);return output(fits,toUnit(extra),withinWidth)})(within,extra,overflower,withinWidth):((within,extra,withinWidth)=>output(toUnit(within),[],withinWidth))(within,0,withinWidth)},setGroups$1=(toolbar,storedGroups)=>{const bGroups=map$2(storedGroups,(g=>premade(g)));Toolbar.setGroups(toolbar,bGroups)},refresh$2=(toolbar,detail,setOverflow)=>{const builtGroups=detail.builtGroups.get();if(0===builtGroups.length)return;const primary=getPartOrDie(toolbar,detail,"primary"),overflowGroup=Coupling.getCoupled(toolbar,"overflowGroup");set$8(primary.element,"visibility","hidden");const groups=builtGroups.concat([overflowGroup]),focusedComp=findMap(groups,(comp=>search(comp.element).bind((focusedElm=>comp.getSystem().getByDom(focusedElm).toOptional()))));setOverflow([]),setGroups$1(primary,groups);const availableWidth=get$c(primary.element),overflows=partition(availableWidth,detail.builtGroups.get(),(comp=>get$c(comp.element)),overflowGroup);0===overflows.extra.length?(Replacing.remove(primary,overflowGroup),setOverflow([])):(setGroups$1(primary,overflows.within),setOverflow(overflows.extra)),remove$6(primary.element,"visibility"),reflow(primary.element),focusedComp.each(Focusing.focus)},schema$c=constant$1([field("splitToolbarBehaviours",[Coupling]),customField("builtGroups",(()=>Cell([])))]),schema$b=constant$1([markers$1(["overflowToggledClass"]),optionFunction("getOverflowBounds"),required$1("lazySink"),customField("overflowGroups",(()=>Cell([]))),onHandler("onOpened"),onHandler("onClosed")].concat(schema$c())),parts$7=constant$1([required({factory:Toolbar,schema:schema$e(),name:"primary"}),external({schema:schema$e(),name:"overflow"}),external({name:"overflow-button"}),external({name:"overflow-group"})]),expandable=constant$1(((element,available)=>{((element,value)=>{const absMax=api$1.max(element,value,["margin-left","border-left-width","padding-left","padding-right","border-right-width","margin-right"]);set$8(element,"max-width",absMax+"px")})(element,Math.floor(available))})),schema$a=constant$1([markers$1(["toggledClass"]),required$1("lazySink"),requiredFunction("fetch"),optionFunction("getBounds"),optionObjOf("fireDismissalEventInstead",[defaulted("event",dismissRequested())]),schema$y(),onHandler("onToggled")]),parts$6=constant$1([external({name:"button",overrides:detail=>({dom:{attributes:{"aria-haspopup":"true"}},buttonBehaviours:derive$1([Toggling.config({toggleClass:detail.markers.toggledClass,aria:{mode:"expanded"},toggleOnExecute:!1,onToggled:detail.onToggled})])})}),external({factory:Toolbar,schema:schema$e(),name:"toolbar",overrides:detail=>({toolbarBehaviours:derive$1([Keying.config({mode:"cyclic",onEscape:comp=>(getPart(comp,detail,"button").each(Focusing.focus),Optional.none())})])})})]),shouldSkipFocus=value$2(),toggle=(button,externals)=>{const toolbarSandbox=Coupling.getCoupled(button,"toolbarSandbox");Sandboxing.isOpen(toolbarSandbox)?Sandboxing.close(toolbarSandbox):Sandboxing.open(toolbarSandbox,externals.toolbar())},position=(button,toolbar,detail,layouts)=>{const bounds=detail.getBounds.map((bounder=>bounder())),sink=detail.lazySink(button).getOrDie();Positioning.positionWithinBounds(sink,toolbar,{anchor:{type:"hotspot",hotspot:button,layouts:layouts,overrides:{maxWidthFunction:expandable()}}},bounds)},setGroups=(button,toolbar,detail,layouts,groups)=>{Toolbar.setGroups(toolbar,groups),position(button,toolbar,detail,layouts),Toggling.on(button)},FloatingToolbarButton=composite({name:"FloatingToolbarButton",factory:(detail,components,spec,externals)=>({...Button.sketch({...externals.button(),action:button=>{toggle(button,externals)},buttonBehaviours:SketchBehaviours_augment({dump:externals.button().buttonBehaviours},[Coupling.config({others:{toolbarSandbox:button=>((button,spec,detail)=>{const ariaControls=manager();return{dom:{tag:"div",attributes:{id:ariaControls.id}},behaviours:derive$1([Keying.config({mode:"special",onEscape:comp=>(Sandboxing.close(comp),Optional.some(!0))}),Sandboxing.config({onOpen:(sandbox,toolbar)=>{const skipFocus=shouldSkipFocus.get().getOr(!1);detail.fetch().get((groups=>{setGroups(button,toolbar,detail,spec.layouts,groups),ariaControls.link(button.element),skipFocus||Keying.focusIn(toolbar)}))},onClose:()=>{Toggling.off(button),shouldSkipFocus.get().getOr(!1)||Focusing.focus(button),ariaControls.unlink(button.element)},isPartOf:(container,data,queryElem)=>isPartOf$1(data,queryElem)||isPartOf$1(button,queryElem),getAttachPoint:()=>detail.lazySink(button).getOrDie()}),Receiving.config({channels:{...receivingChannel$1({isExtraPart:never,...detail.fireDismissalEventInstead.map((fe=>({fireEventInstead:{event:fe.event}}))).getOr({})}),...receivingChannel({doReposition:()=>{Sandboxing.getState(Coupling.getCoupled(button,"toolbarSandbox")).each((toolbar=>{position(button,toolbar,detail,spec.layouts)}))}})}})])}})(button,spec,detail)}})])}),apis:{setGroups:(button,groups)=>{Sandboxing.getState(Coupling.getCoupled(button,"toolbarSandbox")).each((toolbar=>{setGroups(button,toolbar,detail,spec.layouts,groups)}))},reposition:button=>{Sandboxing.getState(Coupling.getCoupled(button,"toolbarSandbox")).each((toolbar=>{position(button,toolbar,detail,spec.layouts)}))},toggle:button=>{toggle(button,externals)},toggleWithoutFocusing:button=>{((button,externals)=>{shouldSkipFocus.set(!0),toggle(button,externals),shouldSkipFocus.clear()})(button,externals)},getToolbar:button=>Sandboxing.getState(Coupling.getCoupled(button,"toolbarSandbox")),isOpen:button=>Sandboxing.isOpen(Coupling.getCoupled(button,"toolbarSandbox"))}}),configFields:schema$a(),partFields:parts$6(),apis:{setGroups:(apis,button,groups)=>{apis.setGroups(button,groups)},reposition:(apis,button)=>{apis.reposition(button)},toggle:(apis,button)=>{apis.toggle(button)},toggleWithoutFocusing:(apis,button)=>{apis.toggleWithoutFocusing(button)},getToolbar:(apis,button)=>apis.getToolbar(button),isOpen:(apis,button)=>apis.isOpen(button)}}),schema$9=constant$1([required$1("items"),markers$1(["itemSelector"]),field("tgroupBehaviours",[Keying])]),parts$5=constant$1([group({name:"items",unit:"item"})]),ToolbarGroup=composite({name:"ToolbarGroup",configFields:schema$9(),partFields:parts$5(),factory:(detail,components,_spec,_externals)=>({uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.tgroupBehaviours,[Keying.config({mode:"flow",selector:detail.markers.itemSelector})]),domModification:{attributes:{role:"toolbar"}}})}),buildGroups=comps=>map$2(comps,(g=>premade(g))),refresh$1=(toolbar,memFloatingToolbarButton,detail)=>{refresh$2(toolbar,detail,(overflowGroups=>{detail.overflowGroups.set(overflowGroups),memFloatingToolbarButton.getOpt(toolbar).each((floatingToolbarButton=>{FloatingToolbarButton.setGroups(floatingToolbarButton,buildGroups(overflowGroups))}))}))},SplitFloatingToolbar=composite({name:"SplitFloatingToolbar",configFields:schema$b(),partFields:parts$7(),factory:(detail,components,spec,externals)=>{const memFloatingToolbarButton=record(FloatingToolbarButton.sketch({fetch:()=>Future_nu((resolve=>{resolve(buildGroups(detail.overflowGroups.get()))})),layouts:{onLtr:()=>[southwest$2,southeast$2],onRtl:()=>[southeast$2,southwest$2],onBottomLtr:()=>[northwest$2,northeast$2],onBottomRtl:()=>[northeast$2,northwest$2]},getBounds:spec.getOverflowBounds,lazySink:detail.lazySink,fireDismissalEventInstead:{},markers:{toggledClass:detail.markers.overflowToggledClass},parts:{button:externals["overflow-button"](),toolbar:externals.overflow()},onToggled:(comp,state)=>detail[state?"onOpened":"onClosed"](comp)}));return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.splitToolbarBehaviours,[Coupling.config({others:{overflowGroup:()=>ToolbarGroup.sketch({...externals["overflow-group"](),items:[memFloatingToolbarButton.asSpec()]})}})]),apis:{setGroups:(toolbar,groups)=>{detail.builtGroups.set(map$2(groups,toolbar.getSystem().build)),refresh$1(toolbar,memFloatingToolbarButton,detail)},refresh:toolbar=>refresh$1(toolbar,memFloatingToolbarButton,detail),toggle:toolbar=>{memFloatingToolbarButton.getOpt(toolbar).each((floatingToolbarButton=>{FloatingToolbarButton.toggle(floatingToolbarButton)}))},toggleWithoutFocusing:toolbar=>{memFloatingToolbarButton.getOpt(toolbar).each(FloatingToolbarButton.toggleWithoutFocusing)},isOpen:toolbar=>memFloatingToolbarButton.getOpt(toolbar).map(FloatingToolbarButton.isOpen).getOr(!1),reposition:toolbar=>{memFloatingToolbarButton.getOpt(toolbar).each((floatingToolbarButton=>{FloatingToolbarButton.reposition(floatingToolbarButton)}))},getOverflow:toolbar=>memFloatingToolbarButton.getOpt(toolbar).bind(FloatingToolbarButton.getToolbar)},domModification:{attributes:{role:"group"}}}},apis:{setGroups:(apis,toolbar,groups)=>{apis.setGroups(toolbar,groups)},refresh:(apis,toolbar)=>{apis.refresh(toolbar)},reposition:(apis,toolbar)=>{apis.reposition(toolbar)},toggle:(apis,toolbar)=>{apis.toggle(toolbar)},toggleWithoutFocusing:(apis,toolbar)=>{apis.toggle(toolbar)},isOpen:(apis,toolbar)=>apis.isOpen(toolbar),getOverflow:(apis,toolbar)=>apis.getOverflow(toolbar)}}),schema$8=constant$1([markers$1(["closedClass","openClass","shrinkingClass","growingClass","overflowToggledClass"]),onHandler("onOpened"),onHandler("onClosed")].concat(schema$c())),parts$4=constant$1([required({factory:Toolbar,schema:schema$e(),name:"primary"}),required({factory:Toolbar,schema:schema$e(),name:"overflow",overrides:detail=>({toolbarBehaviours:derive$1([Sliding.config({dimension:{property:"height"},closedClass:detail.markers.closedClass,openClass:detail.markers.openClass,shrinkingClass:detail.markers.shrinkingClass,growingClass:detail.markers.growingClass,onShrunk:comp=>{getPart(comp,detail,"overflow-button").each((button=>{Toggling.off(button),Focusing.focus(button)})),detail.onClosed(comp)},onGrown:comp=>{Keying.focusIn(comp),detail.onOpened(comp)},onStartGrow:comp=>{getPart(comp,detail,"overflow-button").each(Toggling.on)}}),Keying.config({mode:"acyclic",onEscape:comp=>(getPart(comp,detail,"overflow-button").each(Focusing.focus),Optional.some(!0))})])})}),external({name:"overflow-button",overrides:detail=>({buttonBehaviours:derive$1([Toggling.config({toggleClass:detail.markers.overflowToggledClass,aria:{mode:"pressed"},toggleOnExecute:!1})])})}),external({name:"overflow-group"})]),toggleToolbar=(toolbar,detail)=>{getPart(toolbar,detail,"overflow-button").bind((()=>getPart(toolbar,detail,"overflow"))).each((overf=>{refresh(toolbar,detail),Sliding.toggleGrow(overf)}))},refresh=(toolbar,detail)=>{getPart(toolbar,detail,"overflow").each((overflow=>{refresh$2(toolbar,detail,(groups=>{const builtGroups=map$2(groups,(g=>premade(g)));Toolbar.setGroups(overflow,builtGroups)})),getPart(toolbar,detail,"overflow-button").each((button=>{Sliding.hasGrown(overflow)&&Toggling.on(button)})),Sliding.refresh(overflow)}))},SplitSlidingToolbar=composite({name:"SplitSlidingToolbar",configFields:schema$8(),partFields:parts$4(),factory:(detail,components,spec,externals)=>({uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.splitToolbarBehaviours,[Coupling.config({others:{overflowGroup:toolbar=>ToolbarGroup.sketch({...externals["overflow-group"](),items:[Button.sketch({...externals["overflow-button"](),action:_button=>{emit(toolbar,"alloy.toolbar.toggle")}})]})}}),config("toolbar-toggle-events",[run$1("alloy.toolbar.toggle",(toolbar=>{toggleToolbar(toolbar,detail)}))])]),apis:{setGroups:(toolbar,groups)=>{((toolbar,groups)=>{const built=map$2(groups,toolbar.getSystem().build);detail.builtGroups.set(built)})(toolbar,groups),refresh(toolbar,detail)},refresh:toolbar=>refresh(toolbar,detail),toggle:toolbar=>toggleToolbar(toolbar,detail),isOpen:toolbar=>((toolbar,detail)=>getPart(toolbar,detail,"overflow").map(Sliding.hasGrown).getOr(!1))(toolbar,detail)},domModification:{attributes:{role:"group"}}}),apis:{setGroups:(apis,toolbar,groups)=>{apis.setGroups(toolbar,groups)},refresh:(apis,toolbar)=>{apis.refresh(toolbar)},toggle:(apis,toolbar)=>{apis.toggle(toolbar)},isOpen:(apis,toolbar)=>apis.isOpen(toolbar)}}),renderToolbarGroupCommon=toolbarGroup=>{const attributes=toolbarGroup.title.fold((()=>({})),(title=>({attributes:{title:title}})));return{dom:{tag:"div",classes:["tox-toolbar__group"],...attributes},components:[ToolbarGroup.parts.items({})],items:toolbarGroup.items,markers:{itemSelector:"*:not(.tox-split-button) > .tox-tbtn:not([disabled]), .tox-split-button:not([disabled]), .tox-toolbar-nav-js:not([disabled]), .tox-number-input:not([disabled])"},tgroupBehaviours:derive$1([Tabstopping.config({}),Focusing.config({})])}},renderToolbarGroup=toolbarGroup=>ToolbarGroup.sketch(renderToolbarGroupCommon(toolbarGroup)),getToolbarBehaviours=(toolbarSpec,modeName)=>{const onAttached=runOnAttached((component=>{const groups=map$2(toolbarSpec.initGroups,renderToolbarGroup);Toolbar.setGroups(component,groups)}));return derive$1([DisablingConfigs_toolbarButton(toolbarSpec.providers.isDisabled),receivingConfig(),Keying.config({mode:modeName,onEscape:toolbarSpec.onEscape,selector:".tox-toolbar__group"}),config("toolbar-events",[onAttached])])},renderMoreToolbarCommon=toolbarSpec=>{const modeName=toolbarSpec.cyclicKeying?"cyclic":"acyclic";return{uid:toolbarSpec.uid,dom:{tag:"div",classes:["tox-toolbar-overlord"]},parts:{"overflow-group":renderToolbarGroupCommon({title:Optional.none(),items:[]}),"overflow-button":renderIconButtonSpec({name:"more",icon:Optional.some("more-drawer"),enabled:!0,tooltip:Optional.some("Reveal or hide additional toolbar items"),primary:!1,buttonType:Optional.none(),borderless:!1},Optional.none(),toolbarSpec.providers)},splitToolbarBehaviours:getToolbarBehaviours(toolbarSpec,modeName)}},renderFloatingMoreToolbar=toolbarSpec=>{const baseSpec=renderMoreToolbarCommon(toolbarSpec),primary=SplitFloatingToolbar.parts.primary({dom:{tag:"div",classes:["tox-toolbar__primary"]}});return SplitFloatingToolbar.sketch({...baseSpec,lazySink:toolbarSpec.getSink,getOverflowBounds:()=>{const headerElem=toolbarSpec.moreDrawerData.lazyHeader().element,headerBounds=absolute$2(headerElem),docElem=documentElement(headerElem),docBounds=absolute$2(docElem),height=Math.max(docElem.dom.scrollHeight,docBounds.height);return bounds(headerBounds.x+4,docBounds.y,headerBounds.width-8,height)},parts:{...baseSpec.parts,overflow:{dom:{tag:"div",classes:["tox-toolbar__overflow"],attributes:toolbarSpec.attributes}}},components:[primary],markers:{overflowToggledClass:"tox-tbtn--enabled"},onOpened:comp=>toolbarSpec.onToggled(comp,!0),onClosed:comp=>toolbarSpec.onToggled(comp,!1)})},renderSlidingMoreToolbar=toolbarSpec=>{const primary=SplitSlidingToolbar.parts.primary({dom:{tag:"div",classes:["tox-toolbar__primary"]}}),overflow=SplitSlidingToolbar.parts.overflow({dom:{tag:"div",classes:["tox-toolbar__overflow"]}}),baseSpec=renderMoreToolbarCommon(toolbarSpec);return SplitSlidingToolbar.sketch({...baseSpec,components:[primary,overflow],markers:{openClass:"tox-toolbar__overflow--open",closedClass:"tox-toolbar__overflow--closed",growingClass:"tox-toolbar__overflow--growing",shrinkingClass:"tox-toolbar__overflow--shrinking",overflowToggledClass:"tox-tbtn--enabled"},onOpened:comp=>{comp.getSystem().broadcastOn([toolbarHeightChange()],{type:"opened"}),toolbarSpec.onToggled(comp,!0)},onClosed:comp=>{comp.getSystem().broadcastOn([toolbarHeightChange()],{type:"closed"}),toolbarSpec.onToggled(comp,!1)}})},renderToolbar=toolbarSpec=>{const modeName=toolbarSpec.cyclicKeying?"cyclic":"acyclic";return Toolbar.sketch({uid:toolbarSpec.uid,dom:{tag:"div",classes:["tox-toolbar"].concat(toolbarSpec.type===ToolbarMode$1.scrolling?["tox-toolbar--scrolling"]:[])},components:[Toolbar.parts.groups({})],toolbarBehaviours:getToolbarBehaviours(toolbarSpec,modeName)})},baseButtonFields=[optionalText,optionalIcon,optionString("tooltip"),defaultedStringEnum("buttonType","secondary",["primary","secondary"]),defaultedBoolean("borderless",!1),requiredFunction("onAction")],schemaWithoutGroupButton={button:[...baseButtonFields,text,requiredStringEnum("type",["button"])],togglebutton:[...baseButtonFields,defaultedBoolean("active",!1),requiredStringEnum("type",["togglebutton"])]},groupFields=[requiredStringEnum("type",["group"]),defaultedArrayOf("buttons",[],choose$1("type",schemaWithoutGroupButton))],viewButtonSchema=choose$1("type",{...schemaWithoutGroupButton,group:groupFields}),viewSchema=objOf([defaultedArrayOf("buttons",[],viewButtonSchema),requiredFunction("onShow"),requiredFunction("onHide")]),renderViewButton=(spec,providers)=>((spec,providers)=>{var _a,_b;const isToggleButton="togglebutton"===spec.type,optMemIcon=spec.icon.map((memIcon=>renderReplaceableIconFromPack(memIcon,providers.icons))).map(record),action=comp=>{const setIcon=newIcon=>{optMemIcon.map((memIcon=>memIcon.getOpt(comp).each((displayIcon=>{Replacing.set(displayIcon,[renderReplaceableIconFromPack(newIcon,providers.icons)])}))))},setActive=state=>{const elm=comp.element;state?(add$2(elm,"tox-button--enabled"),set$9(elm,"aria-pressed",!0)):(remove$2(elm,"tox-button--enabled"),remove$7(elm,"aria-pressed"))},isActive=()=>has(comp.element,"tox-button--enabled");return isToggleButton?spec.onAction({setIcon:setIcon,setActive:setActive,isActive:isActive}):"button"===spec.type?spec.onAction({setIcon:setIcon}):void 0},buttonSpec={...spec,name:isToggleButton?spec.text.getOr(spec.icon.getOr("")):null!==(_a=spec.text)&&void 0!==_a?_a:spec.icon.getOr(""),primary:"primary"===spec.buttonType,buttonType:Optional.from(spec.buttonType),tooltip:spec.tooltip,icon:spec.icon,enabled:!0,borderless:spec.borderless},buttonTypeClasses=calculateClassesFromButtonType(null!==(_b=spec.buttonType)&&void 0!==_b?_b:"secondary"),optTranslatedText=isToggleButton?spec.text.map(providers.translate):Optional.some(providers.translate(spec.text)),optTranslatedTextComponed=optTranslatedText.map(text$2),tooltipAttributes=buttonSpec.tooltip.or(optTranslatedText).map((tooltip=>({"aria-label":providers.translate(tooltip),title:providers.translate(tooltip)}))).getOr({}),optIconSpec=optMemIcon.map((memIcon=>memIcon.asSpec())),components=componentRenderPipeline([optIconSpec,optTranslatedTextComponed]),hasIconAndText=spec.icon.isSome()&&optTranslatedTextComponed.isSome(),dom={tag:"button",classes:buttonTypeClasses.concat(...spec.icon.isSome()&&!hasIconAndText?["tox-button--icon"]:[]).concat(...hasIconAndText?["tox-button--icon-and-text"]:[]).concat(...spec.borderless?["tox-button--naked"]:[]).concat(..."togglebutton"===spec.type&&spec.active?["tox-button--enabled"]:[]),attributes:tooltipAttributes},iconButtonSpec=renderCommonSpec(buttonSpec,Optional.some(action),[],dom,components,providers);return Button.sketch(iconButtonSpec)})(spec,providers),deviceDetection=detect$2().deviceType,isPhone=deviceDetection.isPhone(),isTablet=deviceDetection.isTablet();var View=composite({name:"silver.View",configFields:[required$1("viewConfig")],partFields:[optional({factory:{sketch:spec=>{let hasGroups=!1;const endButtons=map$2(spec.buttons,(btnspec=>"group"===btnspec.type?(hasGroups=!0,((spec,providers)=>({dom:{tag:"div",classes:["tox-view__toolbar__group"]},components:map$2(spec.buttons,(button=>renderViewButton(button,providers)))}))(btnspec,spec.providers)):renderViewButton(btnspec,spec.providers)));return{uid:spec.uid,dom:{tag:"div",classes:[hasGroups?"tox-view__toolbar":"tox-view__header",...isPhone||isTablet?["tox-view--mobile","tox-view--scrolling"]:[]]},behaviours:derive$1([Focusing.config({}),Keying.config({mode:"flow",selector:"button, .tox-button",focusInside:FocusInsideModes.OnEnterOrSpaceMode})]),components:hasGroups?endButtons:[Container.sketch({dom:{tag:"div",classes:["tox-view__header-start"]},components:[]}),Container.sketch({dom:{tag:"div",classes:["tox-view__header-end"]},components:endButtons})]}}},schema:[required$1("buttons"),required$1("providers")],name:"header"}),optional({factory:{sketch:spec=>({uid:spec.uid,dom:{tag:"div",classes:["tox-view__pane"]}})},schema:[],name:"pane"})],factory:(detail,components,_spec,_externals)=>{const apis={getPane:comp=>parts$a.getPart(comp,detail,"pane"),getOnShow:_comp=>detail.viewConfig.onShow,getOnHide:_comp=>detail.viewConfig.onHide};return{uid:detail.uid,dom:detail.dom,components:components,apis:apis}},apis:{getPane:(apis,comp)=>apis.getPane(comp),getOnShow:(apis,comp)=>apis.getOnShow(comp),getOnHide:(apis,comp)=>apis.getOnHide(comp)}});const makeViews=(parts,viewConfigs,providers)=>mapToArray(viewConfigs,((config,name)=>{const internalViewConfig=getOrDie(asRaw("view",viewSchema,config));return parts.slot(name,View.sketch({dom:{tag:"div",classes:["tox-view"]},viewConfig:internalViewConfig,components:[...internalViewConfig.buttons.length>0?[View.parts.header({buttons:internalViewConfig.buttons,providers:providers})]:[],View.parts.pane({})]}))})),makeSlotContainer=(viewConfigs,providers)=>SlotContainer.sketch((parts=>({dom:{tag:"div",classes:["tox-view-wrap__slot-container"]},components:makeViews(parts,viewConfigs,providers),slotBehaviours:SimpleBehaviours_unnamedEvents([runOnAttached((slotContainer=>SlotContainer.hideAllSlots(slotContainer)))])}))),getCurrentName=slotContainer=>find$5(SlotContainer.getSlotNames(slotContainer),(name=>SlotContainer.isShowing(slotContainer,name))),runOnPaneWithInstanceApi=(slotContainer,name,get)=>{SlotContainer.getSlot(slotContainer,name).each((view=>{View.getPane(view).each((pane=>{var slot;get(view)((slot=pane.element.dom,{getContainer:constant$1(slot)}))}))}))};var ViewWrapper=single({factory:(detail,spec)=>{const apis={setViews:(comp,viewConfigs)=>{Replacing.set(comp,[makeSlotContainer(viewConfigs,spec.backstage.shared.providers)])},whichView:comp=>Composing.getCurrent(comp).bind(getCurrentName),toggleView:(comp,showMainView,hideMainView,name)=>Composing.getCurrent(comp).exists((slotContainer=>{const optCurrentSlotName=getCurrentName(slotContainer),isTogglingCurrentView=optCurrentSlotName.exists((current=>name===current)),exists=SlotContainer.getSlot(slotContainer,name).isSome();return exists&&(SlotContainer.hideAllSlots(slotContainer),isTogglingCurrentView?((comp=>{const element=comp.element;set$8(element,"display","none"),set$9(element,"aria-hidden","true")})(comp),showMainView()):(hideMainView(),(comp=>{const element=comp.element;remove$6(element,"display"),remove$7(element,"aria-hidden")})(comp),SlotContainer.showSlot(slotContainer,name),((slotContainer,name)=>{runOnPaneWithInstanceApi(slotContainer,name,View.getOnShow)})(slotContainer,name)),optCurrentSlotName.each((prevName=>((slotContainer,name)=>runOnPaneWithInstanceApi(slotContainer,name,View.getOnHide))(slotContainer,prevName)))),exists}))};return{uid:detail.uid,dom:{tag:"div",classes:["tox-view-wrap"],attributes:{"aria-hidden":"true"},styles:{display:"none"}},components:[],behaviours:derive$1([Replacing.config({}),Composing.config({find:comp=>{const children=Replacing.contents(comp);return head(children)}})]),apis:apis}},name:"silver.ViewWrapper",configFields:[required$1("backstage")],apis:{setViews:(apis,comp,views)=>apis.setViews(comp,views),toggleView:(apis,comp,outerContainer,editorCont,name)=>apis.toggleView(comp,outerContainer,editorCont,name),whichView:(apis,comp)=>apis.whichView(comp)}});const partMenubar=partType.optional({factory:SilverMenubar,name:"menubar",schema:[required$1("backstage")]}),partMultipleToolbar=partType.optional({factory:{sketch:spec=>CustomList.sketch({uid:spec.uid,dom:spec.dom,listBehaviours:derive$1([Keying.config({mode:"acyclic",selector:".tox-toolbar"})]),makeItem:()=>renderToolbar({type:spec.type,uid:generate$6("multiple-toolbar-item"),cyclicKeying:!1,initGroups:[],providers:spec.providers,onEscape:()=>(spec.onEscape(),Optional.some(!0))}),setupItem:(_mToolbar,tc,data,_index)=>{Toolbar.setGroups(tc,data)},shell:!0})},name:"multiple-toolbar",schema:[required$1("dom"),required$1("onEscape")]}),partToolbar=partType.optional({factory:{sketch:spec=>{const renderer=(spec=>spec.type===ToolbarMode$1.sliding?renderSlidingMoreToolbar:spec.type===ToolbarMode$1.floating?renderFloatingMoreToolbar:renderToolbar)(spec);return renderer({type:spec.type,uid:spec.uid,onEscape:()=>(spec.onEscape(),Optional.some(!0)),onToggled:(_comp,state)=>spec.onToolbarToggled(state),cyclicKeying:!1,initGroups:[],getSink:spec.getSink,providers:spec.providers,moreDrawerData:{lazyToolbar:spec.lazyToolbar,lazyMoreButton:spec.lazyMoreButton,lazyHeader:spec.lazyHeader},attributes:spec.attributes})}},name:"toolbar",schema:[required$1("dom"),required$1("onEscape"),required$1("getSink")]}),partHeader=partType.optional({factory:{sketch:spec=>{const editor=spec.editor,getBehaviours$2=spec.sticky?getBehaviours:getBehaviours$1;return{uid:spec.uid,dom:spec.dom,components:spec.components,behaviours:derive$1(getBehaviours$2(editor,spec.sharedBackstage))}}},name:"header",schema:[required$1("dom")]}),partSocket=partType.optional({name:"socket",schema:[required$1("dom")]}),partSidebar=partType.optional({factory:{sketch:spec=>({uid:spec.uid,dom:{tag:"div",classes:["tox-sidebar"],attributes:{role:"presentation"}},components:[{dom:{tag:"div",classes:["tox-sidebar__slider"]},components:[],behaviours:derive$1([Tabstopping.config({}),Focusing.config({}),Sliding.config({dimension:{property:"width"},closedClass:"tox-sidebar--sliding-closed",openClass:"tox-sidebar--sliding-open",shrinkingClass:"tox-sidebar--sliding-shrinking",growingClass:"tox-sidebar--sliding-growing",onShrunk:slider=>{Composing.getCurrent(slider).each(SlotContainer.hideAllSlots),emit(slider,autoSize)},onGrown:slider=>{emit(slider,autoSize)},onStartGrow:slider=>{emitWith(slider,fixSize,{width:getRaw(slider.element,"width").getOr("")})},onStartShrink:slider=>{emitWith(slider,fixSize,{width:get$c(slider.element)+"px"})}}),Replacing.config({}),Composing.config({find:comp=>{const children=Replacing.contents(comp);return head(children)}})])}],behaviours:derive$1([ComposingConfigs_childAt(0),config("sidebar-sliding-events",[run$1(fixSize,((comp,se)=>{set$8(comp.element,"width",se.event.width)})),run$1(autoSize,((comp,_se)=>{remove$6(comp.element,"width")}))])])})},name:"sidebar",schema:[required$1("dom")]}),partThrobber=partType.optional({factory:{sketch:spec=>({uid:spec.uid,dom:{tag:"div",attributes:{"aria-hidden":"true"},classes:["tox-throbber"],styles:{display:"none"}},behaviours:derive$1([Replacing.config({}),Blocking.config({focus:!1}),Composing.config({find:comp=>head(comp.components())})]),components:[]})},name:"throbber",schema:[required$1("dom")]}),partViewWrapper=partType.optional({factory:ViewWrapper,name:"viewWrapper",schema:[required$1("backstage")]}),partEditorContainer=partType.optional({factory:{sketch:spec=>({uid:spec.uid,dom:{tag:"div",classes:["tox-editor-container"]},components:spec.components})},name:"editorContainer",schema:[]});var OuterContainer=composite({name:"OuterContainer",factory:(detail,components,_spec)=>{let toolbarDrawerOpenState=!1;const apis={getSocket:comp=>parts$a.getPart(comp,detail,"socket"),setSidebar:(comp,panelConfigs,showSidebar)=>{parts$a.getPart(comp,detail,"sidebar").each((sidebar=>((sidebar,panelConfigs,showSidebar)=>{Composing.getCurrent(sidebar).each((slider=>{Replacing.set(slider,[makeSidebar(panelConfigs)]);const configKey=null==showSidebar?void 0:showSidebar.toLowerCase();isString(configKey)&&has$2(panelConfigs,configKey)&&Composing.getCurrent(slider).each((slotContainer=>{SlotContainer.showSlot(slotContainer,configKey),Sliding.immediateGrow(slider),remove$6(slider.element,"width"),updateSidebarRoleOnToggle(sidebar.element,"region")}))}))})(sidebar,panelConfigs,showSidebar)))},toggleSidebar:(comp,name)=>{parts$a.getPart(comp,detail,"sidebar").each((sidebar=>((sidebar,name)=>{Composing.getCurrent(sidebar).each((slider=>{Composing.getCurrent(slider).each((slotContainer=>{Sliding.hasGrown(slider)?SlotContainer.isShowing(slotContainer,name)?(Sliding.shrink(slider),updateSidebarRoleOnToggle(sidebar.element,"presentation")):(SlotContainer.hideAllSlots(slotContainer),SlotContainer.showSlot(slotContainer,name),updateSidebarRoleOnToggle(sidebar.element,"region")):(SlotContainer.hideAllSlots(slotContainer),SlotContainer.showSlot(slotContainer,name),Sliding.grow(slider),updateSidebarRoleOnToggle(sidebar.element,"region"))}))}))})(sidebar,name)))},whichSidebar:comp=>parts$a.getPart(comp,detail,"sidebar").bind(whichSidebar).getOrNull(),getHeader:comp=>parts$a.getPart(comp,detail,"header"),getToolbar:comp=>parts$a.getPart(comp,detail,"toolbar"),setToolbar:(comp,groups)=>{parts$a.getPart(comp,detail,"toolbar").each((toolbar=>{const renderedGroups=map$2(groups,renderToolbarGroup);toolbar.getApis().setGroups(toolbar,renderedGroups)}))},setToolbars:(comp,toolbars)=>{parts$a.getPart(comp,detail,"multiple-toolbar").each((mToolbar=>{const renderedToolbars=map$2(toolbars,(g=>map$2(g,renderToolbarGroup)));CustomList.setItems(mToolbar,renderedToolbars)}))},refreshToolbar:comp=>{parts$a.getPart(comp,detail,"toolbar").each((toolbar=>toolbar.getApis().refresh(toolbar)))},toggleToolbarDrawer:comp=>{parts$a.getPart(comp,detail,"toolbar").each((toolbar=>{mapFrom(toolbar.getApis().toggle,(toggle=>toggle(toolbar)))}))},toggleToolbarDrawerWithoutFocusing:comp=>{parts$a.getPart(comp,detail,"toolbar").each((toolbar=>{mapFrom(toolbar.getApis().toggleWithoutFocusing,(toggleWithoutFocusing=>toggleWithoutFocusing(toolbar)))}))},isToolbarDrawerToggled:comp=>parts$a.getPart(comp,detail,"toolbar").bind((toolbar=>Optional.from(toolbar.getApis().isOpen).map((isOpen=>isOpen(toolbar))))).getOr(!1),getThrobber:comp=>parts$a.getPart(comp,detail,"throbber"),focusToolbar:comp=>{parts$a.getPart(comp,detail,"toolbar").orThunk((()=>parts$a.getPart(comp,detail,"multiple-toolbar"))).each((toolbar=>{Keying.focusIn(toolbar)}))},setMenubar:(comp,menus)=>{parts$a.getPart(comp,detail,"menubar").each((menubar=>{SilverMenubar.setMenus(menubar,menus)}))},focusMenubar:comp=>{parts$a.getPart(comp,detail,"menubar").each((menubar=>{SilverMenubar.focus(menubar)}))},setViews:(comp,viewConfigs)=>{parts$a.getPart(comp,detail,"viewWrapper").each((wrapper=>{ViewWrapper.setViews(wrapper,viewConfigs)}))},toggleView:(comp,name)=>parts$a.getPart(comp,detail,"viewWrapper").exists((wrapper=>ViewWrapper.toggleView(wrapper,(()=>apis.showMainView(comp)),(()=>apis.hideMainView(comp)),name))),whichView:comp=>parts$a.getPart(comp,detail,"viewWrapper").bind(ViewWrapper.whichView).getOrNull(),hideMainView:comp=>{toolbarDrawerOpenState=apis.isToolbarDrawerToggled(comp),toolbarDrawerOpenState&&apis.toggleToolbarDrawer(comp),parts$a.getPart(comp,detail,"editorContainer").each((editorContainer=>{const element=editorContainer.element;set$8(element,"display","none"),set$9(element,"aria-hidden","true")}))},showMainView:comp=>{toolbarDrawerOpenState&&apis.toggleToolbarDrawer(comp),parts$a.getPart(comp,detail,"editorContainer").each((editorContainer=>{const element=editorContainer.element;remove$6(element,"display"),remove$7(element,"aria-hidden")}))}};return{uid:detail.uid,dom:detail.dom,components:components,apis:apis,behaviours:detail.behaviours}},configFields:[required$1("dom"),required$1("behaviours")],partFields:[partHeader,partMenubar,partToolbar,partMultipleToolbar,partSocket,partSidebar,partThrobber,partViewWrapper,partEditorContainer],apis:{getSocket:(apis,comp)=>apis.getSocket(comp),setSidebar:(apis,comp,panelConfigs,showSidebar)=>{apis.setSidebar(comp,panelConfigs,showSidebar)},toggleSidebar:(apis,comp,name)=>{apis.toggleSidebar(comp,name)},whichSidebar:(apis,comp)=>apis.whichSidebar(comp),getHeader:(apis,comp)=>apis.getHeader(comp),getToolbar:(apis,comp)=>apis.getToolbar(comp),setToolbar:(apis,comp,groups)=>{apis.setToolbar(comp,groups)},setToolbars:(apis,comp,toolbars)=>{apis.setToolbars(comp,toolbars)},refreshToolbar:(apis,comp)=>apis.refreshToolbar(comp),toggleToolbarDrawer:(apis,comp)=>{apis.toggleToolbarDrawer(comp)},toggleToolbarDrawerWithoutFocusing:(apis,comp)=>{apis.toggleToolbarDrawerWithoutFocusing(comp)},isToolbarDrawerToggled:(apis,comp)=>apis.isToolbarDrawerToggled(comp),getThrobber:(apis,comp)=>apis.getThrobber(comp),setMenubar:(apis,comp,menus)=>{apis.setMenubar(comp,menus)},focusMenubar:(apis,comp)=>{apis.focusMenubar(comp)},focusToolbar:(apis,comp)=>{apis.focusToolbar(comp)},setViews:(apis,comp,views)=>{apis.setViews(comp,views)},toggleView:(apis,comp,name)=>apis.toggleView(comp,name),whichView:(apis,comp)=>apis.whichView(comp)}});const defaultMenus={file:{title:"File",items:"newdocument restoredraft | preview | export print | deleteallconversations"},edit:{title:"Edit",items:"undo redo | cut copy paste pastetext | selectall | searchreplace"},view:{title:"View",items:"code | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments"},insert:{title:"Insert",items:"image link media addcomment pageembed template inserttemplate codesample inserttable accordion | charmap emoticons hr | pagebreak nonbreaking anchor tableofcontents footnotes | mergetags | insertdatetime"},format:{title:"Format",items:"bold italic underline strikethrough superscript subscript codeformat | styles blocks fontfamily fontsize align lineheight | forecolor backcolor | language | removeformat"},tools:{title:"Tools",items:"aidialog aishortcuts | spellchecker spellcheckerlanguage | autocorrect capitalization | a11ycheck code typography wordcount addtemplate"},table:{title:"Table",items:"inserttable | cell row column | advtablesort | tableprops deletetable"},help:{title:"Help",items:"help"}},parseItemsString=items=>items.split(" "),identifyMenus=(editor,registry)=>{const rawMenuData={...defaultMenus,...registry.menus},userDefinedMenus=keys(registry.menus).length>0,menubar=void 0===registry.menubar||!0===registry.menubar?parseItemsString("file edit view insert format tools table help"):parseItemsString(!1===registry.menubar?"":registry.menubar),validMenus=filter$2(menubar,(menuName=>{const isDefaultMenu=has$2(defaultMenus,menuName);return userDefinedMenus?isDefaultMenu||get$g(registry.menus,menuName).exists((menu=>has$2(menu,"items"))):isDefaultMenu})),menus=map$2(validMenus,(menuName=>{const menuData=rawMenuData[menuName];return((menu,registry,editor)=>{const removedMenuItems=getRemovedMenuItems(editor).split(/[ ,]/);return{text:menu.title,getItems:()=>bind$3(menu.items,(i=>{const itemName=i.toLowerCase();return 0===itemName.trim().length||exists(removedMenuItems,(removedMenuItem=>removedMenuItem===itemName))?[]:"separator"===itemName||"|"===itemName?[{type:"separator"}]:registry.menuItems[itemName]?[registry.menuItems[itemName]]:[]}))}})({title:menuData.title,items:parseItemsString(menuData.items)},registry,editor)}));return filter$2(menus,(menu=>menu.getItems().length>0&&exists(menu.getItems(),(item=>isString(item)||"separator"!==item.type))))},loadStylesheet=(editor,stylesheetUrl,styleSheetLoader)=>(editor.on("remove",(()=>styleSheetLoader.unload(stylesheetUrl))),styleSheetLoader.load(stylesheetUrl)),loadRawCss=(editor,key,css,styleSheetLoader)=>(editor.on("remove",(()=>styleSheetLoader.unloadRawCss(key))),styleSheetLoader.loadRawCss(key,css)),loadUiSkins=async(editor,skinUrl)=>{const skinUiCss="ui/"+getSkinUrlOption(editor).getOr("default")+"/skin.css",css=tinymce.Resource.get(skinUiCss);if(isString(css))return Promise.resolve(loadRawCss(editor,skinUiCss,css,editor.ui.styleSheetLoader));return loadStylesheet(editor,skinUrl+"/skin.min.css",editor.ui.styleSheetLoader)},loadShadowDomUiSkins=async(editor,skinUrl)=>{var e;if(e=SugarElement.fromDom(editor.getElement()),getShadowRoot(e).isSome()){const shadowDomSkinCss=skinUrl+"/skin.shadowdom.css",css=tinymce.Resource.get(shadowDomSkinCss);if(isString(css))return loadRawCss(editor,shadowDomSkinCss,css,global$7.DOM.styleSheetLoader),Promise.resolve();return loadStylesheet(editor,skinUrl+"/skin.shadowdom.min.css",global$7.DOM.styleSheetLoader)}},loadSkin=(isInline,editor)=>(async(isInline,editor)=>{getSkinUrlOption(editor).fold((()=>{const skinUrl_=getSkinUrl(editor);skinUrl_&&editor.contentCSS.push(skinUrl_+(isInline?"/content.inline":"/content")+".min.css")}),(skinUrl=>{const skinContentCss="ui/"+skinUrl+(isInline?"/content.inline":"/content")+".css",css=tinymce.Resource.get(skinContentCss);if(isString(css))loadRawCss(editor,skinContentCss,css,editor.ui.styleSheetLoader);else{const skinUrl_=getSkinUrl(editor);skinUrl_&&editor.contentCSS.push(skinUrl_+(isInline?"/content.inline":"/content")+".min.css")}}));const skinUrl=getSkinUrl(editor);if(!isSkinDisabled(editor)&&isString(skinUrl))return Promise.all([loadUiSkins(editor,skinUrl),loadShadowDomUiSkins(editor,skinUrl)]).then()})(isInline,editor).then((editor=>{const done=()=>{editor._skinLoaded=!0,(editor=>{editor.dispatch("SkinLoaded")})(editor)};return()=>{editor.initialized?done():editor.on("init",done)}})(editor),((editor,err)=>()=>((editor,error)=>{editor.dispatch("SkinLoadError",error)})(editor,{message:err}))(editor,"Skin could not be loaded")),iframe=curry(loadSkin,!1),inline=curry(loadSkin,!0),makeTooltipText=(editor,labelWithPlaceholder,value)=>editor.translate([labelWithPlaceholder,editor.translate(value)]),generateSelectItems=(_editor,backstage,spec)=>{const generateItem=(rawItem,response,invalid,value)=>{const translatedText=backstage.shared.providers.translate(rawItem.title);if("separator"===rawItem.type)return Optional.some({type:"separator",text:translatedText});if("submenu"===rawItem.type){const items=bind$3(rawItem.getStyleItems(),(si=>validate(si,response,value)));return 0===response&&items.length<=0?Optional.none():Optional.some({type:"nestedmenuitem",text:translatedText,enabled:items.length>0,getSubmenuItems:()=>bind$3(rawItem.getStyleItems(),(si=>validate(si,response,value)))})}return Optional.some({type:"togglemenuitem",text:translatedText,icon:rawItem.icon,active:rawItem.isSelected(value),enabled:!invalid,onAction:spec.onAction(rawItem),...rawItem.getStylePreview().fold((()=>({})),(preview=>({meta:{style:preview}})))})},validate=(item,response,value)=>{const invalid="formatter"===item.type&&spec.isInvalid(item);return 0===response?invalid?[]:generateItem(item,response,!1,value).toArray():generateItem(item,response,invalid,value).toArray()},validateItems=preItems=>{const value=spec.getCurrentValue(),response=spec.shouldHide?0:1;return bind$3(preItems,(item=>validate(item,response,value)))};return{validateItems:validateItems,getFetch:(backstage,getStyleItems)=>(comp,callback)=>{const preItems=getStyleItems(),items=validateItems(preItems);callback(build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,{isHorizontalMenu:!1,search:Optional.none()}))}}},createMenuItems=(editor,backstage,spec)=>{const dataset=spec.dataset,getStyleItems="basic"===dataset.type?()=>map$2(dataset.data,(d=>processBasic(d,spec.isSelectedFor,spec.getPreviewFor))):dataset.getData;return{items:generateSelectItems(0,backstage,spec),getStyleItems:getStyleItems}},createSelectButton=(editor,backstage,spec,tooltipWithPlaceholder,textUpdateEventName)=>{const{items:items,getStyleItems:getStyleItems}=createMenuItems(0,backstage,spec);return renderCommonDropdown({text:spec.icon.isSome()?Optional.none():spec.text,icon:spec.icon,tooltip:Optional.from(spec.tooltip),role:Optional.none(),fetch:items.getFetch(backstage,getStyleItems),onSetup:api=>{const handler=e=>api.setTooltip(makeTooltipText(editor,tooltipWithPlaceholder,e.value));return editor.on(textUpdateEventName,handler),composeUnbinders(onSetupEvent(editor,"NodeChange",(api=>{const comp=api.getComponent();spec.updateText(comp),Disabling.set(api.getComponent(),!editor.selection.isEditable())}))(api),(()=>editor.off(textUpdateEventName,handler)))},getApi:comp=>({getComponent:constant$1(comp),setTooltip:tooltip=>{const translatedTooltip=backstage.shared.providers.translate(tooltip);setAll$1(comp.element,{"aria-label":translatedTooltip,title:translatedTooltip})}}),columns:1,presets:"normal",classes:spec.icon.isSome()?[]:["bespoke"],dropdownBehaviours:[]},"tox-tbtn",backstage.shared)};var Delimiter;!function(Delimiter){Delimiter[Delimiter.SemiColon=0]="SemiColon",Delimiter[Delimiter.Space=1]="Space"}(Delimiter||(Delimiter={}));const buildBasicSettingsDataset=(editor,settingName,delimiter)=>{const data=(rawFormats=>map$2(rawFormats,(item=>{let title=item,format=item;const values=item.split("=");return values.length>1&&(title=values[0],format=values[1]),{title:title,format:format}})))(((rawFormats,delimiter)=>delimiter===Delimiter.SemiColon?rawFormats.replace(/;$/,"").split(";"):rawFormats.split(" "))(editor.options.get(settingName),delimiter));return{type:"basic",data:data}},alignMenuItems=[{title:"Left",icon:"align-left",format:"alignleft",command:"JustifyLeft"},{title:"Center",icon:"align-center",format:"aligncenter",command:"JustifyCenter"},{title:"Right",icon:"align-right",format:"alignright",command:"JustifyRight"},{title:"Justify",icon:"align-justify",format:"alignjustify",command:"JustifyFull"}],getSpec$4=editor=>{const dataset={type:"basic",data:alignMenuItems};return{tooltip:makeTooltipText(editor,"Alignment {0}","left"),text:Optional.none(),icon:Optional.some("align-left"),isSelectedFor:format=>()=>editor.formatter.match(format),getCurrentValue:Optional.none,getPreviewFor:_format=>Optional.none,onAction:rawItem=>()=>find$5(alignMenuItems,(item=>item.format===rawItem.format)).each((item=>editor.execCommand(item.command))),updateText:comp=>{const match=find$5(alignMenuItems,(item=>editor.formatter.match(item.format))),alignment=match.fold(constant$1("left"),(item=>item.title.toLowerCase()));emitWith(comp,updateMenuIcon,{icon:`align-${alignment}`}),((editor,data)=>{editor.dispatch("AlignTextUpdate",data)})(editor,{value:alignment})},dataset:dataset,shouldHide:!1,isInvalid:item=>!editor.formatter.canApply(item.format)}},findNearest=(editor,getStyles)=>{const styles=getStyles(),formats=map$2(styles,(style=>style.format));return Optional.from(editor.formatter.closest(formats)).bind((fmt=>find$5(styles,(data=>data.format===fmt)))).orThunk((()=>someIf(editor.formatter.match("p"),{title:"Paragraph",format:"p"})))},getSpec$3=editor=>{const dataset=buildBasicSettingsDataset(editor,"block_formats",Delimiter.SemiColon);return{tooltip:makeTooltipText(editor,"Block {0}","Paragraph"),text:Optional.some("Paragraph"),icon:Optional.none(),isSelectedFor:format=>()=>editor.formatter.match(format),getCurrentValue:Optional.none,getPreviewFor:format=>()=>{const fmt=editor.formatter.get(format);return fmt?Optional.some({tag:fmt.length>0&&(fmt[0].inline||fmt[0].block)||"div",styles:editor.dom.parseStyle(editor.formatter.getCssText(format))}):Optional.none()},onAction:onActionToggleFormat$1(editor),updateText:comp=>{const text=findNearest(editor,(()=>dataset.data)).fold(constant$1("Paragraph"),(fmt=>fmt.title));emitWith(comp,updateMenuText,{text:text}),((editor,data)=>{editor.dispatch("BlocksTextUpdate",data)})(editor,{value:text})},dataset:dataset,shouldHide:!1,isInvalid:item=>!editor.formatter.canApply(item.format)}},systemStackFonts=["-apple-system","Segoe UI","Roboto","Helvetica Neue","sans-serif"],splitFonts=fontFamily=>{const fonts=fontFamily.split(/\s*,\s*/);return map$2(fonts,(font=>font.replace(/^['"]+|['"]+$/g,"")))},matchesStack=(fonts,stack)=>stack.length>0&&forall(stack,(font=>fonts.indexOf(font.toLowerCase())>-1)),getSpec$2=editor=>{const getMatchingValue=()=>{const getFirstFont=fontFamily=>fontFamily?splitFonts(fontFamily)[0]:"",fontFamily=editor.queryCommandValue("FontName"),items=dataset.data,font=fontFamily?fontFamily.toLowerCase():"",userStack=getDefaultFontStack(editor),matchOpt=find$5(items,(item=>{const format=item.format;return format.toLowerCase()===font||getFirstFont(format).toLowerCase()===getFirstFont(font).toLowerCase()})).orThunk((()=>someIf(((fontFamily,userStack)=>{if(0===fontFamily.indexOf("-apple-system")||userStack.length>0){const fonts=splitFonts(fontFamily.toLowerCase());return matchesStack(fonts,systemStackFonts)||matchesStack(fonts,userStack)}return!1})(font,userStack),{title:"System Font",format:font})));return{matchOpt:matchOpt,font:fontFamily}},dataset=buildBasicSettingsDataset(editor,"font_family_formats",Delimiter.SemiColon);return{tooltip:makeTooltipText(editor,"Font {0}","System Font"),text:Optional.some("System Font"),icon:Optional.none(),isSelectedFor:item=>valueOpt=>valueOpt.exists((value=>value.format===item)),getCurrentValue:()=>{const{matchOpt:matchOpt}=getMatchingValue();return matchOpt},getPreviewFor:item=>()=>Optional.some({tag:"div",styles:-1===item.indexOf("dings")?{"font-family":item}:{}}),onAction:rawItem=>()=>{editor.undoManager.transact((()=>{editor.focus(),editor.execCommand("FontName",!1,rawItem.format)}))},updateText:comp=>{const{matchOpt:matchOpt,font:font}=getMatchingValue(),text=matchOpt.fold(constant$1(font),(item=>item.title));emitWith(comp,updateMenuText,{text:text}),((editor,data)=>{editor.dispatch("FontFamilyTextUpdate",data)})(editor,{value:text})},dataset:dataset,shouldHide:!1,isInvalid:never}},units={unsupportedLength:["em","ex","cap","ch","ic","rem","lh","rlh","vw","vh","vi","vb","vmin","vmax","cm","mm","Q","in","pc","pt","px"],fixed:["px","pt"],relative:["%"],empty:[""]},pattern=(()=>{const opt=input=>`(?:${input})?`,unsignedDecimalLiteral=["Infinity","[0-9]+\\."+opt("[0-9]+")+opt("[eE][+-]?[0-9]+"),"\\.[0-9]+"+opt("[eE][+-]?[0-9]+"),"[0-9]+"+opt("[eE][+-]?[0-9]+")].join("|");return new RegExp(`^(${`[+-]?(?:${unsignedDecimalLiteral})`})(.*)$`)})(),parse=(input,accepted)=>Optional.from(pattern.exec(input)).bind((array=>{const value=Number(array[1]),unitRaw=array[2];return((unit,accepted)=>exists(accepted,(acc=>exists(units[acc],(check=>unit===check)))))(unitRaw,accepted)?Optional.some({value:value,unit:unitRaw}):Optional.none()})),Keys={tab:constant$1(9),escape:constant$1(27),enter:constant$1(13),backspace:constant$1(8),delete:constant$1(46),left:constant$1(37),up:constant$1(38),right:constant$1(39),down:constant$1(40),space:constant$1(32),home:constant$1(36),end:constant$1(35),pageUp:constant$1(33),pageDown:constant$1(34)},createBespokeNumberInput=(editor,backstage,spec)=>{let currentComp=Optional.none();const onSetup=onSetupEvent(editor,"NodeChange SwitchMode",(api=>{const comp=api.getComponent();currentComp=Optional.some(comp),spec.updateInputValue(comp),Disabling.set(comp,!editor.selection.isEditable())})),getApi=comp=>({getComponent:constant$1(comp)}),editorOffCell=Cell(noop),customEvents=generate$6("custom-number-input-events"),changeValue=(f,fromInput,focusBack)=>{const text=currentComp.map((alloyComp=>Representing.getValue(alloyComp))).getOr("");const newValue=spec.getNewValue(text,f),lenghtDelta=text.length-`${newValue}`.length,oldStart=currentComp.map((comp=>comp.element.dom.selectionStart-lenghtDelta)),oldEnd=currentComp.map((comp=>comp.element.dom.selectionEnd-lenghtDelta));spec.onAction(newValue,focusBack),currentComp.each((comp=>{Representing.setValue(comp,newValue),fromInput&&(oldStart.each((oldStart=>comp.element.dom.selectionStart=oldStart)),oldEnd.each((oldEnd=>comp.element.dom.selectionEnd=oldEnd)))}))},decrease=(fromInput,focusBack)=>changeValue(((n,s)=>n-s),fromInput,focusBack),increase=(fromInput,focusBack)=>changeValue(((n,s)=>n+s),fromInput,focusBack),goToParent=comp=>parentElement(comp.element).fold(Optional.none,(parent=>(focus$3(parent),Optional.some(!0)))),focusInput=comp=>hasFocus(comp.element)?(firstChild(comp.element).each((input=>focus$3(input))),Optional.some(!0)):Optional.none(),makeStepperButton=(action,title,tooltip,classes)=>{const editorOffCellStepButton=Cell(noop),translatedTooltip=backstage.shared.providers.translate(tooltip),altExecuting=generate$6("altExecuting"),onSetup=onSetupEvent(editor,"NodeChange SwitchMode",(api=>{Disabling.set(api.getComponent(),!editor.selection.isEditable())})),onClick=comp=>{Disabling.isDisabled(comp)||action(!0)};return Button.sketch({dom:{tag:"button",attributes:{title:translatedTooltip,"aria-label":translatedTooltip},classes:classes.concat(title)},components:[renderIconFromPack$1(title,backstage.shared.providers.icons)],buttonBehaviours:derive$1([Disabling.config({}),config(altExecuting,[onControlAttached({onSetup:onSetup,getApi:getApi},editorOffCellStepButton),onControlDetached({getApi:getApi},editorOffCellStepButton),run$1(keydown(),((comp,se)=>{se.event.raw.keyCode!==Keys.space()&&se.event.raw.keyCode!==Keys.enter()||Disabling.isDisabled(comp)||action(!1)})),run$1(click(),onClick),run$1(touchend(),onClick)])]),eventOrder:{[keydown()]:[altExecuting,"keying"],[click()]:[altExecuting,"alloy.base.behaviour"],[touchend()]:[altExecuting,"alloy.base.behaviour"]}})},memMinus=record(makeStepperButton((focusBack=>decrease(!1,focusBack)),"minus","Decrease font size",[])),memPlus=record(makeStepperButton((focusBack=>increase(!1,focusBack)),"plus","Increase font size",[])),memInput=record({dom:{tag:"div",classes:["tox-input-wrapper"]},components:[Input.sketch({inputBehaviours:derive$1([Disabling.config({}),config(customEvents,[onControlAttached({onSetup:onSetup,getApi:getApi},editorOffCell),onControlDetached({getApi:getApi},editorOffCell)]),config("input-update-display-text",[run$1(updateMenuText,((comp,se)=>{Representing.setValue(comp,se.event.text)})),run$1(focusout(),(comp=>{spec.onAction(Representing.getValue(comp))})),run$1(change(),(comp=>{spec.onAction(Representing.getValue(comp))}))]),Keying.config({mode:"special",onEnter:_comp=>(changeValue(identity,!0,!0),Optional.some(!0)),onEscape:goToParent,onUp:_comp=>(increase(!0,!1),Optional.some(!0)),onDown:_comp=>(decrease(!0,!1),Optional.some(!0)),onLeft:(_comp,se)=>(se.cut(),Optional.none()),onRight:(_comp,se)=>(se.cut(),Optional.none())})])})],behaviours:derive$1([Focusing.config({}),Keying.config({mode:"special",onEnter:focusInput,onSpace:focusInput,onEscape:goToParent}),config("input-wrapper-events",[run$1(mouseover(),(comp=>{each$1([memMinus,memPlus],(button=>{const buttonNode=SugarElement.fromDom(button.get(comp).element.dom);hasFocus(buttonNode)&&blur$1(buttonNode)}))}))])])});return{dom:{tag:"div",classes:["tox-number-input"]},components:[memMinus.asSpec(),memInput.asSpec(),memPlus.asSpec()],behaviours:derive$1([Focusing.config({}),Keying.config({mode:"flow",focusInside:FocusInsideModes.OnEnterOrSpaceMode,cycles:!1,selector:"button, .tox-input-wrapper",onEscape:wrapperComp=>hasFocus(wrapperComp.element)?Optional.none():(focus$3(wrapperComp.element),Optional.some(!0))})])}},legacyFontSizes={"8pt":"1","10pt":"2","12pt":"3","14pt":"4","18pt":"5","24pt":"6","36pt":"7"},keywordFontSizes={"xx-small":"7pt","x-small":"8pt",small:"10pt",medium:"12pt",large:"14pt","x-large":"18pt","xx-large":"24pt"},toPt=(fontSize,precision)=>/[0-9.]+px$/.test(fontSize)?((number,precision)=>{const factor=Math.pow(10,precision);return Math.round(number*factor)/factor})(72*parseInt(fontSize,10)/96,precision||0)+"pt":get$g(keywordFontSizes,fontSize).getOr(fontSize),toLegacy=fontSize=>get$g(legacyFontSizes,fontSize).getOr(""),getSpec$1=editor=>{const getMatchingValue=()=>{let matchOpt=Optional.none();const items=dataset.data,fontSize=editor.queryCommandValue("FontSize");if(fontSize)for(let precision=3;matchOpt.isNone()&&precision>=0;precision--){const pt=toPt(fontSize,precision),legacy=toLegacy(pt);matchOpt=find$5(items,(item=>item.format===fontSize||item.format===pt||item.format===legacy))}return{matchOpt:matchOpt,size:fontSize}},getPreviewFor=constant$1(Optional.none),dataset=buildBasicSettingsDataset(editor,"font_size_formats",Delimiter.Space);return{tooltip:makeTooltipText(editor,"Font size {0}","12pt"),text:Optional.some("12pt"),icon:Optional.none(),isSelectedFor:item=>valueOpt=>valueOpt.exists((value=>value.format===item)),getPreviewFor:getPreviewFor,getCurrentValue:()=>{const{matchOpt:matchOpt}=getMatchingValue();return matchOpt},onAction:rawItem=>()=>{editor.undoManager.transact((()=>{editor.focus(),editor.execCommand("FontSize",!1,rawItem.format)}))},updateText:comp=>{const{matchOpt:matchOpt,size:size}=getMatchingValue(),text=matchOpt.fold(constant$1(size),(match=>match.title));emitWith(comp,updateMenuText,{text:text}),((editor,data)=>{editor.dispatch("FontSizeTextUpdate",data)})(editor,{value:text})},dataset:dataset,shouldHide:!1,isInvalid:never}},getSpec=(editor,dataset)=>({tooltip:makeTooltipText(editor,"Format {0}","Paragraph"),text:Optional.some("Paragraph"),icon:Optional.none(),isSelectedFor:format=>()=>editor.formatter.match(format),getCurrentValue:Optional.none,getPreviewFor:format=>()=>{const fmt=editor.formatter.get(format);return void 0!==fmt?Optional.some({tag:fmt.length>0&&(fmt[0].inline||fmt[0].block)||"div",styles:editor.dom.parseStyle(editor.formatter.getCssText(format))}):Optional.none()},onAction:onActionToggleFormat$1(editor),updateText:comp=>{const getFormatItems=fmt=>isNestedFormat(fmt)?bind$3(fmt.items,getFormatItems):isFormatReference(fmt)?[{title:fmt.title,format:fmt.format}]:[],flattenedItems=bind$3(getStyleFormats(editor),getFormatItems),text=findNearest(editor,constant$1(flattenedItems)).fold(constant$1("Paragraph"),(fmt=>fmt.title));emitWith(comp,updateMenuText,{text:text}),((editor,data)=>{editor.dispatch("StylesTextUpdate",data)})(editor,{value:text})},shouldHide:shouldAutoHideStyleFormats(editor),isInvalid:item=>!editor.formatter.canApply(item.format),dataset:dataset}),schema$7=constant$1([required$1("toggleClass"),required$1("fetch"),onStrictHandler("onExecute"),defaulted("getHotspot",Optional.some),defaulted("getAnchorOverrides",constant$1({})),schema$y(),onStrictHandler("onItemExecute"),option$3("lazySink"),required$1("dom"),onHandler("onOpen"),field("splitDropdownBehaviours",[Coupling,Keying,Focusing]),defaulted("matchWidth",!1),defaulted("useMinWidth",!1),defaulted("eventOrder",{}),option$3("role")].concat(sandboxFields())),arrowPart=required({factory:Button,schema:[required$1("dom")],name:"arrow",defaults:()=>({buttonBehaviours:derive$1([Focusing.revoke()])}),overrides:detail=>({dom:{tag:"span",attributes:{role:"presentation"}},action:arrow=>{arrow.getSystem().getByUid(detail.uid).each(emitExecute)},buttonBehaviours:derive$1([Toggling.config({toggleOnExecute:!1,toggleClass:detail.toggleClass})])})}),buttonPart=required({factory:Button,schema:[required$1("dom")],name:"button",defaults:()=>({buttonBehaviours:derive$1([Focusing.revoke()])}),overrides:detail=>({dom:{tag:"span",attributes:{role:"presentation"}},action:btn=>{btn.getSystem().getByUid(detail.uid).each((splitDropdown=>{detail.onExecute(splitDropdown,btn)}))}})}),parts$3=constant$1([arrowPart,buttonPart,optional({factory:{sketch:spec=>({uid:spec.uid,dom:{tag:"span",styles:{display:"none"},attributes:{"aria-hidden":"true"},innerHtml:spec.text}})},schema:[required$1("text")],name:"aria-descriptor"}),external({schema:[tieredMenuMarkers()],name:"menu",defaults:detail=>({onExecute:(tmenu,item)=>{tmenu.getSystem().getByUid(detail.uid).each((splitDropdown=>{detail.onItemExecute(splitDropdown,tmenu,item)}))}})}),partType$1()]),SplitDropdown=composite({name:"SplitDropdown",configFields:schema$7(),partFields:parts$3(),factory:(detail,components,spec,externals)=>{const switchToMenu=sandbox=>{Composing.getCurrent(sandbox).each((current=>{Highlighting.highlightFirst(current),Keying.focusIn(current)}))},action=component=>{togglePopup(detail,identity,component,externals,switchToMenu,HighlightOnOpen.HighlightMenuAndItem).get(noop)},executeOnButton=comp=>{const button=getPartOrDie(comp,detail,"button");return emitExecute(button),Optional.some(!0)},buttonEvents={...derive$2([runOnAttached(((component,_simulatedEvent)=>{getPart(component,detail,"aria-descriptor").each((descriptor=>{const descriptorId=generate$6("aria");set$9(descriptor.element,"id",descriptorId),set$9(component.element,"aria-describedby",descriptorId)}))}))]),...events$a(Optional.some(action))},apis={repositionMenus:comp=>{Toggling.isOn(comp)&&repositionMenus(comp)}};return{uid:detail.uid,dom:detail.dom,components:components,apis:apis,eventOrder:{...detail.eventOrder,[execute$5()]:["disabling","toggling","alloy.base.behaviour"]},events:buttonEvents,behaviours:augment(detail.splitDropdownBehaviours,[Coupling.config({others:{sandbox:hotspot=>{const arrow=getPartOrDie(hotspot,detail,"arrow");return makeSandbox$1(detail,hotspot,{onOpen:()=>{Toggling.on(arrow),Toggling.on(hotspot)},onClose:()=>{Toggling.off(arrow),Toggling.off(hotspot)}})}}}),Keying.config({mode:"special",onSpace:executeOnButton,onEnter:executeOnButton,onDown:comp=>(action(comp),Optional.some(!0))}),Focusing.config({}),Toggling.config({toggleOnExecute:!1,aria:{mode:"expanded"}})]),domModification:{attributes:{role:detail.role.getOr("button"),"aria-haspopup":!0}}}},apis:{repositionMenus:(apis,comp)=>apis.repositionMenus(comp)}}),getButtonApi=component=>({isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state),setText:text=>emitWith(component,updateMenuText,{text:text}),setIcon:icon=>emitWith(component,updateMenuIcon,{icon:icon})}),getToggleApi=component=>({setActive:state=>{Toggling.set(component,state)},isActive:()=>Toggling.isOn(component),isEnabled:()=>!Disabling.isDisabled(component),setEnabled:state=>Disabling.set(component,!state),setText:text=>emitWith(component,updateMenuText,{text:text}),setIcon:icon=>emitWith(component,updateMenuIcon,{icon:icon})}),getTooltipAttributes=(tooltip,providersBackstage)=>tooltip.map((tooltip=>({"aria-label":providersBackstage.translate(tooltip),title:providersBackstage.translate(tooltip)}))).getOr({}),focusButtonEvent=generate$6("focus-button"),renderCommonStructure=(optIcon,optText,tooltip,behaviours,providersBackstage)=>{const optMemDisplayText=optText.map((text=>record(renderLabel$1(text,"tox-tbtn",providersBackstage)))),optMemDisplayIcon=optIcon.map((icon=>record(renderReplaceableIconFromPack(icon,providersBackstage.icons))));return{dom:{tag:"button",classes:["tox-tbtn"].concat(optText.isSome()?["tox-tbtn--select"]:[]),attributes:getTooltipAttributes(tooltip,providersBackstage)},components:componentRenderPipeline([optMemDisplayIcon.map((mem=>mem.asSpec())),optMemDisplayText.map((mem=>mem.asSpec()))]),eventOrder:{[mousedown()]:["focusing","alloy.base.behaviour",commonButtonDisplayEvent],[attachedToDom()]:[commonButtonDisplayEvent,"toolbar-group-button-events"]},buttonBehaviours:derive$1([DisablingConfigs_toolbarButton(providersBackstage.isDisabled),receivingConfig(),config(commonButtonDisplayEvent,[runOnAttached(((comp,_se)=>forceInitialSize(comp))),run$1(updateMenuText,((comp,se)=>{optMemDisplayText.bind((mem=>mem.getOpt(comp))).each((displayText=>{Replacing.set(displayText,[text$2(providersBackstage.translate(se.event.text))])}))})),run$1(updateMenuIcon,((comp,se)=>{optMemDisplayIcon.bind((mem=>mem.getOpt(comp))).each((displayIcon=>{Replacing.set(displayIcon,[renderReplaceableIconFromPack(se.event.icon,providersBackstage.icons)])}))})),run$1(mousedown(),((button,se)=>{se.event.prevent(),emit(button,focusButtonEvent)}))])].concat(behaviours.getOr([])))}},renderCommonToolbarButton=(spec,specialisation,providersBackstage)=>{var _d;const editorOffCell=Cell(noop),structure=renderCommonStructure(spec.icon,spec.text,spec.tooltip,Optional.none(),providersBackstage);return Button.sketch({dom:structure.dom,components:structure.components,eventOrder:toolbarButtonEventOrder,buttonBehaviours:{...derive$1([config("toolbar-button-events",[(info={onAction:spec.onAction,getApi:specialisation.getApi},runOnExecute$1(((comp,_simulatedEvent)=>{runWithApi(info,comp)((itemApi=>{emitWith(comp,internalToolbarButtonExecute,{buttonApi:itemApi}),info.onAction(itemApi)}))}))),onControlAttached(specialisation,editorOffCell),onControlDetached(specialisation,editorOffCell)]),DisablingConfigs_toolbarButton((()=>!spec.enabled||providersBackstage.isDisabled())),receivingConfig()].concat(specialisation.toolbarButtonBehaviours)),[commonButtonDisplayEvent]:null===(_d=structure.buttonBehaviours)||void 0===_d?void 0:_d[commonButtonDisplayEvent]}});var info},renderToolbarButtonWith=(spec,providersBackstage,bonusEvents)=>renderCommonToolbarButton(spec,{toolbarButtonBehaviours:bonusEvents.length>0?[config("toolbarButtonWith",bonusEvents)]:[],getApi:getButtonApi,onSetup:spec.onSetup},providersBackstage),renderToolbarToggleButtonWith=(spec,providersBackstage,bonusEvents)=>renderCommonToolbarButton(spec,{toolbarButtonBehaviours:[Replacing.config({}),Toggling.config({toggleClass:"tox-tbtn--enabled",aria:{mode:"pressed"},toggleOnExecute:!1})].concat(bonusEvents.length>0?[config("toolbarToggleButtonWith",bonusEvents)]:[]),getApi:getToggleApi,onSetup:spec.onSetup},providersBackstage),fetchChoices=(getApi,spec,providersBackstage)=>comp=>Future_nu((callback=>spec.fetch(callback))).map((items=>Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6("menu-value"),items,(value=>{spec.onItemAction(getApi(comp),value)}),spec.columns,spec.presets,ItemResponse$1.CLOSE_ON_EXECUTE,spec.select.getOr(never),providersBackstage),{movement:deriveMenuMovement(spec.columns,spec.presets),menuBehaviours:SimpleBehaviours_unnamedEvents("auto"!==spec.columns?[]:[runOnAttached(((comp,_se)=>{detectSize(comp,4,classForPreset(spec.presets)).each((({numRows:numRows,numColumns:numColumns})=>{Keying.setGridSize(comp,numRows,numColumns)}))}))])}))))),defaultToolbar=[{name:"history",items:["undo","redo"]},{name:"ai",items:["aidialog","aishortcuts"]},{name:"styles",items:["styles"]},{name:"formatting",items:["bold","italic"]},{name:"alignment",items:["alignleft","aligncenter","alignright","alignjustify"]},{name:"indentation",items:["outdent","indent"]},{name:"permanent pen",items:["permanentpen"]},{name:"comments",items:["addcomment"]}],renderFromBridge=(bridgeBuilder,render)=>(spec,backstage,editor)=>{const internal=bridgeBuilder(spec).mapError((errInfo=>formatError(errInfo))).getOrDie();return render(internal,backstage,editor)},types={button:renderFromBridge(createToolbarButton,((s,backstage)=>{return spec=s,providersBackstage=backstage.shared.providers,renderToolbarButtonWith(spec,providersBackstage,[]);var spec,providersBackstage})),togglebutton:renderFromBridge(createToggleButton,((s,backstage)=>{return spec=s,providersBackstage=backstage.shared.providers,renderToolbarToggleButtonWith(spec,providersBackstage,[]);var spec,providersBackstage})),menubutton:renderFromBridge(createMenuButton,((s,backstage)=>renderMenuButton(s,"tox-tbtn",backstage,Optional.none(),!1))),splitbutton:renderFromBridge((spec=>asRaw("SplitButton",splitButtonSchema,spec)),((s,backstage)=>((spec,sharedBackstage)=>{const getApi=comp=>({isEnabled:()=>!Disabling.isDisabled(comp),setEnabled:state=>Disabling.set(comp,!state),setIconFill:(id,value)=>{descendant(comp.element,`svg path[class="${id}"], rect[class="${id}"]`).each((underlinePath=>{set$9(underlinePath,"fill",value)}))},setActive:state=>{set$9(comp.element,"aria-pressed",state),descendant(comp.element,"span").each((button=>{comp.getSystem().getByDom(button).each((buttonComp=>Toggling.set(buttonComp,state)))}))},isActive:()=>descendant(comp.element,"span").exists((button=>comp.getSystem().getByDom(button).exists(Toggling.isOn))),setText:text=>descendant(comp.element,"span").each((button=>comp.getSystem().getByDom(button).each((buttonComp=>emitWith(buttonComp,updateMenuText,{text:text}))))),setIcon:icon=>descendant(comp.element,"span").each((button=>comp.getSystem().getByDom(button).each((buttonComp=>emitWith(buttonComp,updateMenuIcon,{icon:icon}))))),setTooltip:tooltip=>{const translatedTooltip=sharedBackstage.providers.translate(tooltip);setAll$1(comp.element,{"aria-label":translatedTooltip,title:translatedTooltip})}}),editorOffCell=Cell(noop),specialisation={getApi:getApi,onSetup:spec.onSetup};return SplitDropdown.sketch({dom:{tag:"div",classes:["tox-split-button"],attributes:{"aria-pressed":!1,...getTooltipAttributes(spec.tooltip,sharedBackstage.providers)}},onExecute:button=>{const api=getApi(button);api.isEnabled()&&spec.onAction(api)},onItemExecute:(_a,_b,_c)=>{},splitDropdownBehaviours:derive$1([DisablingConfigs_splitButton(sharedBackstage.providers.isDisabled),receivingConfig(),config("split-dropdown-events",[runOnAttached(((comp,_se)=>forceInitialSize(comp))),run$1(focusButtonEvent,Focusing.focus),onControlAttached(specialisation,editorOffCell),onControlDetached(specialisation,editorOffCell)]),Unselecting.config({})]),eventOrder:{[attachedToDom()]:["alloy.base.behaviour","split-dropdown-events"]},toggleClass:"tox-tbtn--enabled",lazySink:sharedBackstage.getSink,fetch:fetchChoices(getApi,spec,sharedBackstage.providers),parts:{menu:part(0,spec.columns,spec.presets)},components:[SplitDropdown.parts.button(renderCommonStructure(spec.icon,spec.text,Optional.none(),Optional.some([Toggling.config({toggleClass:"tox-tbtn--enabled",toggleOnExecute:!1})]),sharedBackstage.providers)),SplitDropdown.parts.arrow({dom:{tag:"button",classes:["tox-tbtn","tox-split-button__chevron"],innerHtml:get$2("chevron-down",sharedBackstage.providers.icons)},buttonBehaviours:derive$1([DisablingConfigs_splitButton(sharedBackstage.providers.isDisabled),receivingConfig(),addFocusableBehaviour()])}),SplitDropdown.parts["aria-descriptor"]({text:sharedBackstage.providers.translate("To open the popup, press Shift+Enter")})]})})(s,backstage.shared))),grouptoolbarbutton:renderFromBridge((spec=>asRaw("GroupToolbarButton",groupToolbarButtonSchema,spec)),((s,backstage,editor)=>{const buttons=editor.ui.registry.getAll().buttons,identify=toolbar=>identifyButtons(editor,{buttons:buttons,toolbar:toolbar,allowToolbarGroups:!1},backstage,Optional.none()),attributes={[Attribute]:backstage.shared.header.isPositionedAtTop()?AttributeValue.TopToBottom:AttributeValue.BottomToTop};if(getToolbarMode(editor)===ToolbarMode$1.floating)return((spec,backstage,identifyButtons,attributes)=>{const sharedBackstage=backstage.shared,editorOffCell=Cell(noop),specialisation={toolbarButtonBehaviours:[],getApi:getButtonApi,onSetup:spec.onSetup},behaviours=[config("toolbar-group-button-events",[onControlAttached(specialisation,editorOffCell),onControlDetached(specialisation,editorOffCell)])];return FloatingToolbarButton.sketch({lazySink:sharedBackstage.getSink,fetch:()=>Future_nu((resolve=>{resolve(map$2(identifyButtons(spec.items),renderToolbarGroup))})),markers:{toggledClass:"tox-tbtn--enabled"},parts:{button:renderCommonStructure(spec.icon,spec.text,spec.tooltip,Optional.some(behaviours),sharedBackstage.providers),toolbar:{dom:{tag:"div",classes:["tox-toolbar__overflow"],attributes:attributes}}}})})(s,backstage,identify,attributes);throw new Error("Toolbar groups are only supported when using floating toolbar mode")}))},bespokeButtons={styles:(editor,backstage)=>{const dataset={type:"advanced",...backstage.styles};return createSelectButton(editor,backstage,getSpec(editor,dataset),"Format {0}","StylesTextUpdate")},fontsize:(editor,backstage)=>createSelectButton(editor,backstage,getSpec$1(editor),"Font size {0}","FontSizeTextUpdate"),fontsizeinput:(editor,backstage)=>createBespokeNumberInput(editor,backstage,(editor=>{const getCurrentValue=()=>editor.queryCommandValue("FontSize");return{updateInputValue:comp=>emitWith(comp,updateMenuText,{text:getCurrentValue()}),onAction:(format,focusBack)=>editor.execCommand("FontSize",!1,format,{skip_focus:!focusBack}),getNewValue:(text,updateFunction)=>{parse(text,["unsupportedLength","empty"]);const currentValue=getCurrentValue(),parsedText=parse(text,["unsupportedLength","empty"]).or(parse(currentValue,["unsupportedLength","empty"])),value=parsedText.map((res=>res.value)).getOr(16),defaultUnit=getFontSizeInputDefaultUnit(editor),unit=parsedText.map((res=>res.unit)).filter((u=>""!==u)).getOr(defaultUnit),newValue=updateFunction(value,(unit=>{var _a;return null!==(_a={em:{step:.1},cm:{step:.1},in:{step:.1},pc:{step:.1},ch:{step:.1},rem:{step:.1}}[unit])&&void 0!==_a?_a:{step:1}})(unit).step),res=`${(value=>value>=0)(newValue)?newValue:value}${unit}`;return res!==currentValue&&((editor,data)=>{editor.dispatch("FontSizeInputTextUpdate",data)})(editor,{value:res}),res}}})(editor)),fontfamily:(editor,backstage)=>createSelectButton(editor,backstage,getSpec$2(editor),"Font {0}","FontFamilyTextUpdate"),blocks:(editor,backstage)=>createSelectButton(editor,backstage,getSpec$3(editor),"Block {0}","BlocksTextUpdate"),align:(editor,backstage)=>createSelectButton(editor,backstage,getSpec$4(editor),"Alignment {0}","AlignTextUpdate")},createToolbar=toolbarConfig=>{const toolbar=toolbarConfig.toolbar,buttons=toolbarConfig.buttons;return!1===toolbar?[]:void 0===toolbar||!0===toolbar?(buttons=>{const filteredItemGroups=map$2(defaultToolbar,(group=>{const items=filter$2(group.items,(subItem=>has$2(buttons,subItem)||has$2(bespokeButtons,subItem)));return{name:group.name,items:items}}));return filter$2(filteredItemGroups,(group=>group.items.length>0))})(buttons):isString(toolbar)?(strToolbar=>{const groupsStrings=strToolbar.split("|");return map$2(groupsStrings,(g=>({items:g.trim().split(" ")})))})(toolbar):(toolbar=>isArrayOf(toolbar,(t=>has$2(t,"name")&&has$2(t,"items"))))(toolbar)?toolbar:(console.error("Toolbar type should be string, string[], boolean or ToolbarGroup[]"),[])},lookupButton=(editor,buttons,toolbarItem,allowToolbarGroups,backstage,prefixes)=>get$g(buttons,toolbarItem.toLowerCase()).orThunk((()=>prefixes.bind((ps=>findMap(ps,(prefix=>get$g(buttons,prefix+toolbarItem.toLowerCase()))))))).fold((()=>get$g(bespokeButtons,toolbarItem.toLowerCase()).map((r=>r(editor,backstage)))),(spec=>"grouptoolbarbutton"!==spec.type||allowToolbarGroups?((spec,backstage,editor)=>get$g(types,spec.type).fold((()=>(console.error("skipping button defined by",spec),Optional.none())),(render=>Optional.some(render(spec,backstage,editor)))))(spec,backstage,editor):(console.warn(`Ignoring the '${toolbarItem}' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested.`),Optional.none()))),identifyButtons=(editor,toolbarConfig,backstage,prefixes)=>{const toolbarGroups=createToolbar(toolbarConfig),groups=map$2(toolbarGroups,(group=>{const items=bind$3(group.items,(toolbarItem=>0===toolbarItem.trim().length?[]:lookupButton(editor,toolbarConfig.buttons,toolbarItem,toolbarConfig.allowToolbarGroups,backstage,prefixes).toArray()));return{title:Optional.from(editor.translate(group.name)),items:items}}));return filter$2(groups,(group=>group.items.length>0))},setToolbar=(editor,uiRefs,rawUiConfig,backstage)=>{const outerContainer=uiRefs.mainUi.outerContainer,toolbarConfig=rawUiConfig.toolbar,toolbarButtonsConfig=rawUiConfig.buttons;if(isArrayOf(toolbarConfig,isString)){const toolbars=toolbarConfig.map((t=>{const config={toolbar:t,buttons:toolbarButtonsConfig,allowToolbarGroups:rawUiConfig.allowToolbarGroups};return identifyButtons(editor,config,backstage,Optional.none())}));OuterContainer.setToolbars(outerContainer,toolbars)}else OuterContainer.setToolbar(outerContainer,identifyButtons(editor,rawUiConfig,backstage,Optional.none()))},detection=detect$2(),isiOS12=detection.os.isiOS()&&detection.os.version.major<=12;var Iframe=Object.freeze({__proto__:null,render:(editor,uiRefs,rawUiConfig,backstage,args)=>{const{mainUi:mainUi,uiMotherships:uiMotherships}=uiRefs,lastToolbarWidth=Cell(0),outerContainer=mainUi.outerContainer;iframe(editor);const eTargetNode=SugarElement.fromDom(args.targetNode),uiRoot=getContentContainer(getRootNode(eTargetNode));attachSystemAfter(eTargetNode,mainUi.mothership),((editor,uiRoot,uiRefs)=>{isSplitUiMode(editor)&&attachSystemAfter(uiRefs.mainUi.mothership.element,uiRefs.popupUi.mothership),attachSystem(uiRoot,uiRefs.dialogUi.mothership)})(editor,uiRoot,uiRefs),editor.on("SkinLoaded",(()=>{OuterContainer.setSidebar(outerContainer,rawUiConfig.sidebar,getSidebarShow(editor)),setToolbar(editor,uiRefs,rawUiConfig,backstage),lastToolbarWidth.set(editor.getWin().innerWidth),OuterContainer.setMenubar(outerContainer,identifyMenus(editor,rawUiConfig)),OuterContainer.setViews(outerContainer,rawUiConfig.views),((editor,uiRefs)=>{const{uiMotherships:uiMotherships}=uiRefs,dom=editor.dom;let contentWindow=editor.getWin();const initialDocEle=editor.getDoc().documentElement,lastWindowDimensions=Cell(SugarPosition(contentWindow.innerWidth,contentWindow.innerHeight)),lastDocumentDimensions=Cell(SugarPosition(initialDocEle.offsetWidth,initialDocEle.offsetHeight)),resizeWindow=()=>{const outer=lastWindowDimensions.get();outer.left===contentWindow.innerWidth&&outer.top===contentWindow.innerHeight||(lastWindowDimensions.set(SugarPosition(contentWindow.innerWidth,contentWindow.innerHeight)),fireResizeContent(editor))},resizeDocument=()=>{const docEle=editor.getDoc().documentElement,inner=lastDocumentDimensions.get();inner.left===docEle.offsetWidth&&inner.top===docEle.offsetHeight||(lastDocumentDimensions.set(SugarPosition(docEle.offsetWidth,docEle.offsetHeight)),fireResizeContent(editor))},scroll=e=>{((editor,e)=>{editor.dispatch("ScrollContent",e)})(editor,e)};dom.bind(contentWindow,"resize",resizeWindow),dom.bind(contentWindow,"scroll",scroll);const elementLoad=capture(SugarElement.fromDom(editor.getBody()),"load",resizeDocument);editor.on("hide",(()=>{each$1(uiMotherships,(m=>{set$8(m.element,"display","none")}))})),editor.on("show",(()=>{each$1(uiMotherships,(m=>{remove$6(m.element,"display")}))})),editor.on("NodeChange",resizeDocument),editor.on("remove",(()=>{elementLoad.unbind(),dom.unbind(contentWindow,"resize",resizeWindow),dom.unbind(contentWindow,"scroll",scroll),contentWindow=null}))})(editor,uiRefs)}));const socket=OuterContainer.getSocket(outerContainer).getOrDie("Could not find expected socket element");if(isiOS12){setAll(socket.element,{overflow:"scroll","-webkit-overflow-scrolling":"touch"});const limit=((fn,rate)=>{let timer=null;return{cancel:()=>{isNull(timer)||(clearTimeout(timer),timer=null)},throttle:(...args)=>{isNull(timer)&&(timer=setTimeout((()=>{timer=null,fn.apply(null,args)}),rate))}}})((()=>{editor.dispatch("ScrollContent")}),20),unbinder=bind(socket.element,"scroll",limit.throttle);editor.on("remove",unbinder.unbind)}setupReadonlyModeSwitch(editor,uiRefs),editor.addCommand("ToggleSidebar",((_ui,value)=>{OuterContainer.toggleSidebar(outerContainer,value),editor.dispatch("ToggleSidebar")})),editor.addQueryValueHandler("ToggleSidebar",(()=>{var _a;return null!==(_a=OuterContainer.whichSidebar(outerContainer))&&void 0!==_a?_a:""})),editor.addCommand("ToggleView",((_ui,value)=>{if(OuterContainer.toggleView(outerContainer,value)){const target=outerContainer.element;mainUi.mothership.broadcastOn([dismissPopups()],{target:target}),each$1(uiMotherships,(m=>{m.broadcastOn([dismissPopups()],{target:target})})),isNull(OuterContainer.whichView(outerContainer))&&(editor.focus(),editor.nodeChanged(),OuterContainer.refreshToolbar(outerContainer))}})),editor.addQueryValueHandler("ToggleView",(()=>{var _a;return null!==(_a=OuterContainer.whichView(outerContainer))&&void 0!==_a?_a:""}));const toolbarMode=getToolbarMode(editor);toolbarMode!==ToolbarMode$1.sliding&&toolbarMode!==ToolbarMode$1.floating||editor.on("ResizeWindow ResizeEditor ResizeContent",(()=>{const width=editor.getWin().innerWidth;width!==lastToolbarWidth.get()&&(OuterContainer.refreshToolbar(uiRefs.mainUi.outerContainer),lastToolbarWidth.set(width))}));const api={setEnabled:state=>{broadcastReadonly(uiRefs,!state)},isEnabled:()=>!Disabling.isDisabled(outerContainer)};return{iframeContainer:socket.element.dom,editorContainer:outerContainer.element.dom,api:api}}});const parseToInt=val=>/^[0-9\.]+(|px)$/i.test(""+val)?Optional.some(parseInt(""+val,10)):Optional.none(),numToPx=val=>isNumber(val)?val+"px":val,calcCappedSize=(size,minSize,maxSize)=>{const minOverride=minSize.filter((min=>size<min)),maxOverride=maxSize.filter((max=>size>max));return minOverride.or(maxOverride).getOr(size)},getHeightWithFallback=editor=>{const height=(editor=>{const baseHeight=getHeightOption(editor),minHeight=getMinHeightOption(editor),maxHeight=getMaxHeightOption(editor);return parseToInt(baseHeight).map((height=>calcCappedSize(height,minHeight,maxHeight)))})(editor);return height.getOr(getHeightOption(editor))},getWidth=editor=>{const baseWidth=getWidthOption(editor),minWidth=getMinWidthOption(editor),maxWidth=getMaxWidthOption(editor);return parseToInt(baseWidth).map((width=>calcCappedSize(width,minWidth,maxWidth)))},{ToolbarLocation:ToolbarLocation,ToolbarMode:ToolbarMode}=Options,InlineHeader=(editor,targetElm,uiRefs,backstage,floatContainer)=>{const{mainUi:mainUi,uiMotherships:uiMotherships}=uiRefs,DOM=global$7.DOM,useFixedToolbarContainer=useFixedContainer(editor),isSticky=isStickyToolbar(editor),editorMaxWidthOpt=getMaxWidthOption(editor).or(getWidth(editor)),headerBackstage=backstage.shared.header,isPositionedAtTop=headerBackstage.isPositionedAtTop,toolbarMode=getToolbarMode(editor),isSplitToolbar=toolbarMode===ToolbarMode.sliding||toolbarMode===ToolbarMode.floating,visible=Cell(!1),isVisible=()=>visible.get()&&!editor.removed,calcToolbarOffset=toolbar=>isSplitToolbar?toolbar.fold(constant$1(0),(tbar=>tbar.components().length>1?get$d(tbar.components()[1].element):0)):0,getOffsetParent$1=(editor,element)=>isSplitUiMode(editor)?getOffsetParent(element):Optional.none(),repositionPopups$1=()=>{each$1(uiMotherships,(m=>{m.broadcastOn([repositionPopups()],{})}))},update=stickyAction=>{if(!isVisible())return;useFixedToolbarContainer||floatContainer.on((container=>{const maxWidth=editorMaxWidthOpt.getOrThunk((()=>{const bodyMargin=parseToInt(get$e(body(),"margin-left")).getOr(0);return get$c(body())-absolute$3(targetElm).left+bodyMargin}));set$8(container.element,"max-width",maxWidth+"px")}));const optToolbarWidth=useFixedToolbarContainer?Optional.none():(()=>{if(useFixedToolbarContainer)return Optional.none();if(absolute$3(mainUi.outerContainer.element).left+getOuter$1(mainUi.outerContainer.element)>=window.innerWidth-40||getRaw(mainUi.outerContainer.element,"width").isSome()){set$8(mainUi.outerContainer.element,"position","absolute"),set$8(mainUi.outerContainer.element,"left","0px"),remove$6(mainUi.outerContainer.element,"width");const w=getOuter$1(mainUi.outerContainer.element);return Optional.some(w)}return Optional.none()})();isSplitToolbar&&OuterContainer.refreshToolbar(mainUi.outerContainer),useFixedToolbarContainer||(optToolbarWidth=>{floatContainer.on((container=>{const toolbar=OuterContainer.getToolbar(mainUi.outerContainer),offset=calcToolbarOffset(toolbar),targetBounds=box$1(targetElm),{top:top,left:left}=getOffsetParent$1(editor,mainUi.outerContainer.element).fold((()=>({top:isPositionedAtTop()?Math.max(targetBounds.y-get$d(container.element)+offset,0):targetBounds.bottom,left:targetBounds.x})),(offsetParent=>{var _a;const offsetBox=box$1(offsetParent),scrollDelta=null!==(_a=offsetParent.dom.scrollTop)&&void 0!==_a?_a:0,isOffsetParentBody=eq(offsetParent,body()),topValue=isOffsetParentBody?Math.max(targetBounds.y-get$d(container.element)+offset,0):targetBounds.y-offsetBox.y+scrollDelta-get$d(container.element)+offset;return{top:isPositionedAtTop()?topValue:targetBounds.bottom,left:isOffsetParentBody?targetBounds.x:targetBounds.x-offsetBox.x}})),baseProperties={position:"absolute",left:Math.round(left)+"px",top:Math.round(top)+"px"},widthProperties=optToolbarWidth.map((toolbarWidth=>{const scroll=get$b(),availableWidth=window.innerWidth-(left-scroll.left);return{width:Math.max(Math.min(toolbarWidth,availableWidth),150)+"px"}})).getOr({});setAll(mainUi.outerContainer.element,{...baseProperties,...widthProperties})}))})(optToolbarWidth),isSticky&&floatContainer.on(stickyAction),repositionPopups$1()},doUpdateMode=()=>!(useFixedToolbarContainer||!isSticky||!isVisible())&&floatContainer.get().exists((fc=>{const currentMode=headerBackstage.getDockingMode(),newMode=(container=>{switch(getToolbarLocation(editor)){case ToolbarLocation.auto:const toolbar=OuterContainer.getToolbar(mainUi.outerContainer),offset=calcToolbarOffset(toolbar),toolbarHeight=get$d(container.element)-offset,targetBounds=box$1(targetElm);if(targetBounds.y>toolbarHeight)return"top";{const doc=documentElement(targetElm),docHeight=Math.max(doc.dom.scrollHeight,get$d(doc));return targetBounds.bottom<docHeight-toolbarHeight||win().bottom<targetBounds.bottom-toolbarHeight?"bottom":"top"}case ToolbarLocation.bottom:return"bottom";case ToolbarLocation.top:default:return"top"}})(fc);return newMode!==currentMode&&(mode=newMode,floatContainer.on((container=>{Docking.setModes(container,[mode]),headerBackstage.setDockingMode(mode);const verticalDir=isPositionedAtTop()?AttributeValue.TopToBottom:AttributeValue.BottomToTop;set$9(container.element,Attribute,verticalDir)})),!0);var mode}));return{isVisible:isVisible,isPositionedAtTop:isPositionedAtTop,show:()=>{visible.set(!0),set$8(mainUi.outerContainer.element,"display","flex"),DOM.addClass(editor.getBody(),"mce-edit-focus"),each$1(uiMotherships,(m=>{remove$6(m.element,"display")})),doUpdateMode(),isSplitUiMode(editor)?update((elem=>Docking.isDocked(elem)?Docking.reset(elem):Docking.refresh(elem))):update(Docking.refresh)},hide:()=>{visible.set(!1),set$8(mainUi.outerContainer.element,"display","none"),DOM.removeClass(editor.getBody(),"mce-edit-focus"),each$1(uiMotherships,(m=>{set$8(m.element,"display","none")}))},update:update,updateMode:()=>{doUpdateMode()&&update(Docking.reset)},repositionPopups:repositionPopups$1}},getTargetPosAndBounds=(targetElm,isToolbarTop)=>{const bounds=box$1(targetElm);return{pos:isToolbarTop?bounds.y:bounds.bottom,bounds:bounds}};var Inline=Object.freeze({__proto__:null,render:(editor,uiRefs,rawUiConfig,backstage,args)=>{const{mainUi:mainUi}=uiRefs,floatContainer=value$2(),targetElm=SugarElement.fromDom(args.targetNode),ui=InlineHeader(editor,targetElm,uiRefs,backstage,floatContainer),toolbarPersist=isToolbarPersist(editor);inline(editor);const render=()=>{if(floatContainer.isSet())return void ui.show();floatContainer.set(OuterContainer.getHeader(mainUi.outerContainer).getOrDie());const uiContainer=getUiContainer(editor);isSplitUiMode(editor)?(attachSystemAfter(targetElm,mainUi.mothership),attachSystemAfter(targetElm,uiRefs.popupUi.mothership)):attachSystem(uiContainer,mainUi.mothership),attachSystem(uiContainer,uiRefs.dialogUi.mothership),setToolbar(editor,uiRefs,rawUiConfig,backstage),OuterContainer.setMenubar(mainUi.outerContainer,identifyMenus(editor,rawUiConfig)),ui.show(),((editor,targetElm,ui,toolbarPersist)=>{const prevPosAndBounds=Cell(getTargetPosAndBounds(targetElm,ui.isPositionedAtTop())),resizeContent=e=>{const{pos:pos,bounds:bounds}=getTargetPosAndBounds(targetElm,ui.isPositionedAtTop()),{pos:prevPos,bounds:prevBounds}=prevPosAndBounds.get(),hasResized=bounds.height!==prevBounds.height||bounds.width!==prevBounds.width;prevPosAndBounds.set({pos:pos,bounds:bounds}),hasResized&&fireResizeContent(editor,e),ui.isVisible()&&(prevPos!==pos?ui.update(Docking.reset):hasResized&&(ui.updateMode(),ui.repositionPopups()))};toolbarPersist||(editor.on("activate",ui.show),editor.on("deactivate",ui.hide)),editor.on("SkinLoaded ResizeWindow",(()=>ui.update(Docking.reset))),editor.on("NodeChange keydown",(e=>{requestAnimationFrame((()=>resizeContent(e)))}));let lastScrollX=0;const updateUi=last((()=>ui.update(Docking.refresh)),33);editor.on("ScrollWindow",(()=>{const newScrollX=get$b().left;newScrollX!==lastScrollX&&(lastScrollX=newScrollX,updateUi.throttle()),ui.updateMode()})),isSplitUiMode(editor)&&editor.on("ElementScroll",(_args=>{ui.update(Docking.refresh)}));const elementLoad=unbindable();elementLoad.set(capture(SugarElement.fromDom(editor.getBody()),"load",(e=>resizeContent(e.raw)))),editor.on("remove",(()=>{elementLoad.clear()}))})(editor,targetElm,ui,toolbarPersist),editor.nodeChanged()};editor.on("show",render),editor.on("hide",ui.hide),toolbarPersist||(editor.on("focus",render),editor.on("blur",ui.hide)),editor.on("init",(()=>{(editor.hasFocus()||toolbarPersist)&&render()})),setupReadonlyModeSwitch(editor,uiRefs);const api={show:render,hide:ui.hide,setEnabled:state=>{broadcastReadonly(uiRefs,!state)},isEnabled:()=>!Disabling.isDisabled(mainUi.outerContainer)};return{editorContainer:mainUi.outerContainer.element.dom,api:api}}});const runOnExecute=(memInput,original)=>run$1(internalToolbarButtonExecute,((comp,se)=>{const formApi=(input=>({hide:()=>emit(input,sandboxClose()),getValue:()=>Representing.getValue(input)}))(memInput.get(comp));original.onAction(formApi,se.event.buttonApi)})),generateOne=(memInput,button,providersBackstage)=>(button=>"contextformtogglebutton"===button.type)(button)?((memInput,button,providers)=>{const{primary:primary,...rest}=button.original,bridged=getOrDie(createToggleButton({...rest,type:"togglebutton",onAction:noop}));return renderToolbarToggleButtonWith(bridged,providers,[runOnExecute(memInput,button)])})(memInput,button,providersBackstage):((memInput,button,providers)=>{const{primary:primary,...rest}=button.original,bridged=getOrDie(createToolbarButton({...rest,type:"button",onAction:noop}));return renderToolbarButtonWith(bridged,providers,[runOnExecute(memInput,button)])})(memInput,button,providersBackstage),buildInitGroups=(ctx,providers)=>{const inputAttributes=ctx.label.fold((()=>({})),(label=>({"aria-label":label}))),memInput=record(Input.sketch({inputClasses:["tox-toolbar-textfield","tox-toolbar-nav-js"],data:ctx.initValue(),inputAttributes:inputAttributes,selectOnFocus:!0,inputBehaviours:derive$1([Keying.config({mode:"special",onEnter:input=>commands.findPrimary(input).map((primary=>(emitExecute(primary),!0))),onLeft:(comp,se)=>(se.cut(),Optional.none()),onRight:(comp,se)=>(se.cut(),Optional.none())})])})),commands=((memInput,buttons,providersBackstage)=>{const mementos=map$2(buttons,(button=>record(generateOne(memInput,button,providersBackstage))));return{asSpecs:()=>map$2(mementos,(mem=>mem.asSpec())),findPrimary:compInSystem=>findMap(buttons,((button,i)=>button.primary?Optional.from(mementos[i]).bind((mem=>mem.getOpt(compInSystem))).filter(not(Disabling.isDisabled)):Optional.none()))}})(memInput,ctx.commands,providers);return[{title:Optional.none(),items:[memInput.asSpec()]},{title:Optional.none(),items:commands.asSpecs()}]},ContextForm_buildInitGroups=buildInitGroups,isVerticalOverlap=(a,b,threshold)=>b.bottom-a.y>=threshold&&a.bottom-b.y>=threshold,getSelectionBounds=editor=>{const rect=(rng=>{const rect=rng.getBoundingClientRect();if(rect.height<=0&&rect.width<=0){const leaf$1=leaf(SugarElement.fromDom(rng.startContainer),rng.startOffset).element;return(isText(leaf$1)?parent(leaf$1):Optional.some(leaf$1)).filter(isElement$1).map((e=>e.dom.getBoundingClientRect())).getOr(rect)}return rect})(editor.selection.getRng());if(editor.inline){const scroll=get$b();return bounds(scroll.left+rect.left,scroll.top+rect.top,rect.width,rect.height)}{const bodyPos=absolute$2(SugarElement.fromDom(editor.getBody()));return bounds(bodyPos.x+rect.left,bodyPos.y+rect.top,rect.width,rect.height)}},getContextToolbarBounds=(editor,sharedBackstage,toolbarType,margin=0)=>{const viewportBounds=getBounds$3(window),contentAreaBox=box$1(SugarElement.fromDom(editor.getContentAreaContainer())),toolbarOrMenubarEnabled=isMenubarEnabled(editor)||isToolbarEnabled(editor)||isMultipleToolbars(editor),{x:x,width:width}=((contentAreaBox,viewportBounds,margin)=>{const x=Math.max(contentAreaBox.x+margin,viewportBounds.x);return{x:x,width:Math.min(contentAreaBox.right-margin,viewportBounds.right)-x}})(contentAreaBox,viewportBounds,margin);if(editor.inline&&!toolbarOrMenubarEnabled)return bounds(x,viewportBounds.y,width,viewportBounds.height);{const isToolbarTop=sharedBackstage.header.isPositionedAtTop(),{y:y,bottom:bottom}=((editor,contentAreaBox,viewportBounds,isToolbarLocationTop,toolbarType,margin)=>{const container=SugarElement.fromDom(editor.getContainer()),header=descendant(container,".tox-editor-header").getOr(container),headerBox=box$1(header),isToolbarBelowContentArea=headerBox.y>=contentAreaBox.bottom,isToolbarAbove=isToolbarLocationTop&&!isToolbarBelowContentArea;if(editor.inline&&isToolbarAbove)return{y:Math.max(headerBox.bottom+margin,viewportBounds.y),bottom:viewportBounds.bottom};if(editor.inline&&!isToolbarAbove)return{y:viewportBounds.y,bottom:Math.min(headerBox.y-margin,viewportBounds.bottom)};const containerBounds="line"===toolbarType?box$1(container):contentAreaBox;return isToolbarAbove?{y:Math.max(headerBox.bottom+margin,viewportBounds.y),bottom:Math.min(containerBounds.bottom-margin,viewportBounds.bottom)}:{y:Math.max(containerBounds.y+margin,viewportBounds.y),bottom:Math.min(headerBox.y-margin,viewportBounds.bottom)}})(editor,contentAreaBox,viewportBounds,isToolbarTop,toolbarType,margin);return bounds(x,y,width,bottom-y)}},bubbleAlignments$1={valignCentre:[],alignCentre:[],alignLeft:["tox-pop--align-left"],alignRight:["tox-pop--align-right"],right:["tox-pop--right"],left:["tox-pop--left"],bottom:["tox-pop--bottom"],top:["tox-pop--top"],inset:["tox-pop--inset"]},anchorOverrides={maxHeightFunction:expandable$1(),maxWidthFunction:expandable()},shouldUseInsetLayouts=position=>"node"===position,determineInsetLayout=(editor,contextbar,elem,data,bounds)=>{const selectionBounds=getSelectionBounds(editor),isSameAnchorElement=data.lastElement().exists((prev=>eq(elem,prev)));if(((editor,elem)=>{const rng=editor.selection.getRng(),leaf$1=leaf(SugarElement.fromDom(rng.startContainer),rng.startOffset);return rng.startContainer===rng.endContainer&&rng.startOffset===rng.endOffset-1&&eq(leaf$1.element,elem)})(editor,elem))return isSameAnchorElement?preserve:north;if(isSameAnchorElement)return((elem,position,f)=>{const currentPosition=getRaw(elem,"position");set$8(elem,"position",position);const result=f(elem);return currentPosition.each((pos=>set$8(elem,"position",pos))),result})(contextbar,data.getMode(),(()=>isVerticalOverlap(selectionBounds,box$1(contextbar),-20)&&!data.isReposition()?flip:preserve));return("fixed"===data.getMode()?bounds.y+get$b().top:bounds.y)+(get$d(contextbar)+12)<=selectionBounds.y?north:south},getAnchorSpec$2=(editor,mobile,data,position)=>{const smartInsetLayout=elem=>(anchor,element,bubbles,placee,bounds)=>({...determineInsetLayout(editor,placee,elem,data,bounds)({...anchor,y:bounds.y,height:bounds.height},element,bubbles,placee,bounds),alwaysFit:!0}),getInsetLayouts=elem=>shouldUseInsetLayouts(position)?[smartInsetLayout(elem)]:[];return mobile?{onLtr:elem=>[south$2,southeast$2,southwest$2,northeast$2,northwest$2,north$2].concat(getInsetLayouts(elem)),onRtl:elem=>[south$2,southwest$2,southeast$2,northwest$2,northeast$2,north$2].concat(getInsetLayouts(elem))}:{onLtr:elem=>[north$2,south$2,northeast$2,southeast$2,northwest$2,southwest$2].concat(getInsetLayouts(elem)),onRtl:elem=>[north$2,south$2,northwest$2,southwest$2,northeast$2,southeast$2].concat(getInsetLayouts(elem))}},matchTargetWith=(elem,candidates)=>{const ctxs=filter$2(candidates,(toolbarApi=>toolbarApi.predicate(elem.dom))),{pass:pass,fail:fail}=partition$3(ctxs,(t=>"contexttoolbar"===t.type));return{contextToolbars:pass,contextForms:fail}},matchStartNode=(elem,nodeCandidates,editorCandidates)=>{const nodeMatches=matchTargetWith(elem,nodeCandidates);if(nodeMatches.contextForms.length>0)return Optional.some({elem:elem,toolbars:[nodeMatches.contextForms[0]]});{const editorMatches=matchTargetWith(elem,editorCandidates);if(editorMatches.contextForms.length>0)return Optional.some({elem:elem,toolbars:[editorMatches.contextForms[0]]});if(nodeMatches.contextToolbars.length>0||editorMatches.contextToolbars.length>0){const toolbars=(toolbars=>{if(toolbars.length<=1)return toolbars;{const doesPositionExist=value=>exists(toolbars,(t=>t.position===value)),filterToolbarsByPosition=value=>filter$2(toolbars,(t=>t.position===value)),hasSelectionToolbars=doesPositionExist("selection"),hasNodeToolbars=doesPositionExist("node");if(hasSelectionToolbars||hasNodeToolbars){if(hasNodeToolbars&&hasSelectionToolbars){const nodeToolbars=filterToolbarsByPosition("node"),selectionToolbars=map$2(filterToolbarsByPosition("selection"),(t=>({...t,position:"node"})));return nodeToolbars.concat(selectionToolbars)}return filterToolbarsByPosition(hasSelectionToolbars?"selection":"node")}return filterToolbarsByPosition("line")}})(nodeMatches.contextToolbars.concat(editorMatches.contextToolbars));return Optional.some({elem:elem,toolbars:toolbars})}return Optional.none()}},matchAncestor=(isRoot,startNode,scopes)=>isRoot(startNode)?Optional.none():ancestor$2(startNode,(ancestorElem=>{if(isElement$1(ancestorElem)){const{contextToolbars:contextToolbars,contextForms:contextForms}=matchTargetWith(ancestorElem,scopes.inNodeScope),toolbars=contextForms.length>0?contextForms:(toolbars=>{if(toolbars.length<=1)return toolbars;{const findPosition=value=>find$5(toolbars,(t=>t.position===value)),basePosition=findPosition("selection").orThunk((()=>findPosition("node"))).orThunk((()=>findPosition("line"))).map((t=>t.position));return basePosition.fold((()=>[]),(pos=>filter$2(toolbars,(t=>t.position===pos))))}})(contextToolbars);return toolbars.length>0?Optional.some({elem:ancestorElem,toolbars:toolbars}):Optional.none()}return Optional.none()}),isRoot),categorise=(contextToolbars,navigate)=>{const forms={},inNodeScope=[],inEditorScope=[],formNavigators={},lookupTable={},registerForm=(key,toolbarSpec)=>{const contextForm=getOrDie(asRaw("ContextForm",contextFormSchema,toolbarSpec));forms[key]=contextForm,contextForm.launch.map((launch=>{formNavigators["form:"+key]={...toolbarSpec.launch,type:"contextformtogglebutton"===launch.type?"togglebutton":"button",onAction:()=>{navigate(contextForm)}}})),"editor"===contextForm.scope?inEditorScope.push(contextForm):inNodeScope.push(contextForm),lookupTable[key]=contextForm},registerToolbar=(key,toolbarSpec)=>{var spec;(spec=toolbarSpec,asRaw("ContextToolbar",contextToolbarSchema,spec)).each((contextToolbar=>{"editor"===toolbarSpec.scope?inEditorScope.push(contextToolbar):inNodeScope.push(contextToolbar),lookupTable[key]=contextToolbar}))},keys$1=keys(contextToolbars);return each$1(keys$1,(key=>{const toolbarApi=contextToolbars[key];"contextform"===toolbarApi.type?registerForm(key,toolbarApi):"contexttoolbar"===toolbarApi.type&&registerToolbar(key,toolbarApi)})),{forms:forms,inNodeScope:inNodeScope,inEditorScope:inEditorScope,lookupTable:lookupTable,formNavigators:formNavigators}},forwardSlideEvent=generate$6("forward-slide"),backSlideEvent=generate$6("backward-slide"),changeSlideEvent=generate$6("change-slide-event"),register$9=(editor,registryContextToolbars,sink,extras)=>{const backstage=extras.backstage,sharedBackstage=backstage.shared,isTouch=detect$2().deviceType.isTouch,lastElement=value$2(),lastTrigger=value$2(),lastContextPosition=value$2(),contextbar=build$1((spec=>{const stack=Cell([]);return InlineView.sketch({dom:{tag:"div",classes:["tox-pop"]},fireDismissalEventInstead:{event:"doNotDismissYet"},onShow:comp=>{stack.set([]),InlineView.getContent(comp).each((c=>{remove$6(c.element,"visibility")})),remove$2(comp.element,"tox-pop--resizing"),remove$6(comp.element,"width")},inlineBehaviours:derive$1([config("context-toolbar-events",[runOnSource(transitionend(),((comp,se)=>{"width"===se.event.raw.propertyName&&(remove$2(comp.element,"tox-pop--resizing"),remove$6(comp.element,"width"))})),run$1(changeSlideEvent,((comp,se)=>{const elem=comp.element;remove$6(elem,"width");const currentWidth=get$c(elem);InlineView.setContent(comp,se.event.contents),add$2(elem,"tox-pop--resizing");const newWidth=get$c(elem);set$8(elem,"width",currentWidth+"px"),InlineView.getContent(comp).each((newContents=>{se.event.focus.bind((f=>(focus$3(f),search(elem)))).orThunk((()=>(Keying.focusIn(newContents),active$1(getRootNode(elem)))))})),setTimeout((()=>{set$8(comp.element,"width",newWidth+"px")}),0)})),run$1(forwardSlideEvent,((comp,se)=>{InlineView.getContent(comp).each((oldContents=>{stack.set(stack.get().concat([{bar:oldContents,focus:active$1(getRootNode(comp.element))}]))})),emitWith(comp,changeSlideEvent,{contents:se.event.forwardContents,focus:Optional.none()})})),run$1(backSlideEvent,((comp,_se)=>{last$1(stack.get()).each((last=>{stack.set(stack.get().slice(0,stack.get().length-1)),emitWith(comp,changeSlideEvent,{contents:premade(last.bar),focus:last.focus})}))}))]),Keying.config({mode:"special",onEscape:comp=>last$1(stack.get()).fold((()=>spec.onEscape()),(_=>(emit(comp,backSlideEvent),Optional.some(!0))))})]),lazySink:()=>Result.value(spec.sink)})})({sink:sink,onEscape:()=>(editor.focus(),Optional.some(!0))})),getBounds=()=>{const position=lastContextPosition.get().getOr("node"),margin=shouldUseInsetLayouts(position)?1:0;return getContextToolbarBounds(editor,sharedBackstage,position,margin)},canLaunchToolbar=()=>!(editor.removed||isTouch()&&backstage.isContextMenuOpen()),shouldContextToolbarHide=()=>{if(canLaunchToolbar()){const contextToolbarBounds=getBounds(),anchorBounds=is$1(lastContextPosition.get(),"node")?((editor,lastElement)=>lastElement.filter((elem=>inBody(elem)&&isHTMLElement(elem))).map(absolute$2).getOrThunk((()=>getSelectionBounds(editor))))(editor,lastElement.get()):getSelectionBounds(editor);return contextToolbarBounds.height<=0||!isVerticalOverlap(anchorBounds,contextToolbarBounds,.01)}return!0},close=()=>{lastElement.clear(),lastTrigger.clear(),lastContextPosition.clear(),InlineView.hide(contextbar)},hideOrRepositionIfNecessary=()=>{if(InlineView.isOpen(contextbar)){const contextBarEle=contextbar.element;remove$6(contextBarEle,"display"),shouldContextToolbarHide()?set$8(contextBarEle,"display","none"):(lastTrigger.set(0),InlineView.reposition(contextbar))}},wrapInPopDialog=toolbarSpec=>({dom:{tag:"div",classes:["tox-pop__dialog"]},components:[toolbarSpec],behaviours:derive$1([Keying.config({mode:"acyclic"}),config("pop-dialog-wrap-events",[runOnAttached((comp=>{editor.shortcuts.add("ctrl+F9","focus statusbar",(()=>Keying.focusIn(comp)))})),runOnDetached((_comp=>{editor.shortcuts.remove("ctrl+F9")}))])])}),getScopes=cached((()=>categorise(registryContextToolbars,(toolbarApi=>{const alloySpec=buildToolbar([toolbarApi]);emitWith(contextbar,forwardSlideEvent,{forwardContents:wrapInPopDialog(alloySpec)})})))),buildToolbar=toolbars=>{const{buttons:buttons}=editor.ui.registry.getAll(),allButtons={...buttons,...getScopes().formNavigators},toolbarType=getToolbarMode(editor)===ToolbarMode$1.scrolling?ToolbarMode$1.scrolling:ToolbarMode$1.default,initGroups=flatten(map$2(toolbars,(ctx=>"contexttoolbar"===ctx.type?((allButtons,ctx)=>identifyButtons(editor,{buttons:allButtons,toolbar:ctx.items,allowToolbarGroups:!1},extras.backstage,Optional.some(["form:"])))(allButtons,ctx):((ctx,providers)=>ContextForm_buildInitGroups(ctx,providers))(ctx,sharedBackstage.providers))));return renderToolbar({type:toolbarType,uid:generate$6("context-toolbar"),initGroups:initGroups,onEscape:Optional.none,cyclicKeying:!0,providers:sharedBackstage.providers})},getAnchor=(position,element)=>{const anchorage="node"===position?sharedBackstage.anchors.node(element):sharedBackstage.anchors.cursor(),anchorLayout=((editor,position,isTouch,data)=>"line"===position?{bubble:nu$5(12,0,bubbleAlignments$1),layouts:{onLtr:()=>[east$2],onRtl:()=>[west$2]},overrides:anchorOverrides}:{bubble:nu$5(0,12,bubbleAlignments$1,1/12),layouts:getAnchorSpec$2(editor,isTouch,data,position),overrides:anchorOverrides})(editor,position,isTouch(),{lastElement:lastElement.get,isReposition:()=>is$1(lastTrigger.get(),0),getMode:()=>Positioning.getMode(sink)});return deepMerge(anchorage,anchorLayout)},launchContext=(toolbarApi,elem)=>{if(launchContextToolbar.cancel(),!canLaunchToolbar())return;const toolbarSpec=buildToolbar(toolbarApi),position=toolbarApi[0].position,anchor=getAnchor(position,elem);lastContextPosition.set(position),lastTrigger.set(1);const contextBarEle=contextbar.element;remove$6(contextBarEle,"display"),(elem=>is$1(lift2(elem,lastElement.get(),eq),!0))(elem)||(remove$2(contextBarEle,"tox-pop--transition"),Positioning.reset(sink,contextbar)),InlineView.showWithinBounds(contextbar,wrapInPopDialog(toolbarSpec),{anchor:anchor,transition:{classes:["tox-pop--transition"],mode:"placement"}},(()=>Optional.some(getBounds()))),elem.fold(lastElement.clear,lastElement.set),shouldContextToolbarHide()&&set$8(contextBarEle,"display","none")};let isDragging=!1;const launchContextToolbar=last((()=>{if(editor.hasFocus()&&!editor.removed&&!isDragging)if(has(contextbar.element,"tox-pop--transition"))launchContextToolbar.throttle();else{((scopes,editor)=>{const rootElem=SugarElement.fromDom(editor.getBody()),isRoot=elem=>eq(elem,rootElem),startNode=SugarElement.fromDom(editor.selection.getNode());return(startNode=>!isRoot(startNode)&&!contains(rootElem,startNode))(startNode)?Optional.none():matchStartNode(startNode,scopes.inNodeScope,scopes.inEditorScope).orThunk((()=>matchAncestor(isRoot,startNode,scopes)))})(getScopes(),editor).fold(close,(info=>{launchContext(info.toolbars,Optional.some(info.elem))}))}}),17);editor.on("init",(()=>{editor.on("remove",close),editor.on("ScrollContent ScrollWindow ObjectResized ResizeEditor longpress",hideOrRepositionIfNecessary),editor.on("click keyup focus SetContent",launchContextToolbar.throttle),editor.on("contexttoolbar-hide",close),editor.on("contexttoolbar-show",(e=>{const scopes=getScopes();get$g(scopes.lookupTable,e.toolbarKey).each((ctx=>{launchContext([ctx],someIf(e.target!==editor,e.target)),InlineView.getContent(contextbar).each(Keying.focusIn)}))})),editor.on("focusout",(_e=>{global$9.setEditorTimeout(editor,(()=>{search(sink.element).isNone()&&search(contextbar.element).isNone()&&close()}),0)})),editor.on("SwitchMode",(()=>{editor.mode.isReadOnly()&&close()})),editor.on("AfterProgressState",(event=>{event.state?close():editor.hasFocus()&&launchContextToolbar.throttle()})),editor.on("dragstart",(()=>{isDragging=!0})),editor.on("dragend drop",(()=>{isDragging=!1})),editor.on("NodeChange",(_e=>{search(contextbar.element).fold(launchContextToolbar.throttle,noop)}))}))},registerController=(editor,spec)=>{const getMenuItems=()=>{const options=spec.getOptions(editor),initial=spec.getCurrent(editor).map(spec.hash),current=value$2();return map$2(options,(value=>({type:"togglemenuitem",text:spec.display(value),onSetup:api=>{const setActive=active=>{active&&(current.on((oldApi=>oldApi.setActive(!1))),current.set(api)),api.setActive(active)};setActive(is$1(initial,spec.hash(value)));const unbindWatcher=spec.watcher(editor,value,setActive);return()=>{current.clear(),unbindWatcher()}},onAction:()=>spec.setCurrent(editor,value)})))};editor.ui.registry.addMenuButton(spec.name,{tooltip:spec.text,icon:spec.icon,fetch:callback=>callback(getMenuItems()),onSetup:spec.onToolbarSetup}),editor.ui.registry.addNestedMenuItem(spec.name,{type:"nestedmenuitem",text:spec.text,getSubmenuItems:getMenuItems,onSetup:spec.onMenuSetup})},lineHeightSpec=editor=>({name:"lineheight",text:"Line height",icon:"line-height",getOptions:getLineHeightFormats,hash:input=>((input,accepted)=>parse(input,accepted).map((({value:value,unit:unit})=>value+unit)))(input,["fixed","relative","empty"]).getOr(input),display:identity,watcher:(editor,value,callback)=>editor.formatter.formatChanged("lineheight",callback,!1,{value:value}).unbind,getCurrent:editor=>Optional.from(editor.queryCommandValue("LineHeight")),setCurrent:(editor,value)=>editor.execCommand("LineHeight",!1,value),onToolbarSetup:onSetupEditableToggle(editor),onMenuSetup:onSetupEditableToggle(editor)}),register$7=editor=>{registerController(editor,lineHeightSpec(editor)),(editor=>Optional.from(getContentLanguages(editor)).map((settings=>({name:"language",text:"Language",icon:"language",getOptions:constant$1(settings),hash:input=>isUndefined(input.customCode)?input.code:`${input.code}/${input.customCode}`,display:input=>input.title,watcher:(editor,value,callback)=>{var _a;return editor.formatter.formatChanged("lang",callback,!1,{value:value.code,customValue:null!==(_a=value.customCode)&&void 0!==_a?_a:null}).unbind},getCurrent:editor=>{const node=SugarElement.fromDom(editor.selection.getNode());return closest$4(node,(n=>Optional.some(n).filter(isElement$1).bind((ele=>getOpt(ele,"lang").map((code=>({code:code,customCode:getOpt(ele,"data-mce-lang").getOrUndefined(),title:""})))))))},setCurrent:(editor,lang)=>editor.execCommand("Lang",!1,lang),onToolbarSetup:api=>{const unbinder=unbindable();return api.setActive(editor.formatter.match("lang",{},void 0,!0)),unbinder.set(editor.formatter.formatChanged("lang",api.setActive,!0)),composeUnbinders(unbinder.clear,onSetupEditableToggle(editor)(api))},onMenuSetup:onSetupEditableToggle(editor)}))))(editor).each((spec=>registerController(editor,spec)))},register$6=(editor,backstage)=>{((editor,backstage)=>{const menuItems=createMenuItems(0,backstage,getSpec$4(editor));editor.ui.registry.addNestedMenuItem("align",{text:backstage.shared.providers.translate("Align"),onSetup:onSetupEditableToggle(editor),getSubmenuItems:()=>menuItems.items.validateItems(menuItems.getStyleItems())})})(editor,backstage),((editor,backstage)=>{const menuItems=createMenuItems(0,backstage,getSpec$2(editor));editor.ui.registry.addNestedMenuItem("fontfamily",{text:backstage.shared.providers.translate("Fonts"),onSetup:onSetupEditableToggle(editor),getSubmenuItems:()=>menuItems.items.validateItems(menuItems.getStyleItems())})})(editor,backstage),((editor,backstage)=>{const dataset={type:"advanced",...backstage.styles},menuItems=createMenuItems(0,backstage,getSpec(editor,dataset));editor.ui.registry.addNestedMenuItem("styles",{text:"Formats",onSetup:onSetupEditableToggle(editor),getSubmenuItems:()=>menuItems.items.validateItems(menuItems.getStyleItems())})})(editor,backstage),((editor,backstage)=>{const menuItems=createMenuItems(0,backstage,getSpec$3(editor));editor.ui.registry.addNestedMenuItem("blocks",{text:"Blocks",onSetup:onSetupEditableToggle(editor),getSubmenuItems:()=>menuItems.items.validateItems(menuItems.getStyleItems())})})(editor,backstage),((editor,backstage)=>{const menuItems=createMenuItems(0,backstage,getSpec$1(editor));editor.ui.registry.addNestedMenuItem("fontsize",{text:"Font sizes",onSetup:onSetupEditableToggle(editor),getSubmenuItems:()=>menuItems.items.validateItems(menuItems.getStyleItems())})})(editor,backstage)},onSetupOutdentState=editor=>onSetupEvent(editor,"NodeChange",(api=>{api.setEnabled(editor.queryCommandState("outdent")&&editor.selection.isEditable())})),register$5=editor=>{(editor=>{editor.ui.registry.addButton("outdent",{tooltip:"Decrease indent",icon:"outdent",onSetup:onSetupOutdentState(editor),onAction:onActionExecCommand(editor,"outdent")}),editor.ui.registry.addButton("indent",{tooltip:"Increase indent",icon:"indent",onSetup:onSetupEditableToggle(editor),onAction:onActionExecCommand(editor,"indent")})})(editor)},makeSetupHandler=(editor,pasteAsText)=>api=>{api.setActive(pasteAsText.get());const pastePlainTextToggleHandler=e=>{pasteAsText.set(e.state),api.setActive(e.state)};return editor.on("PastePlainTextToggle",pastePlainTextToggleHandler),composeUnbinders((()=>editor.off("PastePlainTextToggle",pastePlainTextToggleHandler)),onSetupEditableToggle(editor)(api))},onActionToggleFormat=(editor,fmt)=>()=>{editor.execCommand("mceToggleFormat",!1,fmt)},registerButtons$1=editor=>{(editor=>{global$1.each([{name:"bold",text:"Bold",icon:"bold"},{name:"italic",text:"Italic",icon:"italic"},{name:"underline",text:"Underline",icon:"underline"},{name:"strikethrough",text:"Strikethrough",icon:"strike-through"},{name:"subscript",text:"Subscript",icon:"subscript"},{name:"superscript",text:"Superscript",icon:"superscript"}],((btn,_idx)=>{editor.ui.registry.addToggleButton(btn.name,{tooltip:btn.text,icon:btn.icon,onSetup:onSetupStateToggle(editor,btn.name),onAction:onActionToggleFormat(editor,btn.name)})}));for(let i=1;i<=6;i++){const name="h"+i;editor.ui.registry.addToggleButton(name,{text:name.toUpperCase(),tooltip:"Heading "+i,onSetup:onSetupStateToggle(editor,name),onAction:onActionToggleFormat(editor,name)})}})(editor),(editor=>{global$1.each([{name:"copy",text:"Copy",action:"Copy",icon:"copy"},{name:"help",text:"Help",action:"mceHelp",icon:"help"},{name:"selectall",text:"Select all",action:"SelectAll",icon:"select-all"},{name:"newdocument",text:"New document",action:"mceNewDocument",icon:"new-document"},{name:"print",text:"Print",action:"mcePrint",icon:"print"}],(btn=>{editor.ui.registry.addButton(btn.name,{tooltip:btn.text,icon:btn.icon,onAction:onActionExecCommand(editor,btn.action)})})),global$1.each([{name:"cut",text:"Cut",action:"Cut",icon:"cut"},{name:"paste",text:"Paste",action:"Paste",icon:"paste"},{name:"removeformat",text:"Clear formatting",action:"RemoveFormat",icon:"remove-formatting"},{name:"remove",text:"Remove",action:"Delete",icon:"remove"},{name:"hr",text:"Horizontal line",action:"InsertHorizontalRule",icon:"horizontal-rule"}],(btn=>{editor.ui.registry.addButton(btn.name,{tooltip:btn.text,icon:btn.icon,onSetup:onSetupEditableToggle(editor),onAction:onActionExecCommand(editor,btn.action)})}))})(editor),(editor=>{global$1.each([{name:"blockquote",text:"Blockquote",action:"mceBlockQuote",icon:"quote"}],(btn=>{editor.ui.registry.addToggleButton(btn.name,{tooltip:btn.text,icon:btn.icon,onAction:onActionExecCommand(editor,btn.action),onSetup:onSetupStateToggle(editor,btn.name)})}))})(editor)},register$3=editor=>{registerButtons$1(editor),(editor=>{global$1.each([{name:"newdocument",text:"New document",action:"mceNewDocument",icon:"new-document"},{name:"copy",text:"Copy",action:"Copy",icon:"copy",shortcut:"Meta+C"},{name:"selectall",text:"Select all",action:"SelectAll",icon:"select-all",shortcut:"Meta+A"},{name:"print",text:"Print...",action:"mcePrint",icon:"print",shortcut:"Meta+P"}],(menuitem=>{editor.ui.registry.addMenuItem(menuitem.name,{text:menuitem.text,icon:menuitem.icon,shortcut:menuitem.shortcut,onAction:onActionExecCommand(editor,menuitem.action)})})),global$1.each([{name:"bold",text:"Bold",action:"Bold",icon:"bold",shortcut:"Meta+B"},{name:"italic",text:"Italic",action:"Italic",icon:"italic",shortcut:"Meta+I"},{name:"underline",text:"Underline",action:"Underline",icon:"underline",shortcut:"Meta+U"},{name:"strikethrough",text:"Strikethrough",action:"Strikethrough",icon:"strike-through"},{name:"subscript",text:"Subscript",action:"Subscript",icon:"subscript"},{name:"superscript",text:"Superscript",action:"Superscript",icon:"superscript"},{name:"removeformat",text:"Clear formatting",action:"RemoveFormat",icon:"remove-formatting"},{name:"cut",text:"Cut",action:"Cut",icon:"cut",shortcut:"Meta+X"},{name:"paste",text:"Paste",action:"Paste",icon:"paste",shortcut:"Meta+V"},{name:"hr",text:"Horizontal line",action:"InsertHorizontalRule",icon:"horizontal-rule"}],(menuitem=>{editor.ui.registry.addMenuItem(menuitem.name,{text:menuitem.text,icon:menuitem.icon,shortcut:menuitem.shortcut,onSetup:onSetupEditableToggle(editor),onAction:onActionExecCommand(editor,menuitem.action)})})),editor.ui.registry.addMenuItem("codeformat",{text:"Code",icon:"sourcecode",onSetup:onSetupEditableToggle(editor),onAction:onActionToggleFormat(editor,"code")})})(editor)},onSetupUndoRedoState=(editor,type)=>onSetupEvent(editor,"Undo Redo AddUndo TypingUndo ClearUndos SwitchMode",(api=>{api.setEnabled(!editor.mode.isReadOnly()&&editor.undoManager[type]())})),register$2=editor=>{(editor=>{editor.ui.registry.addMenuItem("undo",{text:"Undo",icon:"undo",shortcut:"Meta+Z",onSetup:onSetupUndoRedoState(editor,"hasUndo"),onAction:onActionExecCommand(editor,"undo")}),editor.ui.registry.addMenuItem("redo",{text:"Redo",icon:"redo",shortcut:"Meta+Y",onSetup:onSetupUndoRedoState(editor,"hasRedo"),onAction:onActionExecCommand(editor,"redo")})})(editor),(editor=>{editor.ui.registry.addButton("undo",{tooltip:"Undo",icon:"undo",enabled:!1,onSetup:onSetupUndoRedoState(editor,"hasUndo"),onAction:onActionExecCommand(editor,"undo")}),editor.ui.registry.addButton("redo",{tooltip:"Redo",icon:"redo",enabled:!1,onSetup:onSetupUndoRedoState(editor,"hasRedo"),onAction:onActionExecCommand(editor,"redo")})})(editor)},onSetupVisualAidState=editor=>onSetupEvent(editor,"VisualAid",(api=>{api.setActive(editor.hasVisual)})),register$1=editor=>{(editor=>{editor.ui.registry.addButton("visualaid",{tooltip:"Visual aids",text:"Visual aids",onAction:onActionExecCommand(editor,"mceToggleVisualAid")})})(editor),(editor=>{editor.ui.registry.addToggleMenuItem("visualaid",{text:"Visual aids",onSetup:onSetupVisualAidState(editor),onAction:onActionExecCommand(editor,"mceToggleVisualAid")})})(editor)},setup$6=(editor,backstage)=>{(editor=>{each$1([{name:"alignleft",text:"Align left",cmd:"JustifyLeft",icon:"align-left"},{name:"aligncenter",text:"Align center",cmd:"JustifyCenter",icon:"align-center"},{name:"alignright",text:"Align right",cmd:"JustifyRight",icon:"align-right"},{name:"alignjustify",text:"Justify",cmd:"JustifyFull",icon:"align-justify"}],(item=>{editor.ui.registry.addToggleButton(item.name,{tooltip:item.text,icon:item.icon,onAction:onActionExecCommand(editor,item.cmd),onSetup:onSetupStateToggle(editor,item.name)})})),editor.ui.registry.addButton("alignnone",{tooltip:"No alignment",icon:"align-none",onSetup:onSetupEditableToggle(editor),onAction:onActionExecCommand(editor,"JustifyNone")})})(editor),register$3(editor),register$6(editor,backstage),register$2(editor),(editor=>{(editor=>{editor.addCommand("mceApplyTextcolor",((format,value)=>{((editor,format,value)=>{editor.undoManager.transact((()=>{editor.focus(),editor.formatter.apply(format,{value:value}),editor.nodeChanged()}))})(editor,format,value)})),editor.addCommand("mceRemoveTextcolor",(format=>{((editor,format)=>{editor.undoManager.transact((()=>{editor.focus(),editor.formatter.remove(format,{value:null},void 0,!0),editor.nodeChanged()}))})(editor,format)}))})(editor);const fallbackColorForeground=getDefaultForegroundColor(editor),fallbackColorBackground=getDefaultBackgroundColor(editor),lastForeColor=Cell(fallbackColorForeground),lastBackColor=Cell(fallbackColorBackground);registerTextColorButton(editor,"forecolor","forecolor",lastForeColor),registerTextColorButton(editor,"backcolor","hilitecolor",lastBackColor),registerTextColorMenuItem(editor,"forecolor","forecolor","Text color",lastForeColor),registerTextColorMenuItem(editor,"backcolor","hilitecolor","Background color",lastBackColor)})(editor),register$1(editor),register$5(editor),register$7(editor),(editor=>{const pasteAsText=Cell(getPasteAsText(editor)),onAction=()=>editor.execCommand("mceTogglePlainTextPaste");editor.ui.registry.addToggleButton("pastetext",{active:!1,icon:"paste-text",tooltip:"Paste as text",onAction:onAction,onSetup:makeSetupHandler(editor,pasteAsText)}),editor.ui.registry.addToggleMenuItem("pastetext",{text:"Paste as text",icon:"paste-text",onAction:onAction,onSetup:makeSetupHandler(editor,pasteAsText)})})(editor)},patchPipeConfig=config=>isString(config)?config.split(/[ ,]/):config,option=name=>editor=>editor.options.get(name),shouldNeverUseNative=option("contextmenu_never_use_native"),getAvoidOverlapSelector=option("contextmenu_avoid_overlap"),getContextMenu=editor=>{const contextMenus=editor.ui.registry.getAll().contextMenus,contextMenu=editor.options.get("contextmenu");return editor.options.isSet("contextmenu")?contextMenu:filter$2(contextMenu,(item=>has$2(contextMenus,item)))},nu=(x,y)=>({type:"makeshift",x:x,y:y}),isTouchEvent$1=e=>"longpress"===e.type||0===e.type.indexOf("touch"),transposeContentAreaContainer=(element,pos)=>{const containerPos=global$7.DOM.getPos(element);return((pos,dx,dy)=>nu(pos.x+dx,pos.y+dy))(pos,containerPos.x,containerPos.y)},getPointAnchor=(editor,e)=>"contextmenu"===e.type||"longpress"===e.type?editor.inline?(e=>{if(isTouchEvent$1(e)){const touch=e.touches[0];return nu(touch.pageX,touch.pageY)}return nu(e.pageX,e.pageY)})(e):transposeContentAreaContainer(editor.getContentAreaContainer(),(e=>{if(isTouchEvent$1(e)){const touch=e.touches[0];return nu(touch.clientX,touch.clientY)}return nu(e.clientX,e.clientY)})(e)):getSelectionAnchor(editor),getSelectionAnchor=editor=>({type:"selection",root:SugarElement.fromDom(editor.selection.getNode())}),getAnchorSpec$1=(editor,e,anchorType)=>{switch(anchorType){case"node":return(editor=>({type:"node",node:Optional.some(SugarElement.fromDom(editor.selection.getNode())),root:SugarElement.fromDom(editor.getBody())}))(editor);case"point":return getPointAnchor(editor,e);case"selection":return getSelectionAnchor(editor)}},initAndShow$1=(editor,e,buildMenu,backstage,contextmenu,anchorType)=>{const items=buildMenu(),anchorSpec=getAnchorSpec$1(editor,e,anchorType);build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,{isHorizontalMenu:!1,search:Optional.none()}).map((menuData=>{e.preventDefault(),InlineView.showMenuAt(contextmenu,{anchor:anchorSpec},{menu:{markers:markers("normal")},data:menuData})}))},layouts={onLtr:()=>[south$2,southeast$2,southwest$2,northeast$2,northwest$2,north$2,north,south,northeast,southeast,northwest,southwest],onRtl:()=>[south$2,southwest$2,southeast$2,northwest$2,northeast$2,north$2,north,south,northwest,southwest,northeast,southeast]},bubbleAlignments={valignCentre:[],alignCentre:[],alignLeft:["tox-pop--align-left"],alignRight:["tox-pop--align-right"],right:["tox-pop--right"],left:["tox-pop--left"],bottom:["tox-pop--bottom"],top:["tox-pop--top"]},show=(editor,e,items,backstage,contextmenu,anchorType,highlightImmediately)=>{const anchorSpec=((editor,e,anchorType)=>{const anchorSpec=getAnchorSpec$1(editor,e,anchorType);return{bubble:nu$5(0,"point"===anchorType?12:0,bubbleAlignments),layouts:layouts,overrides:{maxWidthFunction:expandable(),maxHeightFunction:expandable$1()},...anchorSpec}})(editor,e,anchorType);build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,{isHorizontalMenu:!0,search:Optional.none()}).map((menuData=>{e.preventDefault();const highlightOnOpen=highlightImmediately?HighlightOnOpen.HighlightMenuAndItem:HighlightOnOpen.HighlightNone;InlineView.showMenuWithinBounds(contextmenu,{anchor:anchorSpec},{menu:{markers:markers("normal"),highlightOnOpen:highlightOnOpen},data:menuData,type:"horizontal"},(()=>Optional.some(getContextToolbarBounds(editor,backstage.shared,"node"===anchorType?"node":"selection")))),editor.dispatch("contexttoolbar-hide")}))},initAndShow=(editor,e,buildMenu,backstage,contextmenu,anchorType)=>{const detection=detect$2(),isiOS=detection.os.isiOS(),isMacOS=detection.os.isMacOS(),isAndroid=detection.os.isAndroid(),isTouch=detection.deviceType.isTouch(),open=()=>{const items=buildMenu();show(editor,e,items,backstage,contextmenu,anchorType,!(isAndroid||isiOS||isMacOS&&isTouch))};if((isMacOS||isiOS)&&"node"!==anchorType){const openiOS=()=>{(editor=>{const originalSelection=editor.selection.getRng(),selectionReset=()=>{global$9.setEditorTimeout(editor,(()=>{editor.selection.setRng(originalSelection)}),10),unbindEventListeners()};editor.once("touchend",selectionReset);const preventMousedown=e=>{e.preventDefault(),e.stopImmediatePropagation()};editor.on("mousedown",preventMousedown,!0);const clearSelectionReset=()=>unbindEventListeners();editor.once("longpresscancel",clearSelectionReset);const unbindEventListeners=()=>{editor.off("touchend",selectionReset),editor.off("longpresscancel",clearSelectionReset),editor.off("mousedown",preventMousedown)}})(editor),open()};((editor,e)=>{const selection=editor.selection;if(selection.isCollapsed()||e.touches.length<1)return!1;{const touch=e.touches[0],rng=selection.getRng();return getFirstRect(editor.getWin(),SimSelection.domRange(rng)).exists((rngRect=>rngRect.left<=touch.clientX&&rngRect.right>=touch.clientX&&rngRect.top<=touch.clientY&&rngRect.bottom>=touch.clientY))}})(editor,e)?openiOS():(editor.once("selectionchange",openiOS),editor.once("touchend",(()=>editor.off("selectionchange",openiOS))))}else open()},isSeparator=item=>isString(item)?"|"===item:"separator"===item.type,separator={type:"separator"},makeContextItem=item=>{const commonMenuItem=item=>({text:item.text,icon:item.icon,enabled:item.enabled,shortcut:item.shortcut});if(isString(item))return item;switch(item.type){case"separator":return separator;case"submenu":return{type:"nestedmenuitem",...commonMenuItem(item),getSubmenuItems:()=>{const items=item.getSubmenuItems();return isString(items)?items:map$2(items,makeContextItem)}};default:const commonItem=item;return{type:"menuitem",...commonMenuItem(commonItem),onAction:noarg(commonItem.onAction)}}},addContextMenuGroup=(xs,groupItems)=>{if(0===groupItems.length)return xs;const lastMenuItem=last$1(xs).filter((item=>!isSeparator(item))),before=lastMenuItem.fold((()=>[]),(_=>[separator]));return xs.concat(before).concat(groupItems).concat([separator])},isTriggeredByKeyboard=(editor,e)=>!(e=>"longpress"===e.type||has$2(e,"touches"))(e)&&(2!==e.button||e.target===editor.getBody()&&""===e.pointerType),getSelectedElement=(editor,e)=>isTriggeredByKeyboard(editor,e)?editor.selection.getStart(!0):e.target,setup$5=(editor,lazySink,backstage)=>{const isTouch=detect$2().deviceType.isTouch,contextmenu=build$1(InlineView.sketch({dom:{tag:"div"},lazySink:lazySink,onEscape:()=>editor.focus(),onShow:()=>backstage.setContextMenuState(!0),onHide:()=>backstage.setContextMenuState(!1),fireDismissalEventInstead:{},inlineBehaviours:derive$1([config("dismissContextMenu",[run$1(dismissRequested(),((comp,_se)=>{Sandboxing.close(comp),editor.focus()}))])])})),hideContextMenu=()=>InlineView.hide(contextmenu),showContextMenu=e=>{if(shouldNeverUseNative(editor)&&e.preventDefault(),((editor,e)=>e.ctrlKey&&!shouldNeverUseNative(editor))(editor,e)||(editor=>0===getContextMenu(editor).length)(editor))return;const anchorType=((editor,e)=>{const selector=getAvoidOverlapSelector(editor),anchorType=isTriggeredByKeyboard(editor,e)?"selection":"point";if(isNotEmpty(selector)){const target=getSelectedElement(editor,e);return closest(SugarElement.fromDom(target),selector)?"node":anchorType}return anchorType})(editor,e);(isTouch()?initAndShow:initAndShow$1)(editor,e,(()=>{const selectedElement=getSelectedElement(editor,e),registry=editor.ui.registry.getAll(),menuConfig=getContextMenu(editor);return((contextMenus,menuConfig,selectedElement)=>{const sections=foldl(menuConfig,((acc,name)=>get$g(contextMenus,name.toLowerCase()).map((menu=>{const items=menu.update(selectedElement);if(isString(items)&&isNotEmpty(trim$1(items)))return addContextMenuGroup(acc,items.split(" "));if(isArray(items)&&items.length>0){const allItems=map$2(items,makeContextItem);return addContextMenuGroup(acc,allItems)}return acc})).getOrThunk((()=>acc.concat([name])))),[]);return sections.length>0&&isSeparator(sections[sections.length-1])&&sections.pop(),sections})(registry.contextMenus,menuConfig,selectedElement)}),backstage,contextmenu,anchorType)};editor.on("init",(()=>{const hideEvents="ResizeEditor ScrollContent ScrollWindow longpresscancel"+(isTouch()?"":" ResizeWindow");editor.on(hideEvents,hideContextMenu),editor.on("longpress contextmenu",showContextMenu)}))},adt=Adt_generate([{offset:["x","y"]},{absolute:["x","y"]},{fixed:["x","y"]}]),subtract=change=>point=>point.translate(-change.left,-change.top),add=change=>point=>point.translate(change.left,change.top),transform=changes=>(x,y)=>foldl(changes,((rest,f)=>f(rest)),SugarPosition(x,y)),asFixed=(coord,scroll,origin)=>coord.fold(transform([add(origin),subtract(scroll)]),transform([subtract(scroll)]),transform([])),asAbsolute=(coord,scroll,origin)=>coord.fold(transform([add(origin)]),transform([]),transform([add(scroll)])),asOffset=(coord,scroll,origin)=>coord.fold(transform([]),transform([subtract(origin)]),transform([add(scroll),subtract(origin)])),toStyles=(coord,scroll,origin)=>{const stylesOpt=coord.fold(((x,y)=>({position:Optional.some("absolute"),left:Optional.some(x+"px"),top:Optional.some(y+"px")})),((x,y)=>({position:Optional.some("absolute"),left:Optional.some(x-origin.left+"px"),top:Optional.some(y-origin.top+"px")})),((x,y)=>({position:Optional.some("fixed"),left:Optional.some(x+"px"),top:Optional.some(y+"px")})));return{right:Optional.none(),bottom:Optional.none(),...stylesOpt}},absorb=(partialCoord,originalCoord,scroll,origin)=>{const absorbOne=(stencil,nu)=>(optX,optY)=>{const original=stencil(originalCoord,scroll,origin);return nu(optX.getOr(original.left),optY.getOr(original.top))};return partialCoord.fold(absorbOne(asOffset,offset),absorbOne(asAbsolute,absolute),absorbOne(asFixed,fixed))},offset=adt.offset,absolute=adt.absolute,fixed=adt.fixed,parseAttrToInt=(element,name)=>{const value=get$f(element,name);return isUndefined(value)?NaN:parseInt(value,10)},getCoords=(component,snapInfo,coord,delta)=>((component,snapsInfo)=>{const element=component.element,x=parseAttrToInt(element,snapsInfo.leftAttr),y=parseAttrToInt(element,snapsInfo.topAttr);return isNaN(x)||isNaN(y)?Optional.none():Optional.some(SugarPosition(x,y))})(component,snapInfo).fold((()=>coord),(fixed$1=>fixed(fixed$1.left+delta.left,fixed$1.top+delta.top))),moveOrSnap=(component,snapInfo,coord,delta,scroll,origin)=>{const newCoord=getCoords(component,snapInfo,coord,delta),snap=snapInfo.mustSnap?findClosestSnap(component,snapInfo,newCoord,scroll,origin):findSnap(component,snapInfo,newCoord,scroll,origin),fixedCoord=asFixed(newCoord,scroll,origin);return((component,snapsInfo,pt)=>{const element=component.element;set$9(element,snapsInfo.leftAttr,pt.left+"px"),set$9(element,snapsInfo.topAttr,pt.top+"px")})(component,snapInfo,fixedCoord),snap.fold((()=>({coord:fixed(fixedCoord.left,fixedCoord.top),extra:Optional.none()})),(spanned=>({coord:spanned.output,extra:spanned.extra})))},stopDrag=(component,snapInfo)=>{((component,snapsInfo)=>{const element=component.element;remove$7(element,snapsInfo.leftAttr),remove$7(element,snapsInfo.topAttr)})(component,snapInfo)},findMatchingSnap=(snaps,newCoord,scroll,origin)=>findMap(snaps,(snap=>{const sensor=snap.sensor,inRange=((coord1,coord2,xRange,yRange,scroll,origin)=>{const a1=asAbsolute(coord1,scroll,origin),a2=asAbsolute(coord2,scroll,origin);return Math.abs(a1.left-a2.left)<=xRange&&Math.abs(a1.top-a2.top)<=yRange})(newCoord,sensor,snap.range.left,snap.range.top,scroll,origin);return inRange?Optional.some({output:absorb(snap.output,newCoord,scroll,origin),extra:snap.extra}):Optional.none()})),findClosestSnap=(component,snapInfo,newCoord,scroll,origin)=>{const snaps=snapInfo.getSnapPoints(component);return findMatchingSnap(snaps,newCoord,scroll,origin).orThunk((()=>{const bestSnap=foldl(snaps,((acc,snap)=>{const sensor=snap.sensor,deltas=((coord1,coord2,xRange,yRange,scroll,origin)=>{const a1=asAbsolute(coord1,scroll,origin),a2=asAbsolute(coord2,scroll,origin),left=Math.abs(a1.left-a2.left),top=Math.abs(a1.top-a2.top);return SugarPosition(left,top)})(newCoord,sensor,snap.range.left,snap.range.top,scroll,origin);return acc.deltas.fold((()=>({deltas:Optional.some(deltas),snap:Optional.some(snap)})),(bestDeltas=>(deltas.left+deltas.top)/2<=(bestDeltas.left+bestDeltas.top)/2?{deltas:Optional.some(deltas),snap:Optional.some(snap)}:acc))}),{deltas:Optional.none(),snap:Optional.none()});return bestSnap.snap.map((snap=>({output:absorb(snap.output,newCoord,scroll,origin),extra:snap.extra})))}))},findSnap=(component,snapInfo,newCoord,scroll,origin)=>{const snaps=snapInfo.getSnapPoints(component);return findMatchingSnap(snaps,newCoord,scroll,origin)};var DraggingApis=Object.freeze({__proto__:null,snapTo:(component,dragConfig,_state,snap)=>{const target=dragConfig.getTarget(component.element);if(dragConfig.repositionTarget){const doc=owner$4(component.element),scroll=get$b(doc),origin=getOrigin(target),snapPin=((snap,scroll,origin)=>({coord:absorb(snap.output,snap.output,scroll,origin),extra:snap.extra}))(snap,scroll,origin),styles=toStyles(snapPin.coord,0,origin);setOptions(target,styles)}}});const instigate=(anyComponent,blocker)=>{anyComponent.getSystem().addToGui(blocker),(blocker=>{parent(blocker.element).filter(isElement$1).each((root=>{getRaw(root,"z-index").each((zindex=>{set$9(root,"data-initial-z-index",zindex)})),set$8(root,"z-index",get$e(blocker.element,"z-index"))}))})(blocker)},discard=blocker=>{(blocker=>{parent(blocker.element).filter(isElement$1).each((root=>{getOpt(root,"data-initial-z-index").fold((()=>remove$6(root,"z-index")),(zIndex=>set$8(root,"z-index",zIndex))),remove$7(root,"data-initial-z-index")}))})(blocker),blocker.getSystem().removeFromGui(blocker)},createComponent=(component,blockerClass,blockerEvents)=>component.getSystem().build(Container.sketch({dom:{styles:{left:"0px",top:"0px",width:"100%",height:"100%",position:"fixed","z-index":"1000000000000000"},classes:[blockerClass]},events:blockerEvents}));var SnapSchema=optionObjOf("snaps",[required$1("getSnapPoints"),onHandler("onSensor"),required$1("leftAttr"),required$1("topAttr"),defaulted("lazyViewport",win),defaulted("mustSnap",!1)]);const schema$6=[defaulted("useFixed",never),required$1("blockerClass"),defaulted("getTarget",identity),defaulted("onDrag",noop),defaulted("repositionTarget",!0),defaulted("onDrop",noop),defaultedFunction("getBounds",win),SnapSchema],getCurrentCoord=target=>((oa,ob,oc,f)=>oa.isSome()&&ob.isSome()&&oc.isSome()?Optional.some(f(oa.getOrDie(),ob.getOrDie(),oc.getOrDie())):Optional.none())(getRaw(target,"left"),getRaw(target,"top"),getRaw(target,"position"),((left,top,position)=>("fixed"===position?fixed:offset)(parseInt(left,10),parseInt(top,10)))).getOrThunk((()=>{const location=absolute$3(target);return absolute(location.left,location.top)})),calcNewCoord=(component,optSnaps,currentCoord,scroll,origin,delta,startData)=>((component,coords,scroll,origin,startData)=>{const bounds=startData.bounds,absoluteCoord=asAbsolute(coords,scroll,origin),newX=clamp(absoluteCoord.left,bounds.x,bounds.x+bounds.width-startData.width),newY=clamp(absoluteCoord.top,bounds.y,bounds.y+bounds.height-startData.height),newCoords=absolute(newX,newY);return coords.fold((()=>{const offset$1=asOffset(newCoords,scroll,origin);return offset(offset$1.left,offset$1.top)}),constant$1(newCoords),(()=>{const fixed$1=asFixed(newCoords,scroll,origin);return fixed(fixed$1.left,fixed$1.top)}))})(0,optSnaps.fold((()=>{const translated=(coord=currentCoord,deltaX=delta.left,deltaY=delta.top,coord.fold(((x,y)=>offset(x+deltaX,y+deltaY)),((x,y)=>absolute(x+deltaX,y+deltaY)),((x,y)=>fixed(x+deltaX,y+deltaY))));var coord,deltaX,deltaY;const fixedCoord=asFixed(translated,scroll,origin);return fixed(fixedCoord.left,fixedCoord.top)}),(snapInfo=>{const snapping=moveOrSnap(component,snapInfo,currentCoord,delta,scroll,origin);return snapping.extra.each((extra=>{snapInfo.onSensor(component,extra)})),snapping.coord})),scroll,origin,startData),calcStartData=(dragConfig,comp)=>({bounds:dragConfig.getBounds(),height:getOuter$2(comp.element),width:getOuter$1(comp.element)}),move=(component,dragConfig,dragState,dragMode,event)=>{const delta=dragState.update(dragMode,event),dragStartData=dragState.getStartData().getOrThunk((()=>calcStartData(dragConfig,component)));delta.each((dlt=>{((component,dragConfig,startData,delta)=>{const target=dragConfig.getTarget(component.element);if(dragConfig.repositionTarget){const doc=owner$4(component.element),scroll=get$b(doc),origin=getOrigin(target),currentCoord=getCurrentCoord(target),newCoord=calcNewCoord(component,dragConfig.snaps,currentCoord,scroll,origin,delta,startData),styles=toStyles(newCoord,0,origin);setOptions(target,styles)}dragConfig.onDrag(component,target,delta)})(component,dragConfig,dragStartData,dlt)}))},stop=(component,blocker,dragConfig,dragState)=>{blocker.each(discard),dragConfig.snaps.each((snapInfo=>{stopDrag(component,snapInfo)}));const target=dragConfig.getTarget(component.element);dragState.reset(),dragConfig.onDrop(component,target)},handlers=events=>(dragConfig,dragState)=>{const updateStartState=comp=>{dragState.setStartData(calcStartData(dragConfig,comp))};return derive$2([run$1(windowScroll(),(comp=>{dragState.getStartData().each((()=>updateStartState(comp)))})),...events(dragConfig,dragState,updateStartState)])};var MouseData=Object.freeze({__proto__:null,getData:event=>Optional.from(SugarPosition(event.x,event.y)),getDelta:(old,nu)=>SugarPosition(nu.left-old.left,nu.top-old.top)});const events$3=(dragConfig,dragState,updateStartState)=>[run$1(mousedown(),((component,simulatedEvent)=>{if(0!==simulatedEvent.event.raw.button)return;simulatedEvent.stop();const stop$1=()=>stop(component,Optional.some(blocker),dragConfig,dragState),delayDrop=DelayedFunction(stop$1,200),dragApi={drop:stop$1,delayDrop:delayDrop.schedule,forceDrop:stop$1,move:event=>{delayDrop.cancel(),move(component,dragConfig,dragState,MouseData,event)}},blocker=createComponent(component,dragConfig.blockerClass,(dragApi=>derive$2([run$1(mousedown(),dragApi.forceDrop),run$1(mouseup(),dragApi.drop),run$1(mousemove(),((comp,simulatedEvent)=>{dragApi.move(simulatedEvent.event)})),run$1(mouseout(),dragApi.delayDrop)]))(dragApi));updateStartState(component),instigate(component,blocker)}))],schema$5=[...schema$6,output$1("dragger",{handlers:handlers(events$3)})];var TouchData=Object.freeze({__proto__:null,getData:event=>{const touches=event.raw.touches;return 1===touches.length?(touches=>{const touch=touches[0];return Optional.some(SugarPosition(touch.clientX,touch.clientY))})(touches):Optional.none()},getDelta:(old,nu)=>SugarPosition(nu.left-old.left,nu.top-old.top)});const events$2=(dragConfig,dragState,updateStartState)=>{const blockerSingleton=value$2(),stopBlocking=component=>{stop(component,blockerSingleton.get(),dragConfig,dragState),blockerSingleton.clear()};return[run$1(touchstart(),((component,simulatedEvent)=>{simulatedEvent.stop();const stop=()=>stopBlocking(component),dragApi={drop:stop,delayDrop:noop,forceDrop:stop,move:event=>{move(component,dragConfig,dragState,TouchData,event)}},blocker=createComponent(component,dragConfig.blockerClass,(dragApi=>derive$2([run$1(touchstart(),dragApi.forceDrop),run$1(touchend(),dragApi.drop),run$1(touchcancel(),dragApi.drop),run$1(touchmove(),((comp,simulatedEvent)=>{dragApi.move(simulatedEvent.event)}))]))(dragApi));blockerSingleton.set(blocker);updateStartState(component),instigate(component,blocker)})),run$1(touchmove(),((component,simulatedEvent)=>{simulatedEvent.stop(),move(component,dragConfig,dragState,TouchData,simulatedEvent.event)})),run$1(touchend(),((component,simulatedEvent)=>{simulatedEvent.stop(),stopBlocking(component)})),run$1(touchcancel(),stopBlocking)]},mouse=schema$5,touch=[...schema$6,output$1("dragger",{handlers:handlers(events$2)})],mouseOrTouch=[...schema$6,output$1("dragger",{handlers:handlers(((dragConfig,dragState,updateStartState)=>[...events$3(dragConfig,dragState,updateStartState),...events$2(dragConfig,dragState,updateStartState)]))})];var DraggingBranches=Object.freeze({__proto__:null,mouse:mouse,touch:touch,mouseOrTouch:mouseOrTouch});var DragState=Object.freeze({__proto__:null,init:()=>{let previous=Optional.none(),startData=Optional.none();const readState=constant$1({});return nu$8({readState:readState,reset:()=>{previous=Optional.none(),startData=Optional.none()},update:(mode,dragEvent)=>mode.getData(dragEvent).bind((nuData=>((mode,nu)=>{const result=previous.map((old=>mode.getDelta(old,nu)));return previous=Optional.some(nu),result})(mode,nuData))),getStartData:()=>startData,setStartData:data=>{startData=Optional.some(data)}})}});const Dragging=createModes({branchKey:"mode",branches:DraggingBranches,name:"dragging",active:{events:(dragConfig,dragState)=>dragConfig.dragger.handlers(dragConfig,dragState)},extra:{snap:sConfig=>({sensor:sConfig.sensor,range:sConfig.range,output:sConfig.output,extra:Optional.from(sConfig.extra)})},state:DragState,apis:DraggingApis}),calcSnap=(selectorOpt,td,x,y,width,height)=>selectorOpt.fold((()=>Dragging.snap({sensor:absolute(x-20,y-20),range:SugarPosition(width,height),output:absolute(Optional.some(x),Optional.some(y)),extra:{td:td}})),(selectorHandle=>{const sensorLeft=x-20,sensorTop=y-20,rect=selectorHandle.element.dom.getBoundingClientRect();return Dragging.snap({sensor:absolute(sensorLeft,sensorTop),range:SugarPosition(40,40),output:absolute(Optional.some(x-rect.width/2),Optional.some(y-rect.height/2)),extra:{td:td}})})),getSnapsConfig=(getSnapPoints,cell,onChange)=>({getSnapPoints:getSnapPoints,leftAttr:"data-drag-left",topAttr:"data-drag-top",onSensor:(component,extra)=>{const td=extra.td;((cellOpt,td)=>cellOpt.exists((currentTd=>eq(currentTd,td))))(cell.get(),td)||(cell.set(td),onChange(td))},mustSnap:!0}),createSelector=snaps=>record(Button.sketch({dom:{tag:"div",classes:["tox-selector"]},buttonBehaviours:derive$1([Dragging.config({mode:"mouseOrTouch",blockerClass:"blocker",snaps:snaps}),Unselecting.config({})]),eventOrder:{mousedown:["dragging","alloy.base.behaviour"],touchstart:["dragging","alloy.base.behaviour"]}})),setup$4=(editor,sink)=>{const tlTds=Cell([]),brTds=Cell([]),isVisible=Cell(!1),startCell=value$2(),finishCell=value$2(),getTopLeftSnap=td=>{const box=absolute$2(td);return calcSnap(memTopLeft.getOpt(sink),td,box.x,box.y,box.width,box.height)},getBottomRightSnap=td=>{const box=absolute$2(td);return calcSnap(memBottomRight.getOpt(sink),td,box.right,box.bottom,box.width,box.height)},topLeftSnaps=getSnapsConfig((()=>map$2(tlTds.get(),(td=>getTopLeftSnap(td)))),startCell,(start=>{finishCell.get().each((finish=>{editor.dispatch("TableSelectorChange",{start:start,finish:finish})}))})),bottomRightSnaps=getSnapsConfig((()=>map$2(brTds.get(),(td=>getBottomRightSnap(td)))),finishCell,(finish=>{startCell.get().each((start=>{editor.dispatch("TableSelectorChange",{start:start,finish:finish})}))})),memTopLeft=createSelector(topLeftSnaps),memBottomRight=createSelector(bottomRightSnaps),topLeft=build$1(memTopLeft.asSpec()),bottomRight=build$1(memBottomRight.asSpec()),snapTo=(selector,cell,getSnapConfig,pos)=>{const snap=getSnapConfig(cell);Dragging.snapTo(selector,snap);((selector,cell,isAbove,isBelow)=>{const cellRect=cell.dom.getBoundingClientRect();remove$6(selector.element,"display");const viewportHeight=defaultView(SugarElement.fromDom(editor.getBody())).dom.innerHeight,aboveViewport=isAbove(cellRect),belowViewport=isBelow(cellRect,viewportHeight);(aboveViewport||belowViewport)&&set$8(selector.element,"display","none")})(selector,cell,(rect=>rect[pos]<0),((rect,viewportHeight)=>rect[pos]>viewportHeight))},snapTopLeft=cell=>snapTo(topLeft,cell,getTopLeftSnap,"top"),snapBottomRight=cell=>snapTo(bottomRight,cell,getBottomRightSnap,"bottom");detect$2().deviceType.isTouch()&&(editor.on("TableSelectionChange",(e=>{isVisible.get()||(attach(sink,topLeft),attach(sink,bottomRight),isVisible.set(!0)),startCell.set(e.start),finishCell.set(e.finish),e.otherCells.each((otherCells=>{tlTds.set(otherCells.upOrLeftCells),brTds.set(otherCells.downOrRightCells),snapTopLeft(e.start),snapBottomRight(e.finish)}))})),editor.on("ResizeEditor ResizeWindow ScrollContent",(()=>{startCell.get().each(snapTopLeft),finishCell.get().each(snapBottomRight)})),editor.on("TableSelectionClear",(()=>{isVisible.get()&&(detach(topLeft),detach(bottomRight),isVisible.set(!1)),startCell.clear(),finishCell.clear()})))};const renderElementPath=(editor,settings,providersBackstage)=>{var _a;const delimiter=null!==(_a=settings.delimiter)&&void 0!==_a?_a:"›",renderPathData=data=>foldl(data,((acc,path,index)=>{const element=((name,element,index)=>Button.sketch({dom:{tag:"div",classes:["tox-statusbar__path-item"],attributes:{"data-index":index,"aria-level":index+1}},components:[text$2(name)],action:_btn=>{editor.focus(),editor.selection.select(element),editor.nodeChanged()},buttonBehaviours:derive$1([DisablingConfigs_button(providersBackstage.isDisabled),receivingConfig()])}))(path.name,path.element,index);return 0===index?acc.concat([element]):acc.concat([{dom:{tag:"div",classes:["tox-statusbar__path-divider"],attributes:{"aria-hidden":!0}},components:[text$2(` ${delimiter} `)]},element])}),[]);return{dom:{tag:"div",classes:["tox-statusbar__path"],attributes:{role:"navigation"}},behaviours:derive$1([Keying.config({mode:"flow",selector:"div[role=button]"}),Disabling.config({disabled:providersBackstage.isDisabled}),receivingConfig(),Tabstopping.config({}),Replacing.config({}),config("elementPathEvents",[runOnAttached(((comp,_e)=>{editor.shortcuts.add("alt+F11","focus statusbar elementpath",(()=>Keying.focusIn(comp))),editor.on("NodeChange",(e=>{const newPath=(parents=>{const newPath=[];let i=parents.length;for(;i-- >0;){const parent=parents[i];if(1===parent.nodeType&&"BR"!==(elm=parent).nodeName&&!elm.getAttribute("data-mce-bogus")&&"bookmark"!==elm.getAttribute("data-mce-type")){const args=fireResolveName(editor,parent);if(args.isDefaultPrevented()||newPath.push({name:args.name,element:parent}),args.isPropagationStopped())break}}var elm;return newPath})(e.parents),newChildren=newPath.length>0?renderPathData(newPath):[];Replacing.set(comp,newChildren)}))}))])]),components:[]}};var ResizeTypes;!function(ResizeTypes){ResizeTypes[ResizeTypes.None=0]="None",ResizeTypes[ResizeTypes.Both=1]="Both",ResizeTypes[ResizeTypes.Vertical=2]="Vertical"}(ResizeTypes||(ResizeTypes={}));const resize=(editor,deltas,resizeType)=>{const container=SugarElement.fromDom(editor.getContainer()),dimensions=((editor,deltas,resizeType,originalHeight,originalWidth)=>{const dimensions={height:calcCappedSize(originalHeight+deltas.top,getMinHeightOption(editor),getMaxHeightOption(editor))};return resizeType===ResizeTypes.Both&&(dimensions.width=calcCappedSize(originalWidth+deltas.left,getMinWidthOption(editor),getMaxWidthOption(editor))),dimensions})(editor,deltas,resizeType,get$d(container),get$c(container));each(dimensions,((val,dim)=>{isNumber(val)&&set$8(container,dim,numToPx(val))})),(editor=>{editor.dispatch("ResizeEditor")})(editor)},keyboardHandler=(editor,resizeType,x,y)=>{const delta=SugarPosition(20*x,20*y);return resize(editor,delta,resizeType),Optional.some(!0)},renderResizeHandler=(editor,providersBackstage)=>{const resizeType=(editor=>{const resize=getResize(editor);return!1===resize?ResizeTypes.None:"both"===resize?ResizeTypes.Both:ResizeTypes.Vertical})(editor);if(resizeType===ResizeTypes.None)return Optional.none();const resizeLabel=resizeType===ResizeTypes.Both?"Press the arrow keys to resize the editor.":"Press the Up and Down arrow keys to resize the editor.";return Optional.some(render$3("resize-handle",{tag:"div",classes:["tox-statusbar__resize-handle"],attributes:{title:providersBackstage.translate("Resize"),"aria-label":providersBackstage.translate(resizeLabel)},behaviours:[Dragging.config({mode:"mouse",repositionTarget:!1,onDrag:(_comp,_target,delta)=>resize(editor,delta,resizeType),blockerClass:"tox-blocker"}),Keying.config({mode:"special",onLeft:()=>keyboardHandler(editor,resizeType,-1,0),onRight:()=>keyboardHandler(editor,resizeType,1,0),onUp:()=>keyboardHandler(editor,resizeType,0,-1),onDown:()=>keyboardHandler(editor,resizeType,0,1)}),Tabstopping.config({}),Focusing.config({})]},providersBackstage.icons))},renderStatusbar=(editor,providersBackstage)=>{const renderRightContainer=()=>{const components=[];return editor.hasPlugin("wordcount")&&components.push(((editor,providersBackstage)=>{const replaceCountText=(comp,count,mode)=>Replacing.set(comp,[text$2(providersBackstage.translate(["{0} "+mode,count[mode]]))]);return Button.sketch({dom:{tag:"button",classes:["tox-statusbar__wordcount"]},components:[],buttonBehaviours:derive$1([DisablingConfigs_button(providersBackstage.isDisabled),receivingConfig(),Tabstopping.config({}),Replacing.config({}),Representing.config({store:{mode:"memory",initialValue:{mode:"words",count:{words:0,characters:0}}}}),config("wordcount-events",[runOnExecute$1((comp=>{const currentVal=Representing.getValue(comp),newMode="words"===currentVal.mode?"characters":"words";Representing.setValue(comp,{mode:newMode,count:currentVal.count}),replaceCountText(comp,currentVal.count,newMode)})),runOnAttached((comp=>{editor.on("wordCountUpdate",(e=>{const{mode:mode}=Representing.getValue(comp);Representing.setValue(comp,{mode:mode,count:e.wordCount}),replaceCountText(comp,e.wordCount,mode)}))}))])]),eventOrder:{[execute$5()]:["disabling","alloy.base.behaviour","wordcount-events"]}})})(editor,providersBackstage)),useBranding(editor)&&components.push({dom:{tag:"span",classes:["tox-statusbar__branding"]},components:[{dom:{tag:"a",attributes:{href:"https://www.tiny.cloud/powered-by-tiny?utm_campaign=editor_referral&utm_medium=poweredby&utm_source=tinymce&utm_content=v6",rel:"noopener",target:"_blank","aria-label":global$8.translate(["Powered by {0}","Tiny"])},innerHtml:'<svg width="50px" height="16px" viewBox="0 0 50 16" xmlns="http://www.w3.org/2000/svg">\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M10.143 0c2.608.015 5.186 2.178 5.186 5.331 0 0 .077 3.812-.084 4.87-.361 2.41-2.164 4.074-4.65 4.496-1.453.284-2.523.49-3.212.623-.373.071-.634.122-.785.152-.184.038-.997.145-1.35.145-2.732 0-5.21-2.04-5.248-5.33 0 0 0-3.514.03-4.442.093-2.4 1.758-4.342 4.926-4.963 0 0 3.875-.752 4.036-.782.368-.07.775-.1 1.15-.1Zm1.826 2.8L5.83 3.989v2.393l-2.455.475v5.968l6.137-1.189V9.243l2.456-.476V2.8ZM5.83 6.382l3.682-.713v3.574l-3.682.713V6.382Zm27.173-1.64-.084-1.066h-2.226v9.132h2.456V7.743c-.008-1.151.998-2.064 2.149-2.072 1.15-.008 1.987.92 1.995 2.072v5.065h2.455V7.359c-.015-2.18-1.657-3.929-3.837-3.913a3.993 3.993 0 0 0-2.908 1.296Zm-6.3-4.266L29.16 0v2.387l-2.456.475V.476Zm0 3.2v9.132h2.456V3.676h-2.456Zm18.179 11.787L49.11 3.676H46.58l-1.612 4.527-.46 1.382-.384-1.382-1.611-4.527H39.98l3.3 9.132L42.15 16l2.732-.537ZM22.867 9.738c0 .752.568 1.075.921 1.075.353 0 .668-.047.998-.154l.537 1.765c-.23.154-.92.537-2.225.537-1.305 0-2.655-.997-2.686-2.686a136.877 136.877 0 0 1 0-4.374H18.8V3.676h1.612v-1.98l2.455-.476v2.456h2.302V5.9h-2.302v3.837Z"/>\n</svg>\n'.trim()},behaviours:derive$1([Focusing.config({})])}]}),{dom:{tag:"div",classes:["tox-statusbar__right-container"]},components:components}},getTextComponents=()=>{const components=[],shouldRenderHelp=useHelpAccessibility(editor),shouldRenderElementPath=useElementPath(editor),shouldRenderRightContainer=useBranding(editor)||editor.hasPlugin("wordcount"),getTextComponentClasses=()=>{const flexStart="tox-statusbar__text-container--flex-start",flexEnd="tox-statusbar__text-container--flex-end";if(shouldRenderHelp){const container3Columns="tox-statusbar__text-container-3-cols";return shouldRenderRightContainer||shouldRenderElementPath?shouldRenderRightContainer&&!shouldRenderElementPath?[container3Columns,flexEnd]:[container3Columns,flexStart]:[container3Columns,"tox-statusbar__text-container--space-around"]}return[shouldRenderRightContainer&&!shouldRenderElementPath?flexEnd:flexStart]};return shouldRenderElementPath&&components.push(renderElementPath(editor,{},providersBackstage)),shouldRenderHelp&&components.push((()=>{const shortcutText=convertText("Alt+0");return{dom:{tag:"div",classes:["tox-statusbar__help-text"]},components:[text$2(global$8.translate(["Press {0} for help",shortcutText]))]}})()),shouldRenderRightContainer&&components.push(renderRightContainer()),components.length>0?[{dom:{tag:"div",classes:["tox-statusbar__text-container",...getTextComponentClasses()]},components:components}]:[]};return{dom:{tag:"div",classes:["tox-statusbar"]},components:(()=>{const components=getTextComponents(),resizeHandler=renderResizeHandler(editor,providersBackstage);return components.concat(resizeHandler.toArray())})()}},getLazyMothership=(label,singleton)=>singleton.get().getOrDie(`UI for ${label} has not been rendered`),setup$3=(editor,setupForTheme)=>{const isInline=editor.inline,mode=isInline?Inline:Iframe,header=isStickyToolbar(editor)?StickyHeader:StaticHeader,lazyUiRefs=(()=>{const dialogUi=value$2(),popupUi=value$2(),mainUi=value$2();return{dialogUi:dialogUi,popupUi:popupUi,mainUi:mainUi,getUiMotherships:()=>{const optDialogMothership=dialogUi.get().map((ui=>ui.mothership)),optPopupMothership=popupUi.get().map((ui=>ui.mothership));return optDialogMothership.fold((()=>optPopupMothership.toArray()),(dm=>optPopupMothership.fold((()=>[dm]),(pm=>eq(dm.element,pm.element)?[dm]:[dm,pm]))))},lazyGetInOuterOrDie:(label,f)=>()=>mainUi.get().bind((oc=>f(oc.outerContainer))).getOrDie(`Could not find ${label} element in OuterContainer`)}})(),lazyMothership=value$2(),lazyDialogMothership=value$2(),lazyPopupMothership=value$2(),deviceClasses=detect$2().deviceType.isTouch()?["tox-platform-touch"]:[],isToolbarBottom=isToolbarLocationBottom(editor),toolbarMode=getToolbarMode(editor),memAnchorBar=record({dom:{tag:"div",classes:["tox-anchorbar"]}}),memBottomAnchorBar=record({dom:{tag:"div",classes:["tox-bottom-anchorbar"]}}),lazyHeader=()=>lazyUiRefs.mainUi.get().map((ui=>ui.outerContainer)).bind(OuterContainer.getHeader),lazyAnchorBar=lazyUiRefs.lazyGetInOuterOrDie("anchor bar",memAnchorBar.getOpt),lazyBottomAnchorBar=lazyUiRefs.lazyGetInOuterOrDie("bottom anchor bar",memBottomAnchorBar.getOpt),lazyToolbar=lazyUiRefs.lazyGetInOuterOrDie("toolbar",OuterContainer.getToolbar),lazyThrobber=lazyUiRefs.lazyGetInOuterOrDie("throbber",OuterContainer.getThrobber),backstages=init$6({popup:()=>Result.fromOption(lazyUiRefs.popupUi.get().map((ui=>ui.sink)),"(popup) UI has not been rendered"),dialog:()=>Result.fromOption(lazyUiRefs.dialogUi.get().map((ui=>ui.sink)),"UI has not been rendered")},editor,lazyAnchorBar,lazyBottomAnchorBar),renderMainUi=()=>{const partHeader=(()=>{const verticalDirAttributes={attributes:{[Attribute]:isToolbarBottom?AttributeValue.BottomToTop:AttributeValue.TopToBottom}},partMenubar=OuterContainer.parts.menubar({dom:{tag:"div",classes:["tox-menubar"]},backstage:backstages.popup,onEscape:()=>{editor.focus()}}),partToolbar=OuterContainer.parts.toolbar({dom:{tag:"div",classes:["tox-toolbar"]},getSink:backstages.popup.shared.getSink,providers:backstages.popup.shared.providers,onEscape:()=>{editor.focus()},onToolbarToggled:state=>{((editor,state)=>{editor.dispatch("ToggleToolbarDrawer",{state:state})})(editor,state)},type:toolbarMode,lazyToolbar:lazyToolbar,lazyHeader:()=>lazyHeader().getOrDie("Could not find header element"),...verticalDirAttributes}),partMultipleToolbar=OuterContainer.parts["multiple-toolbar"]({dom:{tag:"div",classes:["tox-toolbar-overlord"]},providers:backstages.popup.shared.providers,onEscape:()=>{editor.focus()},type:toolbarMode}),hasMultipleToolbar=isMultipleToolbars(editor),hasToolbar=isToolbarEnabled(editor),hasMenubar=isMenubarEnabled(editor),hasAnyContents=(promotionEnabled(editor),hasMultipleToolbar||hasToolbar||hasMenubar),menubarCollection=[partMenubar];return OuterContainer.parts.header({dom:{tag:"div",classes:["tox-editor-header"].concat(hasAnyContents?[]:["tox-editor-header--empty"]),...verticalDirAttributes},components:flatten([hasMenubar?menubarCollection:[],hasMultipleToolbar?[partMultipleToolbar]:hasToolbar?[partToolbar]:[],useFixedContainer(editor)?[]:[memAnchorBar.asSpec()]]),sticky:isStickyToolbar(editor),editor:editor,sharedBackstage:backstages.popup.shared})})(),sidebarContainer={dom:{tag:"div",classes:["tox-sidebar-wrap"]},components:[OuterContainer.parts.socket({dom:{tag:"div",classes:["tox-edit-area"]}}),OuterContainer.parts.sidebar({dom:{tag:"div",classes:["tox-sidebar"]}})]},partThrobber=OuterContainer.parts.throbber({dom:{tag:"div",classes:["tox-throbber"]},backstage:backstages.popup}),partViewWrapper=OuterContainer.parts.viewWrapper({backstage:backstages.popup}),statusbar=useStatusBar(editor)&&!isInline?Optional.some(renderStatusbar(editor,backstages.popup.shared.providers)):Optional.none(),editorComponents=flatten([isToolbarBottom?[]:[partHeader],isInline?[]:[sidebarContainer],isToolbarBottom?[partHeader]:[]]),editorContainer=OuterContainer.parts.editorContainer({components:flatten([editorComponents,isInline?[]:[memBottomAnchorBar.asSpec(),...statusbar.toArray()]])}),isHidden=isDistractionFree(editor),attributes={role:"application",...global$8.isRtl()?{dir:"rtl"}:{},...isHidden?{"aria-hidden":"true"}:{}},outerContainer=build$1(OuterContainer.sketch({dom:{tag:"div",classes:["tox","tox-tinymce"].concat(isInline?["tox-tinymce-inline"]:[]).concat(isToolbarBottom?["tox-tinymce--toolbar-bottom"]:[]).concat(deviceClasses),styles:{visibility:"hidden",...isHidden?{opacity:"0",border:"0"}:{}},attributes:attributes},components:[editorContainer,...isInline?[]:[partViewWrapper],partThrobber],behaviours:derive$1([receivingConfig(),Disabling.config({disableClass:"tox-tinymce--disabled"}),Keying.config({mode:"cyclic",selector:".tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a, .tox-statusbar__resize-handle"})])})),mothership=takeover(outerContainer);return lazyMothership.set(mothership),{mothership:mothership,outerContainer:outerContainer}},setEditorSize=outerContainer=>{const parsedHeight=numToPx(getHeightWithFallback(editor)),parsedWidth=numToPx((editor=>getWidth(editor).getOr(getWidthOption(editor)))(editor));return editor.inline||(isValidValue$1("div","width",parsedWidth)&&set$8(outerContainer.element,"width",parsedWidth),isValidValue$1("div","height",parsedHeight)?set$8(outerContainer.element,"height",parsedHeight):set$8(outerContainer.element,"height","400px")),parsedHeight},renderUIWithRefs=uiRefs=>{const{mainUi:mainUi,popupUi:popupUi,uiMotherships:uiMotherships}=uiRefs;map$1(getToolbarGroups(editor),((toolbarGroupButtonConfig,name)=>{editor.ui.registry.addGroupToolbarButton(name,toolbarGroupButtonConfig)}));const{buttons:buttons,menuItems:menuItems,contextToolbars:contextToolbars,sidebars:sidebars,views:views}=editor.ui.registry.getAll(),toolbarOpt=getMultipleToolbarsOption(editor),rawUiConfig={menuItems:menuItems,menus:getMenus(editor),menubar:getMenubar(editor),toolbar:toolbarOpt.getOrThunk((()=>getToolbar(editor))),allowToolbarGroups:toolbarMode===ToolbarMode$1.floating,buttons:buttons,sidebar:sidebars,views:views};var outerContainer;outerContainer=mainUi.outerContainer,editor.addShortcut("alt+F9","focus menubar",(()=>{OuterContainer.focusMenubar(outerContainer)})),editor.addShortcut("alt+F10","focus toolbar",(()=>{OuterContainer.focusToolbar(outerContainer)})),editor.addCommand("ToggleToolbarDrawer",((_ui,options)=>{(null==options?void 0:options.skipFocus)?OuterContainer.toggleToolbarDrawerWithoutFocusing(outerContainer):OuterContainer.toggleToolbarDrawer(outerContainer)})),editor.addQueryStateHandler("ToggleToolbarDrawer",(()=>OuterContainer.isToolbarDrawerToggled(outerContainer))),((editor,mothership,uiMotherships)=>{const broadcastEvent=(name,evt)=>{each$1([mothership,...uiMotherships],(m=>{m.broadcastEvent(name,evt)}))},broadcastOn=(channel,message)=>{each$1([mothership,...uiMotherships],(m=>{m.broadcastOn([channel],message)}))},fireDismissPopups=evt=>broadcastOn(dismissPopups(),{target:evt.target}),doc=getDocument(),onTouchstart=bind(doc,"touchstart",fireDismissPopups),onTouchmove=bind(doc,"touchmove",(evt=>broadcastEvent(documentTouchmove(),evt))),onTouchend=bind(doc,"touchend",(evt=>broadcastEvent(documentTouchend(),evt))),onMousedown=bind(doc,"mousedown",fireDismissPopups),onMouseup=bind(doc,"mouseup",(evt=>{0===evt.raw.button&&broadcastOn(mouseReleased(),{target:evt.target})})),onContentClick=raw=>broadcastOn(dismissPopups(),{target:SugarElement.fromDom(raw.target)}),onContentMouseup=raw=>{0===raw.button&&broadcastOn(mouseReleased(),{target:SugarElement.fromDom(raw.target)})},onContentMousedown=()=>{each$1(editor.editorManager.get(),(loopEditor=>{editor!==loopEditor&&loopEditor.dispatch("DismissPopups",{relatedTarget:editor})}))},onWindowScroll=evt=>broadcastEvent(windowScroll(),fromRawEvent(evt)),onWindowResize=evt=>{broadcastOn(repositionPopups(),{}),broadcastEvent(windowResize(),fromRawEvent(evt))},dos=getRootNode(SugarElement.fromDom(editor.getElement())),onElementScroll=capture(dos,"scroll",(evt=>{requestAnimationFrame((()=>{if(null!=editor.getContainer()){const scrollers=detectWhenSplitUiMode(editor,mothership.element).map((sc=>[sc.element,...sc.others])).getOr([]);exists(scrollers,(s=>eq(s,evt.target)))&&(editor.dispatch("ElementScroll",{target:evt.target.dom}),broadcastEvent(externalElementScroll(),evt))}}))})),onEditorResize=()=>broadcastOn(repositionPopups(),{}),onEditorProgress=evt=>{evt.state&&broadcastOn(dismissPopups(),{target:SugarElement.fromDom(editor.getContainer())})},onDismissPopups=event=>{broadcastOn(dismissPopups(),{target:SugarElement.fromDom(event.relatedTarget.getContainer())})};editor.on("PostRender",(()=>{editor.on("click",onContentClick),editor.on("tap",onContentClick),editor.on("mouseup",onContentMouseup),editor.on("mousedown",onContentMousedown),editor.on("ScrollWindow",onWindowScroll),editor.on("ResizeWindow",onWindowResize),editor.on("ResizeEditor",onEditorResize),editor.on("AfterProgressState",onEditorProgress),editor.on("DismissPopups",onDismissPopups)})),editor.on("remove",(()=>{editor.off("click",onContentClick),editor.off("tap",onContentClick),editor.off("mouseup",onContentMouseup),editor.off("mousedown",onContentMousedown),editor.off("ScrollWindow",onWindowScroll),editor.off("ResizeWindow",onWindowResize),editor.off("ResizeEditor",onEditorResize),editor.off("AfterProgressState",onEditorProgress),editor.off("DismissPopups",onDismissPopups),onMousedown.unbind(),onTouchstart.unbind(),onTouchmove.unbind(),onTouchend.unbind(),onMouseup.unbind(),onElementScroll.unbind()})),editor.on("detach",(()=>{each$1([mothership,...uiMotherships],detachSystem),each$1([mothership,...uiMotherships],(m=>m.destroy()))}))})(editor,mainUi.mothership,uiMotherships),header.setup(editor,backstages.popup.shared,lazyHeader),setup$6(editor,backstages.popup),setup$5(editor,backstages.popup.shared.getSink,backstages.popup),(editor=>{const{sidebars:sidebars}=editor.ui.registry.getAll();each$1(keys(sidebars),(name=>{const spec=sidebars[name],isActive=()=>is$1(Optional.from(editor.queryCommandValue("ToggleSidebar")),name);editor.ui.registry.addToggleButton(name,{icon:spec.icon,tooltip:spec.tooltip,onAction:buttonApi=>{editor.execCommand("ToggleSidebar",!1,name),buttonApi.setActive(isActive())},onSetup:buttonApi=>{buttonApi.setActive(isActive());const handleToggle=()=>buttonApi.setActive(isActive());return editor.on("ToggleSidebar",handleToggle),()=>{editor.off("ToggleSidebar",handleToggle)}}})}))})(editor),setup$7(editor,lazyThrobber,backstages.popup.shared),register$9(editor,contextToolbars,popupUi.sink,{backstage:backstages.popup}),setup$4(editor,popupUi.sink);const args={targetNode:editor.getElement(),height:setEditorSize(mainUi.outerContainer)};return mode.render(editor,uiRefs,rawUiConfig,backstages.popup,args)};return{popups:{backstage:backstages.popup,getMothership:()=>getLazyMothership("popups",lazyPopupMothership)},dialogs:{backstage:backstages.dialog,getMothership:()=>getLazyMothership("dialogs",lazyDialogMothership)},renderUI:()=>{const mainUi=renderMainUi(),dialogUi=(()=>{const uiContainer=getUiContainer(editor),isGridUiContainer=eq(body(),uiContainer)&&"grid"===get$e(uiContainer,"display"),sinkSpec={dom:{tag:"div",classes:["tox","tox-silver-sink","tox-tinymce-aux"].concat(deviceClasses),attributes:{...global$8.isRtl()?{dir:"rtl"}:{}}},behaviours:derive$1([Positioning.config({useFixed:()=>header.isDocked(lazyHeader)})])},reactiveWidthSpec={dom:{styles:{width:document.body.clientWidth+"px"}},events:derive$2([run$1(windowResize(),(comp=>{set$8(comp.element,"width",document.body.clientWidth+"px")}))])},sink=build$1(deepMerge(sinkSpec,isGridUiContainer?reactiveWidthSpec:{})),uiMothership=takeover(sink);return lazyDialogMothership.set(uiMothership),{sink:sink,mothership:uiMothership}})(),popupUi=isSplitUiMode(editor)?(()=>{const sinkSpec={dom:{tag:"div",classes:["tox","tox-silver-sink","tox-silver-popup-sink","tox-tinymce-aux"].concat(deviceClasses),attributes:{...global$8.isRtl()?{dir:"rtl"}:{}}},behaviours:derive$1([Positioning.config({useFixed:()=>header.isDocked(lazyHeader),getBounds:()=>setupForTheme.getPopupSinkBounds()})])},sink=build$1(sinkSpec),uiMothership=takeover(sink);return lazyPopupMothership.set(uiMothership),{sink:sink,mothership:uiMothership}})():(dialogUi=>(lazyPopupMothership.set(dialogUi.mothership),dialogUi))(dialogUi);lazyUiRefs.dialogUi.set(dialogUi),lazyUiRefs.popupUi.set(popupUi),lazyUiRefs.mainUi.set(mainUi);const uiRefs={popupUi:popupUi,dialogUi:dialogUi,mainUi:mainUi,uiMotherships:lazyUiRefs.getUiMotherships()};return renderUIWithRefs(uiRefs)}}},schema$2=constant$1([required$1("lazySink"),option$3("dragBlockClass"),defaultedFunction("getBounds",win),defaulted("useTabstopAt",always),defaulted("firstTabstop",0),defaulted("eventOrder",{}),field("modalBehaviours",[Keying]),onKeyboardHandler("onExecute"),onStrictKeyboardHandler("onEscape")]),basic={sketch:identity},parts$2=constant$1([optional({name:"draghandle",overrides:(detail,spec)=>({behaviours:derive$1([Dragging.config({mode:"mouse",getTarget:handle=>ancestor(handle,'[role="dialog"]').getOr(handle),blockerClass:detail.dragBlockClass.getOrDie(new Error("The drag blocker class was not specified for a dialog with a drag handle: \n"+JSON.stringify(spec,null,2)).message),getBounds:detail.getDragBounds})])})}),required({schema:[required$1("dom")],name:"title"}),required({factory:basic,schema:[required$1("dom")],name:"close"}),required({factory:basic,schema:[required$1("dom")],name:"body"}),optional({factory:basic,schema:[required$1("dom")],name:"footer"}),external({factory:{sketch:(spec,detail)=>({...spec,dom:detail.dom,components:detail.components})},schema:[defaulted("dom",{tag:"div",styles:{position:"fixed",left:"0px",top:"0px",right:"0px",bottom:"0px"}}),defaulted("components",[])],name:"blocker"})]),ModalDialog=composite({name:"ModalDialog",configFields:schema$2(),partFields:parts$2(),factory:(detail,components,spec,externals)=>{const dialogComp=value$2(),modalEventsId=generate$6("modal-events"),eventOrder={...detail.eventOrder,[attachedToDom()]:[modalEventsId].concat(detail.eventOrder["alloy.system.attached"]||[])};return{uid:detail.uid,dom:detail.dom,components:components,apis:{show:dialog=>{dialogComp.set(dialog);const sink=detail.lazySink(dialog).getOrDie(),externalBlocker=externals.blocker(),blocker=sink.getSystem().build({...externalBlocker,components:externalBlocker.components.concat([premade(dialog)]),behaviours:derive$1([Focusing.config({}),config("dialog-blocker-events",[runOnSource(focusin(),(()=>{Blocking.isBlocked(dialog)||Keying.focusIn(dialog)}))])])});attach(sink,blocker),Keying.focusIn(dialog)},hide:dialog=>{dialogComp.clear(),parent(dialog.element).each((blockerDom=>{dialog.getSystem().getByDom(blockerDom).each((blocker=>{detach(blocker)}))}))},getBody:dialog=>getPartOrDie(dialog,detail,"body"),getFooter:dialog=>getPart(dialog,detail,"footer"),setIdle:dialog=>{Blocking.unblock(dialog)},setBusy:(dialog,getBusySpec)=>{Blocking.block(dialog,getBusySpec)}},eventOrder:eventOrder,domModification:{attributes:{role:"dialog","aria-modal":"true"}},behaviours:augment(detail.modalBehaviours,[Replacing.config({}),Keying.config({mode:"cyclic",onEnter:detail.onExecute,onEscape:detail.onEscape,useTabstopAt:detail.useTabstopAt,firstTabstop:detail.firstTabstop}),Blocking.config({getRoot:dialogComp.get}),config(modalEventsId,[runOnAttached((c=>{((labelledElement,labelElement)=>{const labelId=getOpt(labelledElement,"id").fold((()=>{const id=generate$6("dialog-label");return set$9(labelElement,"id",id),id}),identity);set$9(labelledElement,"aria-labelledby",labelId)})(c.element,getPartOrDie(c,detail,"title").element)}))])])}},apis:{show:(apis,dialog)=>{apis.show(dialog)},hide:(apis,dialog)=>{apis.hide(dialog)},getBody:(apis,dialog)=>apis.getBody(dialog),getFooter:(apis,dialog)=>apis.getFooter(dialog),setBusy:(apis,dialog,getBusySpec)=>{apis.setBusy(dialog,getBusySpec)},setIdle:(apis,dialog)=>{apis.setIdle(dialog)}}}),dialogToggleMenuItemSchema=objOf([type,name$1].concat(commonMenuItemFields)),dialogToggleMenuItemDataProcessor=boolean,baseFooterButtonFields=[generatedName("button"),optionalIcon,defaultedStringEnum("align","end",["start","end"]),primary,enabled,optionStringEnum("buttonType",["primary","secondary"])],dialogFooterButtonFields=[...baseFooterButtonFields,text],normalFooterButtonFields=[requiredStringEnum("type",["submit","cancel","custom"]),...dialogFooterButtonFields],menuFooterButtonFields=[requiredStringEnum("type",["menu"]),optionalText,optionalTooltip,optionalIcon,requiredArrayOf("items",dialogToggleMenuItemSchema),...baseFooterButtonFields],toggleButtonSpecFields=[...baseFooterButtonFields,requiredStringEnum("type",["togglebutton"]),requiredString("tooltip"),optionalIcon,optionalText,defaultedBoolean("active",!1)],dialogFooterButtonSchema=choose$1("type",{submit:normalFooterButtonFields,cancel:normalFooterButtonFields,custom:normalFooterButtonFields,menu:menuFooterButtonFields,togglebutton:toggleButtonSpecFields}),alertBannerFields=[type,text,requiredStringEnum("level",["info","warn","error","success"]),icon,defaulted("url","")],alertBannerSchema=objOf(alertBannerFields),buttonFields=[type,text,enabled,generatedName("button"),optionalIcon,borderless,optionStringEnum("buttonType",["primary","secondary","toolbar"]),primary],buttonSchema=objOf(buttonFields),formComponentFields=[type,name$1],formComponentWithLabelFields=formComponentFields.concat([optionalLabel]),checkboxFields=formComponentFields.concat([label,enabled]),checkboxSchema=objOf(checkboxFields),checkboxDataProcessor=boolean,collectionFields=formComponentWithLabelFields.concat([defaultedColumns("auto")]),collectionSchema=objOf(collectionFields),collectionDataProcessor=arrOfObj([value$1,text,icon]),colorInputFields=formComponentWithLabelFields.concat([defaultedString("storageKey","default")]),colorInputSchema=objOf(colorInputFields),colorInputDataProcessor=string,colorPickerSchema=objOf(formComponentWithLabelFields),colorPickerDataProcessor=string,customEditorFields=formComponentFields.concat([defaultedString("tag","textarea"),requiredString("scriptId"),requiredString("scriptUrl"),((key,fallback)=>defaultedOf(key,fallback,postMessageable))("settings",void 0)]),customEditorFieldsOld=formComponentFields.concat([defaultedString("tag","textarea"),requiredFunction("init")]),customEditorSchema=valueOf((v=>asRaw("customeditor.old",objOfOnly(customEditorFieldsOld),v).orThunk((()=>asRaw("customeditor.new",objOfOnly(customEditorFields),v))))),customEditorDataProcessor=string,dropZoneSchema=objOf(formComponentWithLabelFields),dropZoneDataProcessor=arrOf(anyValue$1),createGridFields=itemsField=>[type,requiredNumber("columns"),itemsField],htmlPanelFields=[type,requiredString("html"),defaultedStringEnum("presets","presentation",["presentation","document"])],htmlPanelSchema=objOf(htmlPanelFields),iframeFields=formComponentWithLabelFields.concat([defaultedBoolean("border",!1),defaultedBoolean("sandboxed",!0),defaultedBoolean("streamContent",!1),defaultedBoolean("transparent",!0)]),iframeSchema=objOf(iframeFields),iframeDataProcessor=string,imagePreviewSchema=objOf(formComponentFields.concat([optionString("height")])),imagePreviewDataProcessor=objOf([requiredString("url"),optionNumber("zoom"),optionNumber("cachedWidth"),optionNumber("cachedHeight")]),inputFields=formComponentWithLabelFields.concat([optionString("inputMode"),optionString("placeholder"),defaultedBoolean("maximized",!1),enabled]),inputSchema=objOf(inputFields),inputDataProcessor=string,createLabelFields=itemsField=>[type,label,itemsField,defaultedStringEnum("align","start",["start","center","end"])],listBoxSingleItemFields=[text,value$1],listBoxNestedItemFields=[text,requiredArrayOf("items",thunkOf(0,(()=>listBoxItemSchema)))],listBoxItemSchema=oneOf([objOf(listBoxSingleItemFields),objOf(listBoxNestedItemFields)]),listBoxFields=formComponentWithLabelFields.concat([requiredArrayOf("items",listBoxItemSchema),enabled]),listBoxSchema=objOf(listBoxFields),listBoxDataProcessor=string,selectBoxFields=formComponentWithLabelFields.concat([requiredArrayOfObj("items",[text,value$1]),defaultedNumber("size",1),enabled]),selectBoxSchema=objOf(selectBoxFields),selectBoxDataProcessor=string,sizeInputFields=formComponentWithLabelFields.concat([defaultedBoolean("constrain",!0),enabled]),sizeInputSchema=objOf(sizeInputFields),sizeInputDataProcessor=objOf([requiredString("width"),requiredString("height")]),sliderFields=formComponentFields.concat([label,defaultedNumber("min",0),defaultedNumber("max",0)]),sliderSchema=objOf(sliderFields),sliderInputDataProcessor=number,tableFields=[type,requiredArrayOf("header",string),requiredArrayOf("cells",arrOf(string))],tableSchema=objOf(tableFields),textAreaFields=formComponentWithLabelFields.concat([optionString("placeholder"),defaultedBoolean("maximized",!1),enabled]),textAreaSchema=objOf(textAreaFields),textAreaDataProcessor=string,baseTreeItemFields=[requiredStringEnum("type",["directory","leaf"]),title,requiredString("id"),optionOf("menu",MenuButtonSchema)],treeItemLeafSchema=objOf(baseTreeItemFields),treeItemDirectoryFields=baseTreeItemFields.concat([requiredArrayOf("children",thunkOf(0,(()=>choose$2("type",{directory:treeItemDirectorySchema,leaf:treeItemLeafSchema}))))]),treeItemDirectorySchema=objOf(treeItemDirectoryFields),treeItemSchema=choose$2("type",{directory:treeItemDirectorySchema,leaf:treeItemLeafSchema}),treeFields=[type,requiredArrayOf("items",treeItemSchema),optionFunction("onLeafAction"),optionFunction("onToggleExpand"),defaultedArrayOf("defaultExpandedIds",[],string),optionString("defaultSelectedId")],treeSchema=objOf(treeFields),urlInputFields=formComponentWithLabelFields.concat([defaultedStringEnum("filetype","file",["image","media","file"]),enabled,optionString("picker_text")]),urlInputSchema=objOf(urlInputFields),urlInputDataProcessor=objOf([value$1,defaultedMeta]),createItemsField=name=>field$1("items","items",{tag:"required",process:{}},arrOf(valueOf((v=>asRaw(`Checking item of ${name}`,itemSchema,v).fold((sErr=>Result.error(formatError(sErr))),(passValue=>Result.value(passValue))))))),itemSchema=valueThunk((()=>{return choose$2("type",{alertbanner:alertBannerSchema,bar:objOf((itemsField=createItemsField("bar"),[type,itemsField])),button:buttonSchema,checkbox:checkboxSchema,colorinput:colorInputSchema,colorpicker:colorPickerSchema,dropzone:dropZoneSchema,grid:objOf(createGridFields(createItemsField("grid"))),iframe:iframeSchema,input:inputSchema,listbox:listBoxSchema,selectbox:selectBoxSchema,sizeinput:sizeInputSchema,slider:sliderSchema,textarea:textAreaSchema,urlinput:urlInputSchema,customeditor:customEditorSchema,htmlpanel:htmlPanelSchema,imagepreview:imagePreviewSchema,collection:collectionSchema,label:objOf(createLabelFields(createItemsField("label"))),table:tableSchema,tree:treeSchema,panel:panelSchema});var itemsField})),panelFields=[type,defaulted("classes",[]),requiredArrayOf("items",itemSchema)],panelSchema=objOf(panelFields),tabFields=[generatedName("tab"),title,requiredArrayOf("items",itemSchema)],tabPanelFields=[type,requiredArrayOfObj("tabs",tabFields)],tabPanelSchema=objOf(tabPanelFields),dialogButtonFields=dialogFooterButtonFields,dialogButtonSchema=dialogFooterButtonSchema,dialogSchema=objOf([requiredString("title"),requiredOf("body",choose$2("type",{panel:panelSchema,tabpanel:tabPanelSchema})),defaultedString("size","normal"),defaultedArrayOf("buttons",[],dialogButtonSchema),defaulted("initialData",{}),defaultedFunction("onAction",noop),defaultedFunction("onChange",noop),defaultedFunction("onSubmit",noop),defaultedFunction("onClose",noop),defaultedFunction("onCancel",noop),defaultedFunction("onTabChange",noop)]),urlDialogButtonSchema=objOf([requiredStringEnum("type",["cancel","custom"]),...dialogButtonFields]),urlDialogSchema=objOf([requiredString("title"),requiredString("url"),optionNumber("height"),optionNumber("width"),optionArrayOf("buttons",urlDialogButtonSchema),defaultedFunction("onAction",noop),defaultedFunction("onCancel",noop),defaultedFunction("onClose",noop),defaultedFunction("onMessage",noop)]),getAllObjects=obj=>isObject(obj)?[obj].concat(bind$3(values(obj),getAllObjects)):isArray(obj)?bind$3(obj,getAllObjects):[],isNamedItem=obj=>isString(obj.type)&&isString(obj.name),dataProcessors={checkbox:checkboxDataProcessor,colorinput:colorInputDataProcessor,colorpicker:colorPickerDataProcessor,dropzone:dropZoneDataProcessor,input:inputDataProcessor,iframe:iframeDataProcessor,imagepreview:imagePreviewDataProcessor,selectbox:selectBoxDataProcessor,sizeinput:sizeInputDataProcessor,slider:sliderInputDataProcessor,listbox:listBoxDataProcessor,size:sizeInputDataProcessor,textarea:textAreaDataProcessor,urlinput:urlInputDataProcessor,customeditor:customEditorDataProcessor,collection:collectionDataProcessor,togglemenuitem:dialogToggleMenuItemDataProcessor},createDataValidator=structure=>{const namedItems=(structure=>filter$2(getAllObjects(structure),isNamedItem))(structure),fields=bind$3(namedItems,(item=>(item=>Optional.from(dataProcessors[item.type]))(item).fold((()=>[]),(schema=>[requiredOf(item.name,schema)]))));return objOf(fields)},extract=structure=>{var _a;return{internalDialog:getOrDie(asRaw("dialog",dialogSchema,structure)),dataValidator:createDataValidator(structure),initialData:null!==(_a=structure.initialData)&&void 0!==_a?_a:{}}},DialogManager={open:(factory,structure)=>{const extraction=extract(structure);return factory(extraction.internalDialog,extraction.initialData,extraction.dataValidator)},openUrl:(factory,structure)=>factory(getOrDie(asRaw("dialog",urlDialogSchema,structure))),redial:structure=>extract(structure)};var ActiveReflecting=Object.freeze({__proto__:null,events:(reflectingConfig,reflectingState)=>{const update=(component,data)=>{reflectingConfig.updateState.each((updateState=>{const newState=updateState(component,data);reflectingState.set(newState)})),reflectingConfig.renderComponents.each((renderComponents=>{const newComponents=renderComponents(data,reflectingState.get());(reflectingConfig.reuseDom?withReuse:withoutReuse)(component,newComponents)}))};return derive$2([run$1(receive(),((component,message)=>{const receivingData=message;if(!receivingData.universal){const channel=reflectingConfig.channel;contains$2(receivingData.channels,channel)&&update(component,receivingData.data)}})),runOnAttached(((comp,_se)=>{reflectingConfig.initialData.each((rawData=>{update(comp,rawData)}))}))])}});var ReflectingApis=Object.freeze({__proto__:null,getState:(component,replaceConfig,reflectState)=>reflectState}),ReflectingSchema=[required$1("channel"),option$3("renderComponents"),option$3("updateState"),option$3("initialData"),defaultedBoolean("reuseDom",!0)];const Reflecting=create$4({fields:ReflectingSchema,name:"reflecting",active:ActiveReflecting,apis:ReflectingApis,state:Object.freeze({__proto__:null,init:()=>{const cell=Cell(Optional.none());return{readState:()=>cell.get().getOr("none"),get:cell.get,set:cell.set,clear:()=>cell.set(Optional.none())}}})}),toValidValues=values=>{const errors=[],result={};return each(values,((value,name)=>{value.fold((()=>{errors.push(name)}),(v=>{result[name]=v}))})),errors.length>0?Result.error(errors):Result.value(result)},renderBodyPanel=(spec,dialogData,backstage)=>{const memForm=record(Form.sketch((parts=>({dom:{tag:"div",classes:["tox-form"].concat(spec.classes)},components:map$2(spec.items,(item=>interpretInForm(parts,item,dialogData,backstage)))}))));return{dom:{tag:"div",classes:["tox-dialog__body"]},components:[{dom:{tag:"div",classes:["tox-dialog__body-content"]},components:[memForm.asSpec()]}],behaviours:derive$1([Keying.config({mode:"acyclic",useTabstopAt:not(isPseudoStop)}),ComposingConfigs_memento(memForm),memento(memForm,{postprocess:formValue=>toValidValues(formValue).fold((err=>(console.error(err),{})),identity)}),config("dialog-body-panel",[run$1(focusin(),((comp,se)=>{comp.getSystem().broadcastOn([dialogFocusShiftedChannel],{newFocus:Optional.some(se.event.target)})}))])])}},TabButton=single({name:"TabButton",configFields:[defaulted("uid",void 0),required$1("value"),field$1("dom","dom",mergeWithThunk((()=>({attributes:{role:"tab",id:generate$6("aria"),"aria-selected":"false"}}))),anyValue()),option$3("action"),defaulted("domModification",{}),field("tabButtonBehaviours",[Focusing,Keying,Representing]),required$1("view")],factory:(detail,_spec)=>({uid:detail.uid,dom:detail.dom,components:detail.components,events:events$a(detail.action),behaviours:augment(detail.tabButtonBehaviours,[Focusing.config({}),Keying.config({mode:"execution",useSpace:!0,useEnter:!0}),Representing.config({store:{mode:"memory",initialValue:detail.value}})]),domModification:detail.domModification})}),schema$1=constant$1([required$1("tabs"),required$1("dom"),defaulted("clickToDismiss",!1),field("tabbarBehaviours",[Highlighting,Keying]),markers$1(["tabClass","selectedClass"])]),tabsPart=group({factory:TabButton,name:"tabs",unit:"tab",overrides:barDetail=>{const dismissTab$1=(tabbar,button)=>{Highlighting.dehighlight(tabbar,button),emitWith(tabbar,dismissTab(),{tabbar:tabbar,button:button})},changeTab$1=(tabbar,button)=>{Highlighting.highlight(tabbar,button),emitWith(tabbar,changeTab(),{tabbar:tabbar,button:button})};return{action:button=>{const tabbar=button.getSystem().getByUid(barDetail.uid).getOrDie(),activeButton=Highlighting.isHighlighted(tabbar,button);(activeButton&&barDetail.clickToDismiss?dismissTab$1:activeButton?noop:changeTab$1)(tabbar,button)},domModification:{classes:[barDetail.markers.tabClass]}}}}),parts$1=constant$1([tabsPart]),Tabbar=composite({name:"Tabbar",configFields:schema$1(),partFields:parts$1(),factory:(detail,components,_spec,_externals)=>({uid:detail.uid,dom:detail.dom,components:components,"debug.sketcher":"Tabbar",domModification:{attributes:{role:"tablist"}},behaviours:augment(detail.tabbarBehaviours,[Highlighting.config({highlightClass:detail.markers.selectedClass,itemClass:detail.markers.tabClass,onHighlight:(tabbar,tab)=>{set$9(tab.element,"aria-selected","true")},onDehighlight:(tabbar,tab)=>{set$9(tab.element,"aria-selected","false")}}),Keying.config({mode:"flow",getInitial:tabbar=>Highlighting.getHighlighted(tabbar).map((tab=>tab.element)),selector:"."+detail.markers.tabClass,executeOnMove:!0})])})}),Tabview=single({name:"Tabview",configFields:[field("tabviewBehaviours",[Replacing])],factory:(detail,_spec)=>({uid:detail.uid,dom:detail.dom,behaviours:augment(detail.tabviewBehaviours,[Replacing.config({})]),domModification:{attributes:{role:"tabpanel"}}})}),schema=constant$1([defaulted("selectFirst",!0),onHandler("onChangeTab"),onHandler("onDismissTab"),defaulted("tabs",[]),field("tabSectionBehaviours",[])]),barPart=required({factory:Tabbar,schema:[required$1("dom"),requiredObjOf("markers",[required$1("tabClass"),required$1("selectedClass")])],name:"tabbar",defaults:detail=>({tabs:detail.tabs})}),viewPart=required({factory:Tabview,name:"tabview"}),parts=constant$1([barPart,viewPart]),TabSection=composite({name:"TabSection",configFields:schema(),partFields:parts(),factory:(detail,components,_spec,_externals)=>{const changeTabBy=(section,byPred)=>{getPart(section,detail,"tabbar").each((tabbar=>{byPred(tabbar).each(emitExecute)}))};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:get$3(detail.tabSectionBehaviours),events:derive$2(flatten([detail.selectFirst?[runOnAttached(((section,_simulatedEvent)=>{changeTabBy(section,Highlighting.getFirst)}))]:[],[run$1(changeTab(),((section,simulatedEvent)=>{(button=>{const tabValue=Representing.getValue(button);getPart(button,detail,"tabview").each((tabview=>{const tabWithValue=find$5(detail.tabs,(t=>t.value===tabValue));tabWithValue.each((tabData=>{const panel=tabData.view();getOpt(button.element,"id").each((id=>{set$9(tabview.element,"aria-labelledby",id)})),Replacing.set(tabview,panel),detail.onChangeTab(tabview,button,panel)}))}))})(simulatedEvent.event.button)})),run$1(dismissTab(),((section,simulatedEvent)=>{const button=simulatedEvent.event.button;detail.onDismissTab(section,button)}))]])),apis:{getViewItems:section=>getPart(section,detail,"tabview").map((tabview=>Replacing.contents(tabview))).getOr([]),showTab:(section,tabKey)=>{changeTabBy(section,(tabbar=>{const candidates=Highlighting.getCandidates(tabbar);return find$5(candidates,(c=>Representing.getValue(c)===tabKey)).filter((tab=>!Highlighting.isHighlighted(tabbar,tab)))}))}}}},apis:{getViewItems:(apis,component)=>apis.getViewItems(component),showTab:(apis,component,tabKey)=>{apis.showTab(component,tabKey)}}}),setTabviewHeight=(tabview,height)=>{set$8(tabview,"height",height+"px"),set$8(tabview,"flex-basis",height+"px")},updateTabviewHeight=(dialogBody,tabview,maxTabHeight)=>{ancestor(dialogBody,'[role="dialog"]').each((dialog=>{descendant(dialog,'[role="tablist"]').each((tablist=>{maxTabHeight.get().map((height=>(set$8(tabview,"height","0"),set$8(tabview,"flex-basis","0"),Math.min(height,((dialog,tabview,tablist)=>{const documentElement$1=documentElement(dialog).dom,rootElm=ancestor(dialog,".tox-dialog-wrap").getOr(dialog);let maxHeight;maxHeight="fixed"===get$e(rootElm,"position")?Math.max(documentElement$1.clientHeight,window.innerHeight):Math.max(documentElement$1.offsetHeight,documentElement$1.scrollHeight);const tabviewHeight=get$d(tabview),currentTabHeight=tabview.dom.offsetLeft>=tablist.dom.offsetLeft+get$c(tablist)?Math.max(get$d(tablist),tabviewHeight):tabviewHeight,dialogTopMargin=parseInt(get$e(dialog,"margin-top"),10)||0,dialogBottomMargin=parseInt(get$e(dialog,"margin-bottom"),10)||0;return maxHeight-(get$d(dialog)+dialogTopMargin+dialogBottomMargin-currentTabHeight)})(dialog,tabview,tablist))))).each((height=>{setTabviewHeight(tabview,height)}))}))}))},getTabview=dialog=>descendant(dialog,'[role="tabpanel"]'),smartMode=allTabs=>{const maxTabHeight=value$2(),extraEvents=[runOnAttached((comp=>{const dialog=comp.element;getTabview(dialog).each((tabview=>{set$8(tabview,"visibility","hidden"),comp.getSystem().getByDom(tabview).toOptional().each((tabviewComp=>{const heights=((allTabs,tabview,tabviewComp)=>map$2(allTabs,((_tab,i)=>{Replacing.set(tabviewComp,allTabs[i].view());const rect=tabview.dom.getBoundingClientRect();return Replacing.set(tabviewComp,[]),rect.height})))(allTabs,tabview,tabviewComp),maxTabHeightOpt=(heights=>head(sort(heights,((a,b)=>a>b?-1:a<b?1:0))))(heights);maxTabHeightOpt.fold(maxTabHeight.clear,maxTabHeight.set)})),updateTabviewHeight(dialog,tabview,maxTabHeight),remove$6(tabview,"visibility"),((allTabs,comp)=>{head(allTabs).each((tab=>TabSection.showTab(comp,tab.value)))})(allTabs,comp),requestAnimationFrame((()=>{updateTabviewHeight(dialog,tabview,maxTabHeight)}))}))})),run$1(windowResize(),(comp=>{const dialog=comp.element;getTabview(dialog).each((tabview=>{updateTabviewHeight(dialog,tabview,maxTabHeight)}))})),run$1(formResizeEvent,((comp,_se)=>{const dialog=comp.element;getTabview(dialog).each((tabview=>{const oldFocus=active$1(getRootNode(tabview));set$8(tabview,"visibility","hidden");const oldHeight=getRaw(tabview,"height").map((h=>parseInt(h,10)));remove$6(tabview,"height"),remove$6(tabview,"flex-basis");const newHeight=tabview.dom.getBoundingClientRect().height;oldHeight.forall((h=>newHeight>h))?(maxTabHeight.set(newHeight),updateTabviewHeight(dialog,tabview,maxTabHeight)):oldHeight.each((h=>{setTabviewHeight(tabview,h)})),remove$6(tabview,"visibility"),oldFocus.each(focus$3)}))}))];return{extraEvents:extraEvents,selectFirst:!1}},renderTabPanel=(spec,dialogData,backstage)=>{const storedValue=Cell({}),updateDataWithForm=form=>{const formData=Representing.getValue(form),validData=toValidValues(formData).getOr({}),currentData=storedValue.get(),newData=deepMerge(currentData,validData);storedValue.set(newData)},setDataOnForm=form=>{const tabData=storedValue.get();Representing.setValue(form,tabData)},oldTab=Cell(null),allTabs=map$2(spec.tabs,(tab=>({value:tab.name,dom:{tag:"div",classes:["tox-dialog__body-nav-item"]},components:[text$2(backstage.shared.providers.translate(tab.title))],view:()=>[Form.sketch((parts=>({dom:{tag:"div",classes:["tox-form"]},components:map$2(tab.items,(item=>interpretInForm(parts,item,dialogData,backstage))),formBehaviours:derive$1([Keying.config({mode:"acyclic",useTabstopAt:not(isPseudoStop)}),config("TabView.form.events",[runOnAttached(setDataOnForm),runOnDetached(updateDataWithForm)]),Receiving.config({channels:wrapAll([{key:"send-data-to-section",value:{onReceive:updateDataWithForm}},{key:"send-data-to-view",value:{onReceive:setDataOnForm}}])})])})))]}))),tabMode=smartMode(allTabs);return TabSection.sketch({dom:{tag:"div",classes:["tox-dialog__body"]},onChangeTab:(section,button,_viewItems)=>{const name=Representing.getValue(button);emitWith(section,formTabChangeEvent,{name:name,oldName:oldTab.get()}),oldTab.set(name)},tabs:allTabs,components:[TabSection.parts.tabbar({dom:{tag:"div",classes:["tox-dialog__body-nav"]},components:[Tabbar.parts.tabs({})],markers:{tabClass:"tox-tab",selectedClass:"tox-dialog__body-nav-item--active"},tabbarBehaviours:derive$1([Tabstopping.config({})])}),TabSection.parts.tabview({dom:{tag:"div",classes:["tox-dialog__body-content"]}})],selectFirst:tabMode.selectFirst,tabSectionBehaviours:derive$1([config("tabpanel",tabMode.extraEvents),Keying.config({mode:"acyclic"}),Composing.config({find:comp=>head(TabSection.getViewItems(comp))}),withComp(Optional.none(),(tsection=>(tsection.getSystem().broadcastOn(["send-data-to-section"],{}),storedValue.get())),((tsection,value)=>{storedValue.set(value),tsection.getSystem().broadcastOn(["send-data-to-view"],{})}))])})},renderBody=(spec,dialogId,contentId,backstage,ariaAttrs)=>({dom:{tag:"div",classes:["tox-dialog__content-js"],attributes:{...contentId.map((x=>({id:x}))).getOr({}),...ariaAttrs?{"aria-live":"polite"}:{}}},components:[],behaviours:derive$1([ComposingConfigs_childAt(0),Reflecting.config({channel:`${bodyChannel}-${dialogId}`,updateState:(_comp,incoming)=>Optional.some({isTabPanel:()=>"tabpanel"===incoming.body.type}),renderComponents:incoming=>{const body=incoming.body;return"tabpanel"===body.type?[renderTabPanel(body,incoming.initialData,backstage)]:[renderBodyPanel(body,incoming.initialData,backstage)]},initialData:spec})])}),isTouch=global$5.deviceType.isTouch(),hiddenHeader=(title,close)=>({dom:{tag:"div",styles:{display:"none"},classes:["tox-dialog__header"]},components:[title,close]}),pClose=(onClose,providersBackstage)=>ModalDialog.parts.close(Button.sketch({dom:{tag:"button",classes:["tox-button","tox-button--icon","tox-button--naked"],attributes:{type:"button","aria-label":providersBackstage.translate("Close")}},action:onClose,buttonBehaviours:derive$1([Tabstopping.config({})])})),pUntitled=()=>ModalDialog.parts.title({dom:{tag:"div",classes:["tox-dialog__title"],innerHtml:"",styles:{display:"none"}}}),pBodyMessage=(message,providersBackstage)=>ModalDialog.parts.body({dom:{tag:"div",classes:["tox-dialog__body"]},components:[{dom:{tag:"div",classes:["tox-dialog__body-content"]},components:[{dom:fromHtml(`<p>${sanitizeHtmlString(providersBackstage.translate(message))}</p>`)}]}]}),pFooter=buttons=>ModalDialog.parts.footer({dom:{tag:"div",classes:["tox-dialog__footer"]},components:buttons}),pFooterGroup=(startButtons,endButtons)=>[Container.sketch({dom:{tag:"div",classes:["tox-dialog__footer-start"]},components:startButtons}),Container.sketch({dom:{tag:"div",classes:["tox-dialog__footer-end"]},components:endButtons})],renderDialog$1=spec=>{const dialogClass="tox-dialog",blockerClass=dialogClass+"-wrap",blockerBackdropClass=blockerClass+"__backdrop",scrollLockClass=dialogClass+"__disable-scroll";return ModalDialog.sketch({lazySink:spec.lazySink,onEscape:comp=>(spec.onEscape(comp),Optional.some(!0)),useTabstopAt:elem=>!isPseudoStop(elem),firstTabstop:spec.firstTabstop,dom:{tag:"div",classes:[dialogClass].concat(spec.extraClasses),styles:{position:"relative",...spec.extraStyles}},components:[spec.header,spec.body,...spec.footer.toArray()],parts:{blocker:{dom:fromHtml(`<div class="${blockerClass}"></div>`),components:[{dom:{tag:"div",classes:isTouch?[blockerBackdropClass,blockerBackdropClass+"--opaque"]:[blockerBackdropClass]}}]}},dragBlockClass:blockerClass,modalBehaviours:derive$1([Focusing.config({}),config("dialog-events",spec.dialogEvents.concat([runOnSource(focusin(),((comp,_se)=>{Blocking.isBlocked(comp)||Keying.focusIn(comp)})),run$1(focusShifted(),((comp,se)=>{comp.getSystem().broadcastOn([dialogFocusShiftedChannel],{newFocus:se.event.newFocus})}))])),config("scroll-lock",[runOnAttached((()=>{add$2(body(),scrollLockClass)})),runOnDetached((()=>{remove$2(body(),scrollLockClass)}))]),...spec.extraBehaviours]),eventOrder:{[execute$5()]:["dialog-events"],[attachedToDom()]:["scroll-lock","dialog-events","alloy.base.behaviour"],[detachedFromDom()]:["alloy.base.behaviour","dialog-events","scroll-lock"],...spec.eventOrder}})},renderClose=providersBackstage=>Button.sketch({dom:{tag:"button",classes:["tox-button","tox-button--icon","tox-button--naked"],attributes:{type:"button","aria-label":providersBackstage.translate("Close"),title:providersBackstage.translate("Close")}},buttonBehaviours:derive$1([Tabstopping.config({})]),components:[render$3("close",{tag:"span",classes:["tox-icon"]},providersBackstage.icons)],action:comp=>{emit(comp,formCancelEvent)}}),renderTitle=(spec,dialogId,titleId,providersBackstage)=>({dom:{tag:"div",classes:["tox-dialog__title"],attributes:{...titleId.map((x=>({id:x}))).getOr({})}},components:[],behaviours:derive$1([Reflecting.config({channel:`${titleChannel}-${dialogId}`,initialData:spec,renderComponents:data=>[text$2(providersBackstage.translate(data.title))]})])}),renderDragHandle=()=>({dom:fromHtml('<div class="tox-dialog__draghandle"></div>')}),getHeader=(title,dialogId,backstage)=>((spec,dialogId,providersBackstage)=>{const pTitle=ModalDialog.parts.title(renderTitle(spec,dialogId,Optional.none(),providersBackstage)),pHandle=ModalDialog.parts.draghandle(renderDragHandle()),pClose=ModalDialog.parts.close(renderClose(providersBackstage)),components=[pTitle].concat(spec.draggable?[pHandle]:[]).concat([pClose]);return Container.sketch({dom:fromHtml('<div class="tox-dialog__header"></div>'),components:components})})({title:backstage.shared.providers.translate(title),draggable:backstage.dialog.isDraggableModal()},dialogId,backstage.shared.providers),getBusySpec=(message,bs,providers,headerHeight)=>({dom:{tag:"div",classes:["tox-dialog__busy-spinner"],attributes:{"aria-label":providers.translate(message)},styles:{left:"0px",right:"0px",bottom:"0px",top:`${headerHeight.getOr(0)}px`,position:"absolute"}},behaviours:bs,components:[{dom:fromHtml('<div class="tox-spinner"><div></div><div></div><div></div></div>')}]}),getEventExtras=(lazyDialog,providers,extra)=>({onClose:()=>extra.closeWindow(),onBlock:blockEvent=>{const headerHeight=descendant(lazyDialog().element,".tox-dialog__header").map((header=>get$d(header)));ModalDialog.setBusy(lazyDialog(),((_comp,bs)=>getBusySpec(blockEvent.message,bs,providers,headerHeight)))},onUnblock:()=>{ModalDialog.setIdle(lazyDialog())}}),getDialogSizeClass=size=>{switch(size){case"large":return Optional.some("tox-dialog--width-lg");case"medium":return Optional.some("tox-dialog--width-md");default:return Optional.none()}},updateDialogSizeClass=(size,component)=>{const dialogBody=SugarElement.fromDom(component.element.dom);has(dialogBody,"tox-dialog--fullscreen")||(remove$1(dialogBody,["tox-dialog--width-lg","tox-dialog--width-md"]),getDialogSizeClass(size).each((dialogSizeClass=>add$2(dialogBody,dialogSizeClass))))},toggleFullscreen=(comp,currentSize)=>{const dialogBody=SugarElement.fromDom(comp.element.dom),classes=get$7(dialogBody);((element,classes)=>{each$1(classes,(x=>{toggle$4(element,x)}))})(dialogBody,["tox-dialog--fullscreen",...find$5(classes,(c=>"tox-dialog--width-lg"===c||"tox-dialog--width-md"===c)).or(getDialogSizeClass(currentSize)).toArray()])},renderModalDialog=(spec,dialogEvents,backstage)=>build$1(renderDialog$1({...spec,firstTabstop:1,lazySink:backstage.shared.getSink,extraBehaviours:[memory({}),...spec.extraBehaviours],onEscape:comp=>{emit(comp,formCancelEvent)},dialogEvents:dialogEvents,eventOrder:{[receive()]:[Reflecting.name(),Receiving.name()],[attachedToDom()]:["scroll-lock",Reflecting.name(),"messages","dialog-events","alloy.base.behaviour"],[detachedFromDom()]:["alloy.base.behaviour","dialog-events","messages",Reflecting.name(),"scroll-lock"]}})),mapMenuButtons=(buttons,menuItemStates={})=>map$2(buttons,(button=>"menu"===button.type?(button=>{const items=map$2(button.items,(item=>{const cell=get$g(menuItemStates,item.name).getOr(Cell(!1));return{...item,storage:cell}}));return{...button,items:items}})(button):button)),extractCellsToObject=buttons=>foldl(buttons,((acc,button)=>{if("menu"===button.type){return foldl(button.items,((innerAcc,item)=>(innerAcc[item.name]=item.storage,innerAcc)),acc)}return acc}),{}),initCommonEvents=(fireApiEvent,extras)=>[runWithTarget(focusin(),onFocus),fireApiEvent(formCloseEvent,((_api,spec,_event,self)=>{active$1(getRootNode(self.element)).fold(noop,blur$1),extras.onClose(),spec.onClose()})),fireApiEvent(formCancelEvent,((api,spec,_event,self)=>{spec.onCancel(api),emit(self,formCloseEvent)})),run$1(formUnblockEvent,((_c,_se)=>extras.onUnblock())),run$1(formBlockEvent,((_c,se)=>extras.onBlock(se.event)))],initDialog=(getInstanceApi,extras,getSink)=>{const fireApiEvent=(eventName,f)=>run$1(eventName,((c,se)=>{withSpec(c,((spec,_c)=>{f(getInstanceApi(),spec,se.event,c)}))})),withSpec=(c,f)=>{Reflecting.getState(c).get().each((currentDialogInit=>{f(currentDialogInit.internalDialog,c)}))};return[...initCommonEvents(fireApiEvent,extras),fireApiEvent(formSubmitEvent,((api,spec)=>spec.onSubmit(api))),fireApiEvent(formChangeEvent,((api,spec,event)=>{spec.onChange(api,{name:event.name})})),fireApiEvent(formActionEvent,((api,spec,event,component)=>{const focusIn=()=>component.getSystem().isConnected()?Keying.focusIn(component):void 0,isDisabled=focused=>has$1(focused,"disabled")||getOpt(focused,"aria-disabled").exists((val=>"true"===val)),rootNode=getRootNode(component.element),current=active$1(rootNode);spec.onAction(api,{name:event.name,value:event.value}),active$1(rootNode).fold(focusIn,(focused=>{isDisabled(focused)||current.exists((cur=>contains(focused,cur)&&isDisabled(cur)))?focusIn():getSink().toOptional().filter((sink=>!contains(sink.element,focused))).each(focusIn)}))})),fireApiEvent(formTabChangeEvent,((api,spec,event)=>{spec.onTabChange(api,{newTabName:event.name,oldTabName:event.oldName})})),runOnDetached((component=>{const api=getInstanceApi();Representing.setValue(component,api.getData())}))]},renderComponents=(_data,state)=>{const footerButtons=state.map((s=>s.footerButtons)).getOr([]),buttonGroups=partition$3(footerButtons,(button=>"start"===button.align)),makeGroup=(edge,buttons)=>Container.sketch({dom:{tag:"div",classes:[`tox-dialog__footer-${edge}`]},components:map$2(buttons,(button=>button.memento.asSpec()))});return[makeGroup("start",buttonGroups.pass),makeGroup("end",buttonGroups.fail)]},renderFooter=(initSpec,dialogId,backstage)=>({dom:fromHtml('<div class="tox-dialog__footer"></div>'),components:[],behaviours:derive$1([Reflecting.config({channel:`${footerChannel}-${dialogId}`,initialData:initSpec,updateState:(comp,data)=>{const footerButtons=map$2(data.buttons,(button=>{const memButton=record(((button,backstage)=>renderFooterButton(button,button.type,backstage))(button,backstage));return{name:button.name,align:button.align,memento:memButton}}));return Optional.some({lookupByName:buttonName=>((compInSystem,footerButtons,buttonName)=>find$5(footerButtons,(button=>button.name===buttonName)).bind((memButton=>memButton.memento.getOpt(compInSystem))))(comp,footerButtons,buttonName),footerButtons:footerButtons})},renderComponents:renderComponents})])}),renderModalFooter=(initSpec,dialogId,backstage)=>ModalDialog.parts.footer(renderFooter(initSpec,dialogId,backstage)),getCompByName=(access,name)=>{if(access.getRoot().getSystem().isConnected()){const form=Composing.getCurrent(access.getFormWrapper()).getOr(access.getFormWrapper());return Form.getField(form,name).orThunk((()=>{const footerState=access.getFooter().bind((f=>Reflecting.getState(f).get()));return footerState.bind((f=>f.lookupByName(name)))}))}return Optional.none()},getDialogApi=(access,doRedial,menuItemStates)=>{const withRoot=f=>{const root=access.getRoot();root.getSystem().isConnected()&&f(root)},instanceApi={getData:()=>{const root=access.getRoot(),valueComp=root.getSystem().isConnected()?access.getFormWrapper():root;return{...Representing.getValue(valueComp),...map$1(menuItemStates,(cell=>cell.get()))}},setData:newData=>{withRoot((_=>{const prevData=instanceApi.getData(),mergedData=deepMerge(prevData,newData),newInternalData=((access,data)=>{const root=access.getRoot();return Reflecting.getState(root).get().map((dialogState=>getOrDie(asRaw("data",dialogState.dataValidator,data)))).getOr(data)})(access,mergedData),form=access.getFormWrapper();Representing.setValue(form,newInternalData),each(menuItemStates,((v,k)=>{has$2(mergedData,k)&&v.set(mergedData[k])}))}))},setEnabled:(name,state)=>{getCompByName(access,name).each(state?Disabling.enable:Disabling.disable)},focus:name=>{getCompByName(access,name).each(Focusing.focus)},block:message=>{if(!isString(message))throw new Error("The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument");withRoot((root=>{emitWith(root,formBlockEvent,{message:message})}))},unblock:()=>{withRoot((root=>{emit(root,formUnblockEvent)}))},showTab:name=>{withRoot((_=>{const body=access.getBody();Reflecting.getState(body).get().exists((b=>b.isTabPanel()))&&Composing.getCurrent(body).each((tabSection=>{TabSection.showTab(tabSection,name)}))}))},redial:d=>{withRoot((root=>{const id=access.getId(),dialogInit=doRedial(d),storedMenuButtons=mapMenuButtons(dialogInit.internalDialog.buttons,menuItemStates);root.getSystem().broadcastOn([`${dialogChannel}-${id}`],dialogInit),root.getSystem().broadcastOn([`${titleChannel}-${id}`],dialogInit.internalDialog),root.getSystem().broadcastOn([`${bodyChannel}-${id}`],dialogInit.internalDialog),root.getSystem().broadcastOn([`${footerChannel}-${id}`],{...dialogInit.internalDialog,buttons:storedMenuButtons}),instanceApi.setData(dialogInit.initialData)}))},close:()=>{withRoot((root=>{emit(root,formCloseEvent)}))},toggleFullscreen:access.toggleFullscreen};return instanceApi},renderDialog=(dialogInit,extra,backstage)=>{const dialogId=generate$6("dialog"),internalDialog=dialogInit.internalDialog,header=getHeader(internalDialog.title,dialogId,backstage),dialogSize=Cell(internalDialog.size),dialogSizeClasses=getDialogSizeClass(dialogSize.get()).toArray(),body=((spec,dialogId,backstage)=>{const bodySpec=renderBody(spec,dialogId,Optional.none(),backstage,!1);return ModalDialog.parts.body(bodySpec)})({body:internalDialog.body,initialData:internalDialog.initialData},dialogId,backstage),storedMenuButtons=mapMenuButtons(internalDialog.buttons),objOfCells=extractCellsToObject(storedMenuButtons),footer=someIf(0!==storedMenuButtons.length,renderModalFooter({buttons:storedMenuButtons},dialogId,backstage)),dialogEvents=initDialog((()=>instanceApi),getEventExtras((()=>dialog),backstage.shared.providers,extra),backstage.shared.getSink),spec={id:dialogId,header:header,body:body,footer:footer,extraClasses:dialogSizeClasses,extraBehaviours:[Reflecting.config({channel:`${dialogChannel}-${dialogId}`,updateState:(comp,incoming)=>(dialogSize.set(incoming.internalDialog.size),updateDialogSizeClass(incoming.internalDialog.size,comp),Optional.some(incoming)),initialData:dialogInit})],extraStyles:{}},dialog=renderModalDialog(spec,dialogEvents,backstage),modalAccess={getId:constant$1(dialogId),getRoot:constant$1(dialog),getBody:()=>ModalDialog.getBody(dialog),getFooter:()=>ModalDialog.getFooter(dialog),getFormWrapper:()=>{const outerForm=ModalDialog.getBody(dialog);return Composing.getCurrent(outerForm).getOr(outerForm)},toggleFullscreen:()=>{toggleFullscreen(dialog,dialogSize.get())}},instanceApi=getDialogApi(modalAccess,extra.redial,objOfCells);return{dialog:dialog,instanceApi:instanceApi}},renderInlineDialog=(dialogInit,extra,backstage,ariaAttrs=!1,refreshDocking)=>{const dialogId=generate$6("dialog"),dialogLabelId=generate$6("dialog-label"),dialogContentId=generate$6("dialog-content"),internalDialog=dialogInit.internalDialog,dialogSize=Cell(internalDialog.size),dialogSizeClass=getDialogSizeClass(dialogSize.get()).toArray(),memHeader=record(((spec,dialogId,titleId,providersBackstage)=>Container.sketch({dom:fromHtml('<div class="tox-dialog__header"></div>'),components:[renderTitle(spec,dialogId,Optional.some(titleId),providersBackstage),renderDragHandle(),renderClose(providersBackstage)],containerBehaviours:derive$1([Dragging.config({mode:"mouse",blockerClass:"blocker",getTarget:handle=>closest$1(handle,'[role="dialog"]').getOrDie(),snaps:{getSnapPoints:()=>[],leftAttr:"data-drag-left",topAttr:"data-drag-top"}})])}))({title:internalDialog.title,draggable:!0},dialogId,dialogLabelId,backstage.shared.providers)),memBody=record(((spec,dialogId,contentId,backstage,ariaAttrs)=>renderBody(spec,dialogId,Optional.some(contentId),backstage,ariaAttrs))({body:internalDialog.body,initialData:internalDialog.initialData},dialogId,dialogContentId,backstage,ariaAttrs)),storagedMenuButtons=mapMenuButtons(internalDialog.buttons),objOfCells=extractCellsToObject(storagedMenuButtons),optMemFooter=someIf(0!==storagedMenuButtons.length,record(((initSpec,dialogId,backstage)=>renderFooter(initSpec,dialogId,backstage))({buttons:storagedMenuButtons},dialogId,backstage))),dialogEvents=initDialog((()=>instanceApi),{onBlock:event=>{Blocking.block(dialog,((_comp,bs)=>{const headerHeight=memHeader.getOpt(dialog).map((dialog=>get$d(dialog.element)));return getBusySpec(event.message,bs,backstage.shared.providers,headerHeight)}))},onUnblock:()=>{Blocking.unblock(dialog)},onClose:()=>extra.closeWindow()},backstage.shared.getSink),dialog=build$1({dom:{tag:"div",classes:["tox-dialog","tox-dialog-inline",...dialogSizeClass],attributes:{role:"dialog","aria-labelledby":dialogLabelId}},eventOrder:{[receive()]:[Reflecting.name(),Receiving.name()],[execute$5()]:["execute-on-form"],[attachedToDom()]:["reflecting","execute-on-form"]},behaviours:derive$1([Keying.config({mode:"cyclic",onEscape:c=>(emit(c,formCloseEvent),Optional.some(!0)),useTabstopAt:elem=>!isPseudoStop(elem)&&("button"!==name$3(elem)||"disabled"!==get$f(elem,"disabled")),firstTabstop:1}),Reflecting.config({channel:`${dialogChannel}-${dialogId}`,updateState:(comp,incoming)=>(dialogSize.set(incoming.internalDialog.size),updateDialogSizeClass(incoming.internalDialog.size,comp),refreshDocking(),Optional.some(incoming)),initialData:dialogInit}),Focusing.config({}),config("execute-on-form",dialogEvents.concat([runOnSource(focusin(),((comp,_se)=>{Keying.focusIn(comp)})),run$1(focusShifted(),((comp,se)=>{comp.getSystem().broadcastOn([dialogFocusShiftedChannel],{newFocus:se.event.newFocus})}))])),Blocking.config({getRoot:()=>Optional.some(dialog)}),Replacing.config({}),memory({})]),components:[memHeader.asSpec(),memBody.asSpec(),...optMemFooter.map((memFooter=>memFooter.asSpec())).toArray()]}),instanceApi=getDialogApi({getId:constant$1(dialogId),getRoot:constant$1(dialog),getFooter:()=>optMemFooter.map((memFooter=>memFooter.get(dialog))),getBody:()=>memBody.get(dialog),getFormWrapper:()=>{const body=memBody.get(dialog);return Composing.getCurrent(body).getOr(body)},toggleFullscreen:()=>{toggleFullscreen(dialog,dialogSize.get())}},extra.redial,objOfCells);return{dialog:dialog,instanceApi:instanceApi}};var global=tinymce.util.Tools.resolve("tinymce.util.URI");const SUPPORTED_MESSAGE_ACTIONS=["insertContent","setContent","execCommand","close","block","unblock"],isSupportedMessage=data=>isObject(data)&&-1!==SUPPORTED_MESSAGE_ACTIONS.indexOf(data.mceAction),renderUrlDialog=(internalDialog,extra,editor,backstage)=>{const dialogId=generate$6("dialog"),header=getHeader(internalDialog.title,dialogId,backstage),body=(spec=>{const bodySpec={dom:{tag:"div",classes:["tox-dialog__content-js"]},components:[{dom:{tag:"div",classes:["tox-dialog__body-iframe"]},components:[craft(Optional.none(),{dom:{tag:"iframe",attributes:{src:spec.url}},behaviours:derive$1([Tabstopping.config({}),Focusing.config({})])})]}],behaviours:derive$1([Keying.config({mode:"acyclic",useTabstopAt:not(isPseudoStop)})])};return ModalDialog.parts.body(bodySpec)})(internalDialog),footer=internalDialog.buttons.bind((buttons=>0===buttons.length?Optional.none():Optional.some(renderModalFooter({buttons:buttons},dialogId,backstage)))),dialogEvents=((getInstanceApi,extras)=>{const fireApiEvent=(eventName,f)=>run$1(eventName,((c,se)=>{withSpec(c,((spec,_c)=>{f(getInstanceApi(),spec,se.event,c)}))})),withSpec=(c,f)=>{Reflecting.getState(c).get().each((currentDialog=>{f(currentDialog,c)}))};return[...initCommonEvents(fireApiEvent,extras),fireApiEvent(formActionEvent,((api,spec,event)=>{spec.onAction(api,{name:event.name})}))]})((()=>instanceApi),getEventExtras((()=>dialog),backstage.shared.providers,extra)),styles={...internalDialog.height.fold((()=>({})),(height=>({height:height+"px","max-height":height+"px"}))),...internalDialog.width.fold((()=>({})),(width=>({width:width+"px","max-width":width+"px"})))},classes=internalDialog.width.isNone()&&internalDialog.height.isNone()?["tox-dialog--width-lg"]:[],iframeUri=new global(internalDialog.url,{base_uri:new global(window.location.href)}),iframeDomain=`${iframeUri.protocol}://${iframeUri.host}${iframeUri.port?":"+iframeUri.port:""}`,messageHandlerUnbinder=unbindable(),extraBehaviours=[Reflecting.config({channel:`${dialogChannel}-${dialogId}`,updateState:(_comp,incoming)=>Optional.some(incoming),initialData:internalDialog}),config("messages",[runOnAttached((()=>{const unbind=bind(SugarElement.fromDom(window),"message",(e=>{if(iframeUri.isSameOrigin(new global(e.raw.origin))){const data=e.raw.data;isSupportedMessage(data)?((editor,api,data)=>{switch(data.mceAction){case"insertContent":editor.insertContent(data.content);break;case"setContent":editor.setContent(data.content);break;case"execCommand":const ui=!!isBoolean(data.ui)&&data.ui;editor.execCommand(data.cmd,ui,data.value);break;case"close":api.close();break;case"block":api.block(data.message);break;case"unblock":api.unblock()}})(editor,instanceApi,data):(data=>!isSupportedMessage(data)&&isObject(data)&&has$2(data,"mceAction"))(data)&&internalDialog.onMessage(instanceApi,data)}}));messageHandlerUnbinder.set(unbind)})),runOnDetached(messageHandlerUnbinder.clear)]),Receiving.config({channels:{[bodySendMessageChannel]:{onReceive:(comp,data)=>{descendant(comp.element,"iframe").each((iframeEle=>{const iframeWin=iframeEle.dom.contentWindow;isNonNullable(iframeWin)&&iframeWin.postMessage(data,iframeDomain)}))}}}})],dialog=renderModalDialog({id:dialogId,header:header,body:body,footer:footer,extraClasses:classes,extraBehaviours:extraBehaviours,extraStyles:styles},dialogEvents,backstage),instanceApi=(root=>{const withRoot=f=>{root.getSystem().isConnected()&&f(root)};return{block:message=>{if(!isString(message))throw new Error("The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument");withRoot((root=>{emitWith(root,formBlockEvent,{message:message})}))},unblock:()=>{withRoot((root=>{emit(root,formUnblockEvent)}))},close:()=>{withRoot((root=>{emit(root,formCloseEvent)}))},sendMessage:data=>{withRoot((root=>{root.getSystem().broadcastOn([bodySendMessageChannel],data)}))}}})(dialog);return{dialog:dialog,instanceApi:instanceApi}},validateData=(data,validator)=>getOrDie(asRaw("data",validator,data)),isAlertOrConfirmDialog=target=>closest(target,".tox-alert-dialog")||closest(target,".tox-confirm-dialog"),inlineAdditionalBehaviours=(editor,isStickyToolbar,isToolbarLocationTop)=>isStickyToolbar&&isToolbarLocationTop?[]:[Docking.config({contextual:{lazyContext:()=>Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),fadeInClass:"tox-dialog-dock-fadein",fadeOutClass:"tox-dialog-dock-fadeout",transitionClass:"tox-dialog-dock-transition"},modes:["top"],lazyViewport:comp=>detectWhenSplitUiMode(editor,comp.element).map((sc=>({bounds:getBoundsFrom(sc),optScrollEnv:Optional.some({currentScrollTop:sc.element.dom.scrollTop,scrollElmTop:absolute$3(sc.element).top})}))).getOrThunk((()=>({bounds:win(),optScrollEnv:Optional.none()})))})],setup=extras=>{const editor=extras.editor,isStickyToolbar$1=isStickyToolbar(editor),alertDialog=(backstage=>{const sharedBackstage=backstage.shared;return{open:(message,callback)=>{const closeDialog=()=>{ModalDialog.hide(alertDialog),callback()},memFooterClose=record(renderFooterButton({name:"close-alert",text:"OK",primary:!0,buttonType:Optional.some("primary"),align:"end",enabled:!0,icon:Optional.none()},"cancel",backstage)),titleSpec=pUntitled(),closeSpec=pClose(closeDialog,sharedBackstage.providers),alertDialog=build$1(renderDialog$1({lazySink:()=>sharedBackstage.getSink(),header:hiddenHeader(titleSpec,closeSpec),body:pBodyMessage(message,sharedBackstage.providers),footer:Optional.some(pFooter(pFooterGroup([],[memFooterClose.asSpec()]))),onEscape:closeDialog,extraClasses:["tox-alert-dialog"],extraBehaviours:[],extraStyles:{},dialogEvents:[run$1(formCancelEvent,closeDialog)],eventOrder:{}}));ModalDialog.show(alertDialog);const footerCloseButton=memFooterClose.get(alertDialog);Focusing.focus(footerCloseButton)}}})(extras.backstages.dialog),confirmDialog=(backstage=>{const sharedBackstage=backstage.shared;return{open:(message,callback)=>{const closeDialog=state=>{ModalDialog.hide(confirmDialog),callback(state)},memFooterYes=record(renderFooterButton({name:"yes",text:"Yes",primary:!0,buttonType:Optional.some("primary"),align:"end",enabled:!0,icon:Optional.none()},"submit",backstage)),footerNo=renderFooterButton({name:"no",text:"No",primary:!1,buttonType:Optional.some("secondary"),align:"end",enabled:!0,icon:Optional.none()},"cancel",backstage),titleSpec=pUntitled(),closeSpec=pClose((()=>closeDialog(!1)),sharedBackstage.providers),confirmDialog=build$1(renderDialog$1({lazySink:()=>sharedBackstage.getSink(),header:hiddenHeader(titleSpec,closeSpec),body:pBodyMessage(message,sharedBackstage.providers),footer:Optional.some(pFooter(pFooterGroup([],[footerNo,memFooterYes.asSpec()]))),onEscape:()=>closeDialog(!1),extraClasses:["tox-confirm-dialog"],extraBehaviours:[],extraStyles:{},dialogEvents:[run$1(formCancelEvent,(()=>closeDialog(!1))),run$1(formSubmitEvent,(()=>closeDialog(!0)))],eventOrder:{}}));ModalDialog.show(confirmDialog);const footerYesButton=memFooterYes.get(confirmDialog);Focusing.focus(footerYesButton)}}})(extras.backstages.dialog),openModalUrlDialog=(config,closeWindow)=>DialogManager.openUrl((contents=>{const dialog=renderUrlDialog(contents,{closeWindow:()=>{ModalDialog.hide(dialog.dialog),closeWindow(dialog.instanceApi)}},editor,extras.backstages.dialog);return ModalDialog.show(dialog.dialog),dialog.instanceApi}),config),openModalDialog=(config,closeWindow)=>DialogManager.open(((contents,internalInitialData,dataValidator)=>{const initialData=internalInitialData,dialog=renderDialog({dataValidator:dataValidator,initialData:initialData,internalDialog:contents},{redial:DialogManager.redial,closeWindow:()=>{ModalDialog.hide(dialog.dialog),closeWindow(dialog.instanceApi)}},extras.backstages.dialog);return ModalDialog.show(dialog.dialog),dialog.instanceApi.setData(initialData),dialog.instanceApi}),config),openInlineDialog=(config$1,anchor,closeWindow,windowParams)=>DialogManager.open(((contents,internalInitialData,dataValidator)=>{const initialData=validateData(internalInitialData,dataValidator),inlineDialog=value$2(),isToolbarLocationTop=extras.backstages.popup.shared.header.isPositionedAtTop(),refreshDocking=()=>inlineDialog.on((dialog=>{InlineView.reposition(dialog),isStickyToolbar$1&&isToolbarLocationTop||Docking.refresh(dialog)})),dialogUi=renderInlineDialog({dataValidator:dataValidator,initialData:initialData,internalDialog:contents},{redial:DialogManager.redial,closeWindow:()=>{inlineDialog.on(InlineView.hide),editor.off("ResizeEditor",refreshDocking),inlineDialog.clear(),closeWindow(dialogUi.instanceApi)}},extras.backstages.popup,windowParams.ariaAttrs,refreshDocking),inlineDialogComp=build$1(InlineView.sketch({lazySink:extras.backstages.popup.shared.getSink,dom:{tag:"div",classes:[]},fireDismissalEventInstead:windowParams.persistent?{event:"doNotDismissYet"}:{},...isToolbarLocationTop?{}:{fireRepositionEventInstead:{}},inlineBehaviours:derive$1([config("window-manager-inline-events",[run$1(dismissRequested(),((_comp,_se)=>{emit(dialogUi.dialog,formCancelEvent)}))]),...inlineAdditionalBehaviours(editor,isStickyToolbar$1,isToolbarLocationTop)]),isExtraPart:(_comp,target)=>isAlertOrConfirmDialog(target)}));inlineDialog.set(inlineDialogComp);return InlineView.showWithinBounds(inlineDialogComp,premade(dialogUi.dialog),{anchor:anchor},(()=>{const elem=editor.inline?body():SugarElement.fromDom(editor.getContainer()),bounds=box$1(elem);return Optional.some(bounds)})),isStickyToolbar$1&&isToolbarLocationTop||(Docking.refresh(inlineDialogComp),editor.on("ResizeEditor",refreshDocking)),dialogUi.instanceApi.setData(initialData),Keying.focusIn(dialogUi.dialog),dialogUi.instanceApi}),config$1),openBottomInlineDialog=(config$1,anchor,closeWindow,windowParams)=>DialogManager.open(((contents,internalInitialData,dataValidator)=>{const initialData=validateData(internalInitialData,dataValidator),inlineDialog=value$2(),isToolbarLocationTop=extras.backstages.popup.shared.header.isPositionedAtTop(),refreshDocking=()=>inlineDialog.on((dialog=>{InlineView.reposition(dialog),Docking.refresh(dialog)})),dialogUi=renderInlineDialog({dataValidator:dataValidator,initialData:initialData,internalDialog:contents},{redial:DialogManager.redial,closeWindow:()=>{inlineDialog.on(InlineView.hide),editor.off("ResizeEditor ScrollWindow ElementScroll",refreshDocking),inlineDialog.clear(),closeWindow(dialogUi.instanceApi)}},extras.backstages.popup,windowParams.ariaAttrs,refreshDocking),inlineDialogComp=build$1(InlineView.sketch({lazySink:extras.backstages.popup.shared.getSink,dom:{tag:"div",classes:[]},fireDismissalEventInstead:windowParams.persistent?{event:"doNotDismissYet"}:{},...isToolbarLocationTop?{}:{fireRepositionEventInstead:{}},inlineBehaviours:derive$1([config("window-manager-inline-events",[run$1(dismissRequested(),((_comp,_se)=>{emit(dialogUi.dialog,formCancelEvent)}))]),Docking.config({contextual:{lazyContext:()=>Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),fadeInClass:"tox-dialog-dock-fadein",fadeOutClass:"tox-dialog-dock-fadeout",transitionClass:"tox-dialog-dock-transition"},modes:["top","bottom"],lazyViewport:comp=>detectWhenSplitUiMode(editor,comp.element).map((sc=>({bounds:getBoundsFrom(sc),optScrollEnv:Optional.some({currentScrollTop:sc.element.dom.scrollTop,scrollElmTop:absolute$3(sc.element).top})}))).getOrThunk((()=>({bounds:win(),optScrollEnv:Optional.none()})))})]),isExtraPart:(_comp,target)=>isAlertOrConfirmDialog(target)}));inlineDialog.set(inlineDialogComp);return InlineView.showWithinBounds(inlineDialogComp,premade(dialogUi.dialog),{anchor:anchor},(()=>extras.backstages.popup.shared.getSink().toOptional().bind((s=>{const bounds$1=detectWhenSplitUiMode(editor,s.element).map((sc=>getBoundsFrom(sc))).getOr(win()),contentAreaContainer=box$1(SugarElement.fromDom(editor.getContentAreaContainer())),constrainedBounds=constrain(contentAreaContainer,bounds$1);return Optional.some(bounds(constrainedBounds.x,constrainedBounds.y,constrainedBounds.width,constrainedBounds.height-15))})))),Docking.refresh(inlineDialogComp),editor.on("ResizeEditor ScrollWindow ElementScroll ResizeWindow",refreshDocking),dialogUi.instanceApi.setData(initialData),Keying.focusIn(dialogUi.dialog),dialogUi.instanceApi}),config$1);return{open:(config,params,closeWindow)=>{if(!isUndefined(params)){if("toolbar"===params.inline)return openInlineDialog(config,extras.backstages.popup.shared.anchors.inlineDialog(),closeWindow,params);if("bottom"===params.inline)return openBottomInlineDialog(config,extras.backstages.popup.shared.anchors.inlineBottomDialog(),closeWindow,params);if("cursor"===params.inline)return openInlineDialog(config,extras.backstages.popup.shared.anchors.cursor(),closeWindow,params)}return openModalDialog(config,closeWindow)},openUrl:(config,closeWindow)=>openModalUrlDialog(config,closeWindow),alert:(message,callback)=>{alertDialog.open(message,callback)},close:instanceApi=>{instanceApi.close()},confirm:(message,callback)=>{confirmDialog.open(message,callback)}}},registerOptions=editor=>{register$e(editor),(editor=>{const registerOption=editor.options.register,colorProcessor=value=>isArrayOf(value,isString)?{value:mapColors(value),valid:!0}:{valid:!1,message:"Must be an array of strings."},colorColsProcessor=value=>isNumber(value)&&value>0?{value:value,valid:!0}:{valid:!1,message:"Must be a positive number."};registerOption("color_map",{processor:colorProcessor,default:["#BFEDD2","Light Green","#FBEEB8","Light Yellow","#F8CAC6","Light Red","#ECCAFA","Light Purple","#C2E0F4","Light Blue","#2DC26B","Green","#F1C40F","Yellow","#E03E2D","Red","#B96AD9","Purple","#3598DB","Blue","#169179","Dark Turquoise","#E67E23","Orange","#BA372A","Dark Red","#843FA1","Dark Purple","#236FA1","Dark Blue","#ECF0F1","Light Gray","#CED4D9","Medium Gray","#95A5A6","Gray","#7E8C8D","Dark Gray","#34495E","Navy Blue","#000000","Black","#ffffff","White"]}),registerOption("color_map_background",{processor:colorProcessor}),registerOption("color_map_foreground",{processor:colorProcessor}),registerOption("color_cols",{processor:colorColsProcessor,default:calcCols(editor)}),registerOption("color_cols_foreground",{processor:colorColsProcessor,default:defaultCols(editor,"forecolor")}),registerOption("color_cols_background",{processor:colorColsProcessor,default:defaultCols(editor,"hilitecolor")}),registerOption("custom_colors",{processor:"boolean",default:!0}),registerOption("color_default_foreground",{processor:"string",default:"#000000"}),registerOption("color_default_background",{processor:"string",default:"#000000"})})(editor),(editor=>{const registerOption=editor.options.register;registerOption("contextmenu_avoid_overlap",{processor:"string",default:""}),registerOption("contextmenu_never_use_native",{processor:"boolean",default:!1}),registerOption("contextmenu",{processor:value=>!1===value?{value:[],valid:!0}:isString(value)||isArrayOf(value,isString)?{value:patchPipeConfig(value),valid:!0}:{valid:!1,message:"Must be false or a string."},default:"link linkchecker image editimage table spellchecker configurepermanentpen"})})(editor)};global$a.add("silver",(editor=>{registerOptions(editor);let popupSinkBounds=()=>win();const{dialogs:dialogs,popups:popups,renderUI:renderModeUI}=setup$3(editor,{getPopupSinkBounds:()=>popupSinkBounds()});Autocompleter_register(editor,popups.backstage.shared);const windowMgr=setup({editor:editor,backstages:{popup:popups.backstage,dialog:dialogs.backstage}});return{renderUI:()=>{const renderResult=renderModeUI();return detectWhenSplitUiMode(editor,popups.getMothership().element).each((sc=>{popupSinkBounds=()=>getBoundsFrom(sc)})),renderResult},getWindowManagerImpl:constant$1(windowMgr),getNotificationManagerImpl:()=>((editor,extras,uiMothership)=>{const sharedBackstage=extras.backstage.shared,getBounds=()=>{const contentArea=box$1(SugarElement.fromDom(editor.getContentAreaContainer())),win$1=win(),x=clamp(win$1.x,contentArea.x,contentArea.right),y=clamp(win$1.y,contentArea.y,contentArea.bottom),right=Math.max(contentArea.right,win$1.right),bottom=Math.max(contentArea.bottom,win$1.bottom);return Optional.some(bounds(x,y,right-x,bottom-y))};return{open:(settings,closeCallback)=>{const close=()=>{closeCallback(),InlineView.hide(notificationWrapper)},notification=build$1(Notification.sketch({text:settings.text,level:contains$2(["success","error","warning","warn","info"],settings.type)?settings.type:void 0,progress:!0===settings.progressBar,icon:settings.icon,closeButton:settings.closeButton,onAction:close,iconProvider:sharedBackstage.providers.icons,translationProvider:sharedBackstage.providers.translate})),notificationWrapper=build$1(InlineView.sketch({dom:{tag:"div",classes:["tox-notifications-container"]},lazySink:sharedBackstage.getSink,fireDismissalEventInstead:{},...sharedBackstage.header.isPositionedAtTop()?{}:{fireRepositionEventInstead:{}}}));uiMothership.add(notificationWrapper),isNumber(settings.timeout)&&settings.timeout>0&&global$9.setEditorTimeout(editor,(()=>{close()}),settings.timeout);const thisNotification={close:close,reposition:()=>{const notificationSpec=premade(notification),anchorOverrides={maxHeightFunction:expandable$1()},allNotifications=editor.notificationManager.getNotifications();if(allNotifications[0]===thisNotification){const anchor={...sharedBackstage.anchors.banner(),overrides:anchorOverrides};InlineView.showWithinBounds(notificationWrapper,notificationSpec,{anchor:anchor},getBounds)}else indexOf(allNotifications,thisNotification).each((idx=>{const previousNotification=allNotifications[idx-1].getEl(),nodeAnchor={type:"node",root:body(),node:Optional.some(SugarElement.fromDom(previousNotification)),overrides:anchorOverrides,layouts:{onRtl:()=>[south$2],onLtr:()=>[south$2]}};InlineView.showWithinBounds(notificationWrapper,notificationSpec,{anchor:nodeAnchor},getBounds)}))},text:nuText=>{Notification.updateText(notification,nuText)},settings:settings,getEl:()=>notification.element.dom,progressBar:{value:percent=>{Notification.updateProgress(notification,percent)}}};return thisNotification},close:notification=>{notification.close()},getArgs:notification=>notification.settings}})(editor,{backstage:popups.backstage},popups.getMothership())}}))}();